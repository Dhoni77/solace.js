{
	"id": 0,
	"name": "solace.js",
	"variant": "project",
	"kind": 1,
	"flags": {},
	"children": [
		{
			"id": 735,
			"name": "Activity",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Represents an activity."
					}
				]
			},
			"children": [
				{
					"id": 736,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"sources": [
						{
							"fileName": "src/structures/Activity.ts",
							"line": 24,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/Activity.ts#L24"
						}
					],
					"signatures": [
						{
							"id": 737,
							"name": "new Activity",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Creates a new Activity instance."
									}
								]
							},
							"sources": [
								{
									"fileName": "src/structures/Activity.ts",
									"line": 24,
									"character": 4,
									"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/Activity.ts#L24"
								}
							],
							"parameters": [
								{
									"id": 738,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The data object containing activity information."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 356,
										"name": "ApiActivity",
										"package": "solace.js"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 735,
								"name": "Activity",
								"package": "solace.js"
							}
						}
					]
				},
				{
					"id": 739,
					"name": "partyId",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPublic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the party associated with the activity, or null if not applicable."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/structures/Activity.ts",
							"line": 12,
							"character": 11,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/Activity.ts#L12"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 740,
					"name": "type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPublic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The type of the activity."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/structures/Activity.ts",
							"line": 18,
							"character": 11,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/Activity.ts#L18"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						736
					]
				},
				{
					"title": "Properties",
					"children": [
						739,
						740
					]
				}
			],
			"sources": [
				{
					"fileName": "src/structures/Activity.ts",
					"line": 6,
					"character": 13,
					"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/Activity.ts#L6"
				}
			]
		},
		{
			"id": 741,
			"name": "Application",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Represents an application."
					}
				]
			},
			"children": [
				{
					"id": 742,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"sources": [
						{
							"fileName": "src/structures/Application.ts",
							"line": 150,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/Application.ts#L150"
						}
					],
					"signatures": [
						{
							"id": 743,
							"name": "new Application",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Creates a new Application instance."
									}
								]
							},
							"sources": [
								{
									"fileName": "src/structures/Application.ts",
									"line": 150,
									"character": 4,
									"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/Application.ts#L150"
								}
							],
							"parameters": [
								{
									"id": 744,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The data object containing application information."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 359,
										"name": "ApiApplication",
										"package": "solace.js"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 741,
								"name": "Application",
								"package": "solace.js"
							}
						}
					]
				},
				{
					"id": 745,
					"name": "approximateGuildCount",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The approximate number of guilds this application is in, or null if unknown."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/structures/Application.ts",
							"line": 18,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/Application.ts#L18"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 746,
					"name": "botPublic",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Indicates whether the bot is publicly listed."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/structures/Application.ts",
							"line": 24,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/Application.ts#L24"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 747,
					"name": "botRequireCodeGrant",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Indicates whether the bot requires code grant."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/structures/Application.ts",
							"line": 30,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/Application.ts#L30"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 748,
					"name": "coverImage",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The URL of the cover image, or null if not provided."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/structures/Application.ts",
							"line": 36,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/Application.ts#L36"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 749,
					"name": "customInstallUrl",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The custom installation URL for the application, or null if not provided."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/structures/Application.ts",
							"line": 42,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/Application.ts#L42"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 750,
					"name": "description",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The description of the application."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/structures/Application.ts",
							"line": 48,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/Application.ts#L48"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 751,
					"name": "flags",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Flags associated with the application, or null if not provided."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/structures/Application.ts",
							"line": 54,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/Application.ts#L54"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 752,
					"name": "guild",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The guild associated with the application, or null if not applicable."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/structures/Application.ts",
							"line": 60,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/Application.ts#L60"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": 877,
								"name": "Guild",
								"package": "solace.js"
							}
						]
					}
				},
				{
					"id": 753,
					"name": "guildId",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the guild associated with the application, or null if not applicable."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/structures/Application.ts",
							"line": 66,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/Application.ts#L66"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 754,
					"name": "icon",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The URL of the application's icon, or null if not provided."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/structures/Application.ts",
							"line": 72,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/Application.ts#L72"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 755,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the application."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/structures/Application.ts",
							"line": 78,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/Application.ts#L78"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 756,
					"name": "installParams",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Installation parameters for the application, or null if not provided."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/structures/Application.ts",
							"line": 84,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/Application.ts#L84"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": 767,
								"name": "ApplicationInstallParams",
								"package": "solace.js"
							}
						]
					}
				},
				{
					"id": 757,
					"name": "owner",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The owner of the application, or null if not applicable."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/structures/Application.ts",
							"line": 90,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/Application.ts#L90"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": 1098,
								"name": "User",
								"package": "solace.js"
							}
						]
					}
				},
				{
					"id": 758,
					"name": "privacyPolicyUrl",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The URL of the privacy policy of the application, or null if not provided."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/structures/Application.ts",
							"line": 96,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/Application.ts#L96"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 760,
					"name": "roleConnectionsVerificationUrl",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The URL used for role connections verification, or null if not provided."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/structures/Application.ts",
							"line": 108,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/Application.ts#L108"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 759,
					"name": "rpcOrigins",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Origins for RPC (Rich Presence) interactions, or null if not provided."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/structures/Application.ts",
							"line": 102,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/Application.ts#L102"
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 761,
					"name": "slug",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The slug of the application, or null if not provided."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/structures/Application.ts",
							"line": 114,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/Application.ts#L114"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 762,
					"name": "summary",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A summary of the application."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/structures/Application.ts",
							"line": 120,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/Application.ts#L120"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 763,
					"name": "tags",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Tags associated with the application, or null if not provided."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/structures/Application.ts",
							"line": 126,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/Application.ts#L126"
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 764,
					"name": "team",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The team associated with the application, or null if not applicable."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/structures/Application.ts",
							"line": 132,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/Application.ts#L132"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": 1057,
								"name": "Team",
								"package": "solace.js"
							}
						]
					}
				},
				{
					"id": 765,
					"name": "termsOfServiceUrl",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The URL of the terms of service of the application, or null if not provided."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/structures/Application.ts",
							"line": 138,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/Application.ts#L138"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 766,
					"name": "verifyKey",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The verification key of the application."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/structures/Application.ts",
							"line": 144,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/Application.ts#L144"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						742
					]
				},
				{
					"title": "Properties",
					"children": [
						745,
						746,
						747,
						748,
						749,
						750,
						751,
						752,
						753,
						754,
						755,
						756,
						757,
						758,
						760,
						759,
						761,
						762,
						763,
						764,
						765,
						766
					]
				}
			],
			"sources": [
				{
					"fileName": "src/structures/Application.ts",
					"line": 12,
					"character": 13,
					"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/Application.ts#L12"
				}
			]
		},
		{
			"id": 767,
			"name": "ApplicationInstallParams",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Represents installation parameters for an application."
					}
				]
			},
			"children": [
				{
					"id": 768,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"sources": [
						{
							"fileName": "src/structures/Application.ts",
							"line": 197,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/Application.ts#L197"
						}
					],
					"signatures": [
						{
							"id": 769,
							"name": "new ApplicationInstallParams",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Creates a new ApplicationInstallParams instance."
									}
								]
							},
							"sources": [
								{
									"fileName": "src/structures/Application.ts",
									"line": 197,
									"character": 4,
									"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/Application.ts#L197"
								}
							],
							"parameters": [
								{
									"id": 770,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The data object containing installation parameters."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 382,
										"name": "ApiApplicationInstallParams",
										"package": "solace.js"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 767,
								"name": "ApplicationInstallParams",
								"package": "solace.js"
							}
						}
					]
				},
				{
					"id": 771,
					"name": "permissions",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPublic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The permissions required for the installation."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/structures/Application.ts",
							"line": 185,
							"character": 11,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/Application.ts#L185"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 772,
					"name": "scopes",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPublic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The scopes associated with the installation."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/structures/Application.ts",
							"line": 191,
							"character": 11,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/Application.ts#L191"
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						768
					]
				},
				{
					"title": "Properties",
					"children": [
						771,
						772
					]
				}
			],
			"sources": [
				{
					"fileName": "src/structures/Application.ts",
					"line": 179,
					"character": 13,
					"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/Application.ts#L179"
				}
			]
		},
		{
			"id": 773,
			"name": "Attachment",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Represents an attachment."
					}
				]
			},
			"children": [
				{
					"id": 774,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"sources": [
						{
							"fileName": "src/structures/Attachment.ts",
							"line": 90,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/Attachment.ts#L90"
						}
					],
					"signatures": [
						{
							"id": 775,
							"name": "new Attachment",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Creates a new Attachment instance."
									}
								]
							},
							"sources": [
								{
									"fileName": "src/structures/Attachment.ts",
									"line": 90,
									"character": 4,
									"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/Attachment.ts#L90"
								}
							],
							"parameters": [
								{
									"id": 776,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The data object containing attachment information."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 385,
										"name": "ApiAttachment",
										"package": "solace.js"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 773,
								"name": "Attachment",
								"package": "solace.js"
							}
						}
					]
				},
				{
					"id": 777,
					"name": "contentType",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPublic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The content type of the attachment, or null if not provided."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/structures/Attachment.ts",
							"line": 12,
							"character": 11,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/Attachment.ts#L12"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 778,
					"name": "description",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPublic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A description of the attachment, or null if not provided."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/structures/Attachment.ts",
							"line": 18,
							"character": 11,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/Attachment.ts#L18"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 779,
					"name": "durationSecs",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPublic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The duration of the attachment in seconds, or null if not provided."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/structures/Attachment.ts",
							"line": 24,
							"character": 11,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/Attachment.ts#L24"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 780,
					"name": "ephemeral",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPublic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Indicates whether the attachment is ephemeral."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/structures/Attachment.ts",
							"line": 30,
							"character": 11,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/Attachment.ts#L30"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 781,
					"name": "filename",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPublic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The filename of the attachment."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/structures/Attachment.ts",
							"line": 36,
							"character": 11,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/Attachment.ts#L36"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 782,
					"name": "flags",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPublic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Flags associated with the attachment, or null if not provided."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/structures/Attachment.ts",
							"line": 42,
							"character": 11,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/Attachment.ts#L42"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 783,
					"name": "height",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPublic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The height of the attachment in pixels, or null if not provided."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/structures/Attachment.ts",
							"line": 48,
							"character": 11,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/Attachment.ts#L48"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 784,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPublic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The unique ID of the attachment."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/structures/Attachment.ts",
							"line": 54,
							"character": 11,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/Attachment.ts#L54"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 785,
					"name": "proxyUrl",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPublic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The proxy URL of the attachment."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/structures/Attachment.ts",
							"line": 60,
							"character": 11,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/Attachment.ts#L60"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 786,
					"name": "size",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPublic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The size of the attachment in bytes."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/structures/Attachment.ts",
							"line": 66,
							"character": 11,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/Attachment.ts#L66"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 787,
					"name": "url",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPublic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The URL of the attachment."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/structures/Attachment.ts",
							"line": 72,
							"character": 11,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/Attachment.ts#L72"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 788,
					"name": "waveform",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPublic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The waveform data of the attachment, or null if not provided."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/structures/Attachment.ts",
							"line": 78,
							"character": 11,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/Attachment.ts#L78"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 789,
					"name": "width",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPublic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The width of the attachment in pixels, or null if not provided."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/structures/Attachment.ts",
							"line": 84,
							"character": 11,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/Attachment.ts#L84"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						774
					]
				},
				{
					"title": "Properties",
					"children": [
						777,
						778,
						779,
						780,
						781,
						782,
						783,
						784,
						785,
						786,
						787,
						788,
						789
					]
				}
			],
			"sources": [
				{
					"fileName": "src/structures/Attachment.ts",
					"line": 6,
					"character": 13,
					"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/Attachment.ts#L6"
				}
			]
		},
		{
			"id": 790,
			"name": "Channel",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Represents a channel."
					}
				]
			},
			"children": [
				{
					"id": 791,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"sources": [
						{
							"fileName": "src/structures/Channel.ts",
							"line": 24,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/Channel.ts#L24"
						}
					],
					"signatures": [
						{
							"id": 792,
							"name": "new Channel",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Creates a new Channel instance."
									}
								]
							},
							"sources": [
								{
									"fileName": "src/structures/Channel.ts",
									"line": 24,
									"character": 4,
									"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/Channel.ts#L24"
								}
							],
							"parameters": [
								{
									"id": 793,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The data object containing channel information."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 399,
										"name": "ApiChannel",
										"package": "solace.js"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 790,
								"name": "Channel",
								"package": "solace.js"
							}
						}
					]
				},
				{
					"id": 794,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPublic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The unique ID of the channel."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/structures/Channel.ts",
							"line": 12,
							"character": 11,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/Channel.ts#L12"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 795,
					"name": "type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPublic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The type of the channel."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/structures/Channel.ts",
							"line": 18,
							"character": 11,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/Channel.ts#L18"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						791
					]
				},
				{
					"title": "Properties",
					"children": [
						794,
						795
					]
				}
			],
			"sources": [
				{
					"fileName": "src/structures/Channel.ts",
					"line": 6,
					"character": 13,
					"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/Channel.ts#L6"
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"target": 568,
					"name": "ApiGuildVoiceChannel"
				},
				{
					"type": "reference",
					"target": 1074,
					"name": "ThreadChannel"
				}
			]
		},
		{
			"id": 1,
			"name": "Client",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Represents a client that interacts with a WebSocket and communicates with discord."
					}
				]
			},
			"children": [
				{
					"id": 42,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"sources": [
						{
							"fileName": "src/client/Client.ts",
							"line": 28,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/client/Client.ts#L28"
						}
					],
					"signatures": [
						{
							"id": 43,
							"name": "new Client",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Creates a new Client instance."
									}
								]
							},
							"sources": [
								{
									"fileName": "src/client/Client.ts",
									"line": 28,
									"character": 4,
									"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/client/Client.ts#L28"
								}
							],
							"parameters": [
								{
									"id": 44,
									"name": "options",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The client configuration options."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 732,
										"name": "ClientOptions",
										"package": "solace.js"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 1,
								"name": "Client",
								"package": "solace.js"
							},
							"overwrites": {
								"type": "reference",
								"target": -1,
								"name": "EventEmitter.constructor"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"target": -1,
						"name": "EventEmitter.constructor"
					}
				},
				{
					"id": 47,
					"name": "options",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPublic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The client configuration options."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/client/Client.ts",
							"line": 28,
							"character": 23,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/client/Client.ts#L28"
						}
					],
					"type": {
						"type": "reference",
						"target": 732,
						"name": "ClientOptions",
						"package": "solace.js"
					}
				},
				{
					"id": 46,
					"name": "user",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPublic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The user associated with the client if logged in."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/client/Client.ts",
							"line": 22,
							"character": 11,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/client/Client.ts#L22"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": 1098,
								"name": "User",
								"package": "solace.js"
							}
						]
					},
					"defaultValue": "null"
				},
				{
					"id": 45,
					"name": "ws",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The WebSocket client used by the main client."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/client/Client.ts",
							"line": 17,
							"character": 12,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/client/Client.ts#L17"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": 129,
								"name": "WebsocketClient",
								"package": "solace.js"
							}
						]
					},
					"defaultValue": "null"
				},
				{
					"id": 39,
					"name": "captureRejectionSymbol",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isStatic": true,
						"isExternal": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Value: "
							},
							{
								"kind": "code",
								"text": "`Symbol.for('nodejs.rejection')`"
							},
							{
								"kind": "text",
								"text": "\n\nSee how to write a custom "
							},
							{
								"kind": "code",
								"text": "`rejection handler`"
							},
							{
								"kind": "text",
								"text": "."
							}
						],
						"blockTags": [
							{
								"tag": "@since",
								"content": [
									{
										"kind": "text",
										"text": "v13.4.0, v12.16.0"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
							"line": 390,
							"character": 24
						}
					],
					"type": {
						"type": "query",
						"queryType": {
							"type": "reference",
							"target": 39,
							"name": "captureRejectionSymbol",
							"package": "@types/node",
							"qualifiedName": "EventEmitter.captureRejectionSymbol"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "EventEmitter.captureRejectionSymbol"
					}
				},
				{
					"id": 40,
					"name": "captureRejections",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isStatic": true,
						"isExternal": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Value: [boolean](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Boolean_type)\n\nChange the default "
							},
							{
								"kind": "code",
								"text": "`captureRejections`"
							},
							{
								"kind": "text",
								"text": " option on all new "
							},
							{
								"kind": "code",
								"text": "`EventEmitter`"
							},
							{
								"kind": "text",
								"text": " objects."
							}
						],
						"blockTags": [
							{
								"tag": "@since",
								"content": [
									{
										"kind": "text",
										"text": "v13.4.0, v12.16.0"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
							"line": 397,
							"character": 15
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "EventEmitter.captureRejections"
					}
				},
				{
					"id": 41,
					"name": "defaultMaxListeners",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isStatic": true,
						"isExternal": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "By default, a maximum of "
							},
							{
								"kind": "code",
								"text": "`10`"
							},
							{
								"kind": "text",
								"text": " listeners can be registered for any single\nevent. This limit can be changed for individual "
							},
							{
								"kind": "code",
								"text": "`EventEmitter`"
							},
							{
								"kind": "text",
								"text": " instances\nusing the "
							},
							{
								"kind": "code",
								"text": "`emitter.setMaxListeners(n)`"
							},
							{
								"kind": "text",
								"text": " method. To change the default\nfor _all_"
							},
							{
								"kind": "code",
								"text": "`EventEmitter`"
							},
							{
								"kind": "text",
								"text": " instances, the "
							},
							{
								"kind": "code",
								"text": "`events.defaultMaxListeners`"
							},
							{
								"kind": "text",
								"text": "property can be used. If this value is not a positive number, a "
							},
							{
								"kind": "code",
								"text": "`RangeError`"
							},
							{
								"kind": "text",
								"text": "is thrown.\n\nTake caution when setting the "
							},
							{
								"kind": "code",
								"text": "`events.defaultMaxListeners`"
							},
							{
								"kind": "text",
								"text": " because the\nchange affects _all_"
							},
							{
								"kind": "code",
								"text": "`EventEmitter`"
							},
							{
								"kind": "text",
								"text": " instances, including those created before\nthe change is made. However, calling "
							},
							{
								"kind": "code",
								"text": "`emitter.setMaxListeners(n)`"
							},
							{
								"kind": "text",
								"text": " still has\nprecedence over "
							},
							{
								"kind": "code",
								"text": "`events.defaultMaxListeners`"
							},
							{
								"kind": "text",
								"text": ".\n\nThis is not a hard limit. The "
							},
							{
								"kind": "code",
								"text": "`EventEmitter`"
							},
							{
								"kind": "text",
								"text": " instance will allow\nmore listeners to be added but will output a trace warning to stderr indicating\nthat a \"possible EventEmitter memory leak\" has been detected. For any single"
							},
							{
								"kind": "code",
								"text": "`EventEmitter`"
							},
							{
								"kind": "text",
								"text": ", the "
							},
							{
								"kind": "code",
								"text": "`emitter.getMaxListeners()`"
							},
							{
								"kind": "text",
								"text": " and "
							},
							{
								"kind": "code",
								"text": "`emitter.setMaxListeners()`"
							},
							{
								"kind": "text",
								"text": "methods can be used to\ntemporarily avoid this warning:\n\n"
							},
							{
								"kind": "code",
								"text": "```js\nimport { EventEmitter } from 'node:events';\nconst emitter = new EventEmitter();\nemitter.setMaxListeners(emitter.getMaxListeners() + 1);\nemitter.once('event', () => {\n  // do stuff\n  emitter.setMaxListeners(Math.max(emitter.getMaxListeners() - 1, 0));\n});\n```"
							},
							{
								"kind": "text",
								"text": "\n\nThe "
							},
							{
								"kind": "code",
								"text": "`--trace-warnings`"
							},
							{
								"kind": "text",
								"text": " command-line flag can be used to display the\nstack trace for such warnings.\n\nThe emitted warning can be inspected with "
							},
							{
								"kind": "code",
								"text": "`process.on('warning')`"
							},
							{
								"kind": "text",
								"text": " and will\nhave the additional "
							},
							{
								"kind": "code",
								"text": "`emitter`"
							},
							{
								"kind": "text",
								"text": ", "
							},
							{
								"kind": "code",
								"text": "`type`"
							},
							{
								"kind": "text",
								"text": ", and "
							},
							{
								"kind": "code",
								"text": "`count`"
							},
							{
								"kind": "text",
								"text": " properties, referring to\nthe event emitter instance, the event's name and the number of attached\nlisteners, respectively.\nIts "
							},
							{
								"kind": "code",
								"text": "`name`"
							},
							{
								"kind": "text",
								"text": " property is set to "
							},
							{
								"kind": "code",
								"text": "`'MaxListenersExceededWarning'`"
							},
							{
								"kind": "text",
								"text": "."
							}
						],
						"blockTags": [
							{
								"tag": "@since",
								"content": [
									{
										"kind": "text",
										"text": "v0.11.2"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
							"line": 434,
							"character": 15
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "EventEmitter.defaultMaxListeners"
					}
				},
				{
					"id": 38,
					"name": "errorMonitor",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isStatic": true,
						"isExternal": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "This symbol shall be used to install a listener for only monitoring "
							},
							{
								"kind": "code",
								"text": "`'error'`"
							},
							{
								"kind": "text",
								"text": "events. Listeners installed using this symbol are called before the regular"
							},
							{
								"kind": "code",
								"text": "`'error'`"
							},
							{
								"kind": "text",
								"text": " listeners are called.\n\nInstalling a listener using this symbol does not change the behavior once an"
							},
							{
								"kind": "code",
								"text": "`'error'`"
							},
							{
								"kind": "text",
								"text": " event is emitted. Therefore, the process will still crash if no\nregular "
							},
							{
								"kind": "code",
								"text": "`'error'`"
							},
							{
								"kind": "text",
								"text": " listener is installed."
							}
						],
						"blockTags": [
							{
								"tag": "@since",
								"content": [
									{
										"kind": "text",
										"text": "v13.6.0, v12.17.0"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
							"line": 383,
							"character": 24
						}
					],
					"type": {
						"type": "query",
						"queryType": {
							"type": "reference",
							"target": 38,
							"name": "errorMonitor",
							"package": "@types/node",
							"qualifiedName": "EventEmitter.errorMonitor"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "EventEmitter.errorMonitor"
					}
				},
				{
					"id": 70,
					"name": "addListener",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
							"line": 454,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 71,
							"name": "addListener",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Alias for "
									},
									{
										"kind": "code",
										"text": "`emitter.on(eventName, listener)`"
									},
									{
										"kind": "text",
										"text": "."
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "v0.1.26"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
									"line": 454,
									"character": 16
								}
							],
							"parameters": [
								{
									"id": 72,
									"name": "eventName",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "symbol"
											}
										]
									}
								},
								{
									"id": 73,
									"name": "listener",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 74,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
													"line": 454,
													"character": 66
												}
											],
											"signatures": [
												{
													"id": 75,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
															"line": 454,
															"character": 66
														}
													],
													"parameters": [
														{
															"id": 76,
															"name": "args",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true,
																"isRest": true
															},
															"type": {
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "any"
																}
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 1,
								"name": "Client",
								"package": "solace.js"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "EventEmitter.addListener"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "EventEmitter.addListener"
					}
				},
				{
					"id": 66,
					"name": "createMessage",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/client/Client.ts",
							"line": 71,
							"character": 17,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/client/Client.ts#L71"
						}
					],
					"signatures": [
						{
							"id": 67,
							"name": "createMessage",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Asynchronously creates a new message in a specified channel."
									}
								],
								"blockTags": [
									{
										"tag": "@throws",
										"content": [
											{
												"kind": "text",
												"text": "If an error occurs during the message creation process."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "src/client/Client.ts",
									"line": 71,
									"character": 17,
									"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/client/Client.ts#L71"
								}
							],
							"parameters": [
								{
									"id": 68,
									"name": "channelId",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The unique identifier of the target channel where the message will be sent."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 69,
									"name": "message",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The content of the message to be sent."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/typescript@5.2.2/node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 105,
					"name": "emit",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
							"line": 716,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 106,
							"name": "emit",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Synchronously calls each of the listeners registered for the event named"
									},
									{
										"kind": "code",
										"text": "`eventName`"
									},
									{
										"kind": "text",
										"text": ", in the order they were registered, passing the supplied arguments\nto each.\n\nReturns "
									},
									{
										"kind": "code",
										"text": "`true`"
									},
									{
										"kind": "text",
										"text": " if the event had listeners, "
									},
									{
										"kind": "code",
										"text": "`false`"
									},
									{
										"kind": "text",
										"text": " otherwise.\n\n"
									},
									{
										"kind": "code",
										"text": "```js\nimport { EventEmitter } from 'node:events';\nconst myEmitter = new EventEmitter();\n\n// First listener\nmyEmitter.on('event', function firstListener() {\n  console.log('Helloooo! first listener');\n});\n// Second listener\nmyEmitter.on('event', function secondListener(arg1, arg2) {\n  console.log(`event with parameters ${arg1}, ${arg2} in second listener`);\n});\n// Third listener\nmyEmitter.on('event', function thirdListener(...args) {\n  const parameters = args.join(', ');\n  console.log(`event with parameters ${parameters} in third listener`);\n});\n\nconsole.log(myEmitter.listeners('event'));\n\nmyEmitter.emit('event', 1, 2, 3, 4, 5);\n\n// Prints:\n// [\n//   [Function: firstListener],\n//   [Function: secondListener],\n//   [Function: thirdListener]\n// ]\n// Helloooo! first listener\n// event with parameters 1, 2 in second listener\n// event with parameters 1, 2, 3, 4, 5 in third listener\n```"
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "v0.1.26"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
									"line": 716,
									"character": 16
								}
							],
							"parameters": [
								{
									"id": 107,
									"name": "eventName",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "symbol"
											}
										]
									}
								},
								{
									"id": 108,
									"name": "args",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true,
										"isRest": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "any"
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "EventEmitter.emit"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "EventEmitter.emit"
					}
				},
				{
					"id": 127,
					"name": "eventNames",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
							"line": 779,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 128,
							"name": "eventNames",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns an array listing the events for which the emitter has registered\nlisteners. The values in the array are strings or "
									},
									{
										"kind": "code",
										"text": "`Symbol`"
									},
									{
										"kind": "text",
										"text": "s.\n\n"
									},
									{
										"kind": "code",
										"text": "```js\nimport { EventEmitter } from 'node:events';\n\nconst myEE = new EventEmitter();\nmyEE.on('foo', () => {});\nmyEE.on('bar', () => {});\n\nconst sym = Symbol('symbol');\nmyEE.on(sym, () => {});\n\nconsole.log(myEE.eventNames());\n// Prints: [ 'foo', 'bar', Symbol(symbol) ]\n```"
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "v6.0.0"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
									"line": 779,
									"character": 16
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "intrinsic",
											"name": "string"
										},
										{
											"type": "intrinsic",
											"name": "symbol"
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "EventEmitter.eventNames"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "EventEmitter.eventNames"
					}
				},
				{
					"id": 97,
					"name": "getMaxListeners",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
							"line": 631,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 98,
							"name": "getMaxListeners",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns the current max listener value for the "
									},
									{
										"kind": "code",
										"text": "`EventEmitter`"
									},
									{
										"kind": "text",
										"text": " which is either\nset by "
									},
									{
										"kind": "code",
										"text": "`emitter.setMaxListeners(n)`"
									},
									{
										"kind": "text",
										"text": " or defaults to "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "defaultMaxListeners",
										"target": 41
									},
									{
										"kind": "text",
										"text": "."
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "v1.0.0"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
									"line": 631,
									"character": 16
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "EventEmitter.getMaxListeners"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "EventEmitter.getMaxListeners"
					}
				},
				{
					"id": 109,
					"name": "listenerCount",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
							"line": 725,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 110,
							"name": "listenerCount",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns the number of listeners listening for the event named "
									},
									{
										"kind": "code",
										"text": "`eventName`"
									},
									{
										"kind": "text",
										"text": ".\nIf "
									},
									{
										"kind": "code",
										"text": "`listener`"
									},
									{
										"kind": "text",
										"text": " is provided, it will return how many times the listener is found\nin the list of the listeners of the event."
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "v3.2.0"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
									"line": 725,
									"character": 16
								}
							],
							"parameters": [
								{
									"id": 111,
									"name": "eventName",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The name of the event being listened for"
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "symbol"
											}
										]
									}
								},
								{
									"id": 112,
									"name": "listener",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The event handler function"
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.2.2/node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Function"
										},
										"name": "Function",
										"package": "typescript"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "EventEmitter.listenerCount"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "EventEmitter.listenerCount"
					}
				},
				{
					"id": 99,
					"name": "listeners",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
							"line": 644,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 100,
							"name": "listeners",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns a copy of the array of listeners for the event named "
									},
									{
										"kind": "code",
										"text": "`eventName`"
									},
									{
										"kind": "text",
										"text": ".\n\n"
									},
									{
										"kind": "code",
										"text": "```js\nserver.on('connection', (stream) => {\n  console.log('someone connected!');\n});\nconsole.log(util.inspect(server.listeners('connection')));\n// Prints: [ [Function] ]\n```"
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "v0.1.26"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
									"line": 644,
									"character": 16
								}
							],
							"parameters": [
								{
									"id": 101,
									"name": "eventName",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "symbol"
											}
										]
									}
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": {
										"sourceFileName": "node_modules/.pnpm/typescript@5.2.2/node_modules/typescript/lib/lib.es5.d.ts",
										"qualifiedName": "Function"
									},
									"name": "Function",
									"package": "typescript"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "EventEmitter.listeners"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "EventEmitter.listeners"
					}
				},
				{
					"id": 64,
					"name": "login",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/client/Client.ts",
							"line": 61,
							"character": 17,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/client/Client.ts#L61"
						}
					],
					"signatures": [
						{
							"id": 65,
							"name": "login",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Asynchronously log in the client by establishing a WebSocket connection."
									}
								]
							},
							"sources": [
								{
									"fileName": "src/client/Client.ts",
									"line": 61,
									"character": 17,
									"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/client/Client.ts#L61"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/typescript@5.2.2/node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 84,
					"name": "off",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
							"line": 604,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 85,
							"name": "off",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Alias for "
									},
									{
										"kind": "code",
										"text": "`emitter.removeListener()`"
									},
									{
										"kind": "text",
										"text": "."
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "v10.0.0"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
									"line": 604,
									"character": 16
								}
							],
							"parameters": [
								{
									"id": 86,
									"name": "eventName",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "symbol"
											}
										]
									}
								},
								{
									"id": 87,
									"name": "listener",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 88,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
													"line": 604,
													"character": 58
												}
											],
											"signatures": [
												{
													"id": 89,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
															"line": 604,
															"character": 58
														}
													],
													"parameters": [
														{
															"id": 90,
															"name": "args",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true,
																"isRest": true
															},
															"type": {
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "any"
																}
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 1,
								"name": "Client",
								"package": "solace.js"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "EventEmitter.off"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "EventEmitter.off"
					}
				},
				{
					"id": 56,
					"name": "on",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "src/client/Client.ts",
							"line": 54,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/client/Client.ts#L54"
						}
					],
					"signatures": [
						{
							"id": 57,
							"name": "on",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Register an event listener for the specified event."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "- The current Client instance."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "src/client/Client.ts",
									"line": 54,
									"character": 4,
									"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/client/Client.ts#L54"
								}
							],
							"typeParameter": [
								{
									"id": 58,
									"name": "K",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"type": {
										"type": "typeOperator",
										"operator": "keyof",
										"target": {
											"type": "reference",
											"target": 729,
											"name": "ClientEvents",
											"package": "solace.js"
										}
									}
								}
							],
							"parameters": [
								{
									"id": 59,
									"name": "event",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The event name."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": -1,
										"name": "K",
										"refersToTypeParameter": true
									}
								},
								{
									"id": 60,
									"name": "listener",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The event listener."
											}
										]
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 61,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"sources": [
												{
													"fileName": "src/client/Client.ts",
													"line": 54,
													"character": 57,
													"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/client/Client.ts#L54"
												}
											],
											"signatures": [
												{
													"id": 62,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"sources": [
														{
															"fileName": "src/client/Client.ts",
															"line": 54,
															"character": 57,
															"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/client/Client.ts#L54"
														}
													],
													"parameters": [
														{
															"id": 63,
															"name": "args",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isRest": true
															},
															"type": {
																"type": "indexedAccess",
																"indexType": {
																	"type": "reference",
																	"target": -1,
																	"name": "K",
																	"refersToTypeParameter": true
																},
																"objectType": {
																	"type": "reference",
																	"target": 729,
																	"name": "ClientEvents",
																	"package": "solace.js"
																}
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 1,
								"name": "Client",
								"package": "solace.js"
							},
							"overwrites": {
								"type": "reference",
								"target": -1,
								"name": "EventEmitter.on"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"target": -1,
						"name": "EventEmitter.on"
					}
				},
				{
					"id": 48,
					"name": "once",
					"variant": "declaration",
					"kind": 2048,
					"flags": {},
					"sources": [
						{
							"fileName": "src/client/Client.ts",
							"line": 44,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/client/Client.ts#L44"
						}
					],
					"signatures": [
						{
							"id": 49,
							"name": "once",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Register a one-time event listener for the specified event."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The current Client instance."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "src/client/Client.ts",
									"line": 44,
									"character": 4,
									"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/client/Client.ts#L44"
								}
							],
							"typeParameter": [
								{
									"id": 50,
									"name": "K",
									"variant": "typeParam",
									"kind": 131072,
									"flags": {},
									"type": {
										"type": "typeOperator",
										"operator": "keyof",
										"target": {
											"type": "reference",
											"target": 729,
											"name": "ClientEvents",
											"package": "solace.js"
										}
									}
								}
							],
							"parameters": [
								{
									"id": 51,
									"name": "event",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The event name."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": -1,
										"name": "K",
										"refersToTypeParameter": true
									}
								},
								{
									"id": 52,
									"name": "listener",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The event listener."
											}
										]
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 53,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {},
											"sources": [
												{
													"fileName": "src/client/Client.ts",
													"line": 44,
													"character": 59,
													"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/client/Client.ts#L44"
												}
											],
											"signatures": [
												{
													"id": 54,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {},
													"sources": [
														{
															"fileName": "src/client/Client.ts",
															"line": 44,
															"character": 59,
															"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/client/Client.ts#L44"
														}
													],
													"parameters": [
														{
															"id": 55,
															"name": "args",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isRest": true
															},
															"type": {
																"type": "indexedAccess",
																"indexType": {
																	"type": "reference",
																	"target": -1,
																	"name": "K",
																	"refersToTypeParameter": true
																},
																"objectType": {
																	"type": "reference",
																	"target": 729,
																	"name": "ClientEvents",
																	"package": "solace.js"
																}
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 1,
								"name": "Client",
								"package": "solace.js"
							},
							"overwrites": {
								"type": "reference",
								"target": -1,
								"name": "EventEmitter.once"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"target": -1,
						"name": "EventEmitter.once"
					}
				},
				{
					"id": 113,
					"name": "prependListener",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
							"line": 743,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 114,
							"name": "prependListener",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Adds the "
									},
									{
										"kind": "code",
										"text": "`listener`"
									},
									{
										"kind": "text",
										"text": " function to the _beginning_ of the listeners array for the\nevent named "
									},
									{
										"kind": "code",
										"text": "`eventName`"
									},
									{
										"kind": "text",
										"text": ". No checks are made to see if the "
									},
									{
										"kind": "code",
										"text": "`listener`"
									},
									{
										"kind": "text",
										"text": " has\nalready been added. Multiple calls passing the same combination of "
									},
									{
										"kind": "code",
										"text": "`eventName`"
									},
									{
										"kind": "text",
										"text": "and "
									},
									{
										"kind": "code",
										"text": "`listener`"
									},
									{
										"kind": "text",
										"text": " will result in the "
									},
									{
										"kind": "code",
										"text": "`listener`"
									},
									{
										"kind": "text",
										"text": " being added, and called, multiple\ntimes.\n\n"
									},
									{
										"kind": "code",
										"text": "```js\nserver.prependListener('connection', (stream) => {\n  console.log('someone connected!');\n});\n```"
									},
									{
										"kind": "text",
										"text": "\n\nReturns a reference to the "
									},
									{
										"kind": "code",
										"text": "`EventEmitter`"
									},
									{
										"kind": "text",
										"text": ", so that calls can be chained."
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "v6.0.0"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
									"line": 743,
									"character": 16
								}
							],
							"parameters": [
								{
									"id": 115,
									"name": "eventName",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The name of the event."
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "symbol"
											}
										]
									}
								},
								{
									"id": 116,
									"name": "listener",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The callback function"
											}
										]
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 117,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
													"line": 743,
													"character": 70
												}
											],
											"signatures": [
												{
													"id": 118,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
															"line": 743,
															"character": 70
														}
													],
													"parameters": [
														{
															"id": 119,
															"name": "args",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true,
																"isRest": true
															},
															"type": {
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "any"
																}
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 1,
								"name": "Client",
								"package": "solace.js"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "EventEmitter.prependListener"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "EventEmitter.prependListener"
					}
				},
				{
					"id": 120,
					"name": "prependOnceListener",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
							"line": 759,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 121,
							"name": "prependOnceListener",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Adds a **one-time**"
									},
									{
										"kind": "code",
										"text": "`listener`"
									},
									{
										"kind": "text",
										"text": " function for the event named "
									},
									{
										"kind": "code",
										"text": "`eventName`"
									},
									{
										"kind": "text",
										"text": " to the _beginning_ of the listeners array. The next time "
									},
									{
										"kind": "code",
										"text": "`eventName`"
									},
									{
										"kind": "text",
										"text": " is triggered, this\nlistener is removed, and then invoked.\n\n"
									},
									{
										"kind": "code",
										"text": "```js\nserver.prependOnceListener('connection', (stream) => {\n  console.log('Ah, we have our first user!');\n});\n```"
									},
									{
										"kind": "text",
										"text": "\n\nReturns a reference to the "
									},
									{
										"kind": "code",
										"text": "`EventEmitter`"
									},
									{
										"kind": "text",
										"text": ", so that calls can be chained."
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "v6.0.0"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
									"line": 759,
									"character": 16
								}
							],
							"parameters": [
								{
									"id": 122,
									"name": "eventName",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The name of the event."
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "symbol"
											}
										]
									}
								},
								{
									"id": 123,
									"name": "listener",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The callback function"
											}
										]
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 124,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
													"line": 759,
													"character": 74
												}
											],
											"signatures": [
												{
													"id": 125,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
															"line": 759,
															"character": 74
														}
													],
													"parameters": [
														{
															"id": 126,
															"name": "args",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true,
																"isRest": true
															},
															"type": {
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "any"
																}
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 1,
								"name": "Client",
								"package": "solace.js"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "EventEmitter.prependOnceListener"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "EventEmitter.prependOnceListener"
					}
				},
				{
					"id": 102,
					"name": "rawListeners",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
							"line": 675,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 103,
							"name": "rawListeners",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns a copy of the array of listeners for the event named "
									},
									{
										"kind": "code",
										"text": "`eventName`"
									},
									{
										"kind": "text",
										"text": ",\nincluding any wrappers (such as those created by "
									},
									{
										"kind": "code",
										"text": "`.once()`"
									},
									{
										"kind": "text",
										"text": ").\n\n"
									},
									{
										"kind": "code",
										"text": "```js\nimport { EventEmitter } from 'node:events';\nconst emitter = new EventEmitter();\nemitter.once('log', () => console.log('log once'));\n\n// Returns a new Array with a function `onceWrapper` which has a property\n// `listener` which contains the original listener bound above\nconst listeners = emitter.rawListeners('log');\nconst logFnWrapper = listeners[0];\n\n// Logs \"log once\" to the console and does not unbind the `once` event\nlogFnWrapper.listener();\n\n// Logs \"log once\" to the console and removes the listener\nlogFnWrapper();\n\nemitter.on('log', () => console.log('log persistently'));\n// Will return a new Array with a single function bound by `.on()` above\nconst newListeners = emitter.rawListeners('log');\n\n// Logs \"log persistently\" twice\nnewListeners[0]();\nemitter.emit('log');\n```"
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "v9.4.0"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
									"line": 675,
									"character": 16
								}
							],
							"parameters": [
								{
									"id": 104,
									"name": "eventName",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "symbol"
											}
										]
									}
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": {
										"sourceFileName": "node_modules/.pnpm/typescript@5.2.2/node_modules/typescript/lib/lib.es5.d.ts",
										"qualifiedName": "Function"
									},
									"name": "Function",
									"package": "typescript"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "EventEmitter.rawListeners"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "EventEmitter.rawListeners"
					}
				},
				{
					"id": 91,
					"name": "removeAllListeners",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
							"line": 615,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 92,
							"name": "removeAllListeners",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Removes all listeners, or those of the specified "
									},
									{
										"kind": "code",
										"text": "`eventName`"
									},
									{
										"kind": "text",
										"text": ".\n\nIt is bad practice to remove listeners added elsewhere in the code,\nparticularly when the "
									},
									{
										"kind": "code",
										"text": "`EventEmitter`"
									},
									{
										"kind": "text",
										"text": " instance was created by some other\ncomponent or module (e.g. sockets or file streams).\n\nReturns a reference to the "
									},
									{
										"kind": "code",
										"text": "`EventEmitter`"
									},
									{
										"kind": "text",
										"text": ", so that calls can be chained."
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "v0.1.26"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
									"line": 615,
									"character": 16
								}
							],
							"parameters": [
								{
									"id": 93,
									"name": "event",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "symbol"
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 1,
								"name": "Client",
								"package": "solace.js"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "EventEmitter.removeAllListeners"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "EventEmitter.removeAllListeners"
					}
				},
				{
					"id": 77,
					"name": "removeListener",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
							"line": 599,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 78,
							"name": "removeListener",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Removes the specified "
									},
									{
										"kind": "code",
										"text": "`listener`"
									},
									{
										"kind": "text",
										"text": " from the listener array for the event named"
									},
									{
										"kind": "code",
										"text": "`eventName`"
									},
									{
										"kind": "text",
										"text": ".\n\n"
									},
									{
										"kind": "code",
										"text": "```js\nconst callback = (stream) => {\n  console.log('someone connected!');\n};\nserver.on('connection', callback);\n// ...\nserver.removeListener('connection', callback);\n```"
									},
									{
										"kind": "text",
										"text": "\n\n"
									},
									{
										"kind": "code",
										"text": "`removeListener()`"
									},
									{
										"kind": "text",
										"text": " will remove, at most, one instance of a listener from the\nlistener array. If any single listener has been added multiple times to the\nlistener array for the specified "
									},
									{
										"kind": "code",
										"text": "`eventName`"
									},
									{
										"kind": "text",
										"text": ", then "
									},
									{
										"kind": "code",
										"text": "`removeListener()`"
									},
									{
										"kind": "text",
										"text": " must be\ncalled multiple times to remove each instance.\n\nOnce an event is emitted, all listeners attached to it at the\ntime of emitting are called in order. This implies that any"
									},
									{
										"kind": "code",
										"text": "`removeListener()`"
									},
									{
										"kind": "text",
										"text": " or "
									},
									{
										"kind": "code",
										"text": "`removeAllListeners()`"
									},
									{
										"kind": "text",
										"text": " calls _after_ emitting and _before_ the last listener finishes execution\nwill not remove them from"
									},
									{
										"kind": "code",
										"text": "`emit()`"
									},
									{
										"kind": "text",
										"text": " in progress. Subsequent events behave as expected.\n\n"
									},
									{
										"kind": "code",
										"text": "```js\nimport { EventEmitter } from 'node:events';\nclass MyEmitter extends EventEmitter {}\nconst myEmitter = new MyEmitter();\n\nconst callbackA = () => {\n  console.log('A');\n  myEmitter.removeListener('event', callbackB);\n};\n\nconst callbackB = () => {\n  console.log('B');\n};\n\nmyEmitter.on('event', callbackA);\n\nmyEmitter.on('event', callbackB);\n\n// callbackA removes listener callbackB but it will still be called.\n// Internal listener array at time of emit [callbackA, callbackB]\nmyEmitter.emit('event');\n// Prints:\n//   A\n//   B\n\n// callbackB is now removed.\n// Internal listener array [callbackA]\nmyEmitter.emit('event');\n// Prints:\n//   A\n```"
									},
									{
										"kind": "text",
										"text": "\n\nBecause listeners are managed using an internal array, calling this will\nchange the position indices of any listener registered _after_ the listener\nbeing removed. This will not impact the order in which listeners are called,\nbut it means that any copies of the listener array as returned by\nthe "
									},
									{
										"kind": "code",
										"text": "`emitter.listeners()`"
									},
									{
										"kind": "text",
										"text": " method will need to be recreated.\n\nWhen a single function has been added as a handler multiple times for a single\nevent (as in the example below), "
									},
									{
										"kind": "code",
										"text": "`removeListener()`"
									},
									{
										"kind": "text",
										"text": " will remove the most\nrecently added instance. In the example the "
									},
									{
										"kind": "code",
										"text": "`once('ping')`"
									},
									{
										"kind": "text",
										"text": "listener is removed:\n\n"
									},
									{
										"kind": "code",
										"text": "```js\nimport { EventEmitter } from 'node:events';\nconst ee = new EventEmitter();\n\nfunction pong() {\n  console.log('pong');\n}\n\nee.on('ping', pong);\nee.once('ping', pong);\nee.removeListener('ping', pong);\n\nee.emit('ping');\nee.emit('ping');\n```"
									},
									{
										"kind": "text",
										"text": "\n\nReturns a reference to the "
									},
									{
										"kind": "code",
										"text": "`EventEmitter`"
									},
									{
										"kind": "text",
										"text": ", so that calls can be chained."
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "v0.1.26"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
									"line": 599,
									"character": 16
								}
							],
							"parameters": [
								{
									"id": 79,
									"name": "eventName",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "symbol"
											}
										]
									}
								},
								{
									"id": 80,
									"name": "listener",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 81,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
													"line": 599,
													"character": 69
												}
											],
											"signatures": [
												{
													"id": 82,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
															"line": 599,
															"character": 69
														}
													],
													"parameters": [
														{
															"id": 83,
															"name": "args",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true,
																"isRest": true
															},
															"type": {
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "any"
																}
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 1,
								"name": "Client",
								"package": "solace.js"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "EventEmitter.removeListener"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "EventEmitter.removeListener"
					}
				},
				{
					"id": 94,
					"name": "setMaxListeners",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
							"line": 625,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 95,
							"name": "setMaxListeners",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "By default "
									},
									{
										"kind": "code",
										"text": "`EventEmitter`"
									},
									{
										"kind": "text",
										"text": "s will print a warning if more than "
									},
									{
										"kind": "code",
										"text": "`10`"
									},
									{
										"kind": "text",
										"text": " listeners are\nadded for a particular event. This is a useful default that helps finding\nmemory leaks. The "
									},
									{
										"kind": "code",
										"text": "`emitter.setMaxListeners()`"
									},
									{
										"kind": "text",
										"text": " method allows the limit to be\nmodified for this specific "
									},
									{
										"kind": "code",
										"text": "`EventEmitter`"
									},
									{
										"kind": "text",
										"text": " instance. The value can be set to"
									},
									{
										"kind": "code",
										"text": "`Infinity`"
									},
									{
										"kind": "text",
										"text": " (or "
									},
									{
										"kind": "code",
										"text": "`0`"
									},
									{
										"kind": "text",
										"text": ") to indicate an unlimited number of listeners.\n\nReturns a reference to the "
									},
									{
										"kind": "code",
										"text": "`EventEmitter`"
									},
									{
										"kind": "text",
										"text": ", so that calls can be chained."
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "v0.3.5"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
									"line": 625,
									"character": 16
								}
							],
							"parameters": [
								{
									"id": 96,
									"name": "n",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 1,
								"name": "Client",
								"package": "solace.js"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "EventEmitter.setMaxListeners"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "EventEmitter.setMaxListeners"
					}
				},
				{
					"id": 31,
					"name": "addAbortListener",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isStatic": true,
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
							"line": 375,
							"character": 15
						}
					],
					"signatures": [
						{
							"id": 32,
							"name": "addAbortListener",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Listens once to the "
									},
									{
										"kind": "code",
										"text": "`abort`"
									},
									{
										"kind": "text",
										"text": " event on the provided "
									},
									{
										"kind": "code",
										"text": "`signal`"
									},
									{
										"kind": "text",
										"text": ".\n\nListening to the "
									},
									{
										"kind": "code",
										"text": "`abort`"
									},
									{
										"kind": "text",
										"text": " event on abort signals is unsafe and may\nlead to resource leaks since another third party with the signal can\ncall "
									},
									{
										"kind": "code",
										"text": "`e.stopImmediatePropagation()`"
									},
									{
										"kind": "text",
										"text": ". Unfortunately Node.js cannot change\nthis since it would violate the web standard. Additionally, the original\nAPI makes it easy to forget to remove listeners.\n\nThis API allows safely using "
									},
									{
										"kind": "code",
										"text": "`AbortSignal`"
									},
									{
										"kind": "text",
										"text": "s in Node.js APIs by solving these\ntwo issues by listening to the event such that "
									},
									{
										"kind": "code",
										"text": "`stopImmediatePropagation`"
									},
									{
										"kind": "text",
										"text": " does\nnot prevent the listener from running.\n\nReturns a disposable so that it may be unsubscribed from more easily.\n\n"
									},
									{
										"kind": "code",
										"text": "```js\nimport { addAbortListener } from 'node:events';\n\nfunction example(signal) {\n  let disposable;\n  try {\n    signal.addEventListener('abort', (e) => e.stopImmediatePropagation());\n    disposable = addAbortListener(signal, (e) => {\n      // Do something when signal is aborted.\n    });\n  } finally {\n    disposable?.[Symbol.dispose]();\n  }\n}\n```"
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "v20.5.0"
											}
										]
									},
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "that removes the "
											},
											{
												"kind": "code",
												"text": "`abort`"
											},
											{
												"kind": "text",
												"text": " listener."
											}
										]
									}
								],
								"modifierTags": [
									"@experimental"
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
									"line": 375,
									"character": 15
								}
							],
							"parameters": [
								{
									"id": 33,
									"name": "signal",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.2.2/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "AbortSignal"
										},
										"name": "AbortSignal",
										"package": "typescript"
									}
								},
								{
									"id": 34,
									"name": "resource",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 35,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
													"line": 375,
													"character": 63
												}
											],
											"signatures": [
												{
													"id": 36,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
															"line": 375,
															"character": 63
														}
													],
													"parameters": [
														{
															"id": 37,
															"name": "event",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "reference",
																"target": {
																	"sourceFileName": "node_modules/.pnpm/typescript@5.2.2/node_modules/typescript/lib/lib.dom.d.ts",
																	"qualifiedName": "Event"
																},
																"name": "Event",
																"package": "typescript"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/globals.d.ts",
									"qualifiedName": "Disposable"
								},
								"name": "Disposable",
								"package": "@types/node"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "EventEmitter.addAbortListener"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "EventEmitter.addAbortListener"
					}
				},
				{
					"id": 20,
					"name": "getEventListeners",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isStatic": true,
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
							"line": 296,
							"character": 15
						}
					],
					"signatures": [
						{
							"id": 21,
							"name": "getEventListeners",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns a copy of the array of listeners for the event named "
									},
									{
										"kind": "code",
										"text": "`eventName`"
									},
									{
										"kind": "text",
										"text": ".\n\nFor "
									},
									{
										"kind": "code",
										"text": "`EventEmitter`"
									},
									{
										"kind": "text",
										"text": "s this behaves exactly the same as calling "
									},
									{
										"kind": "code",
										"text": "`.listeners`"
									},
									{
										"kind": "text",
										"text": " on\nthe emitter.\n\nFor "
									},
									{
										"kind": "code",
										"text": "`EventTarget`"
									},
									{
										"kind": "text",
										"text": "s this is the only way to get the event listeners for the\nevent target. This is useful for debugging and diagnostic purposes.\n\n"
									},
									{
										"kind": "code",
										"text": "```js\nimport { getEventListeners, EventEmitter } from 'node:events';\n\n{\n  const ee = new EventEmitter();\n  const listener = () => console.log('Events are fun');\n  ee.on('foo', listener);\n  console.log(getEventListeners(ee, 'foo')); // [ [Function: listener] ]\n}\n{\n  const et = new EventTarget();\n  const listener = () => console.log('Events are fun');\n  et.addEventListener('foo', listener);\n  console.log(getEventListeners(et, 'foo')); // [ [Function: listener] ]\n}\n```"
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "v15.2.0, v14.17.0"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
									"line": 296,
									"character": 15
								}
							],
							"parameters": [
								{
									"id": 22,
									"name": "emitter",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
													"qualifiedName": "__global.NodeJS.EventEmitter"
												},
												"name": "EventEmitter",
												"package": "@types/node",
												"qualifiedName": "__global.NodeJS.EventEmitter"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
													"qualifiedName": "_DOMEventTarget"
												},
												"name": "_DOMEventTarget",
												"package": "@types/node"
											}
										]
									}
								},
								{
									"id": 23,
									"name": "name",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "symbol"
											}
										]
									}
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": {
										"sourceFileName": "node_modules/.pnpm/typescript@5.2.2/node_modules/typescript/lib/lib.es5.d.ts",
										"qualifiedName": "Function"
									},
									"name": "Function",
									"package": "typescript"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "EventEmitter.getEventListeners"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "EventEmitter.getEventListeners"
					}
				},
				{
					"id": 24,
					"name": "getMaxListeners",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isStatic": true,
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
							"line": 325,
							"character": 15
						}
					],
					"signatures": [
						{
							"id": 25,
							"name": "getMaxListeners",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns the currently set max amount of listeners.\n\nFor "
									},
									{
										"kind": "code",
										"text": "`EventEmitter`"
									},
									{
										"kind": "text",
										"text": "s this behaves exactly the same as calling "
									},
									{
										"kind": "code",
										"text": "`.getMaxListeners`"
									},
									{
										"kind": "text",
										"text": " on\nthe emitter.\n\nFor "
									},
									{
										"kind": "code",
										"text": "`EventTarget`"
									},
									{
										"kind": "text",
										"text": "s this is the only way to get the max event listeners for the\nevent target. If the number of event handlers on a single EventTarget exceeds\nthe max set, the EventTarget will print a warning.\n\n"
									},
									{
										"kind": "code",
										"text": "```js\nimport { getMaxListeners, setMaxListeners, EventEmitter } from 'node:events';\n\n{\n  const ee = new EventEmitter();\n  console.log(getMaxListeners(ee)); // 10\n  setMaxListeners(11, ee);\n  console.log(getMaxListeners(ee)); // 11\n}\n{\n  const et = new EventTarget();\n  console.log(getMaxListeners(et)); // 10\n  setMaxListeners(11, et);\n  console.log(getMaxListeners(et)); // 11\n}\n```"
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "v19.9.0"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
									"line": 325,
									"character": 15
								}
							],
							"parameters": [
								{
									"id": 26,
									"name": "emitter",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
													"qualifiedName": "__global.NodeJS.EventEmitter"
												},
												"name": "EventEmitter",
												"package": "@types/node",
												"qualifiedName": "__global.NodeJS.EventEmitter"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
													"qualifiedName": "_DOMEventTarget"
												},
												"name": "_DOMEventTarget",
												"package": "@types/node"
											}
										]
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "EventEmitter.getMaxListeners"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "EventEmitter.getMaxListeners"
					}
				},
				{
					"id": 16,
					"name": "listenerCount",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isStatic": true,
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
							"line": 268,
							"character": 15
						}
					],
					"signatures": [
						{
							"id": 17,
							"name": "listenerCount",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A class method that returns the number of listeners for the given "
									},
									{
										"kind": "code",
										"text": "`eventName`"
									},
									{
										"kind": "text",
										"text": "registered on the given "
									},
									{
										"kind": "code",
										"text": "`emitter`"
									},
									{
										"kind": "text",
										"text": ".\n\n"
									},
									{
										"kind": "code",
										"text": "```js\nimport { EventEmitter, listenerCount } from 'node:events';\n\nconst myEmitter = new EventEmitter();\nmyEmitter.on('event', () => {});\nmyEmitter.on('event', () => {});\nconsole.log(listenerCount(myEmitter, 'event'));\n// Prints: 2\n```"
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "v0.9.12"
											}
										]
									},
									{
										"tag": "@deprecated",
										"content": [
											{
												"kind": "text",
												"text": "Since v3.2.0 - Use "
											},
											{
												"kind": "code",
												"text": "`listenerCount`"
											},
											{
												"kind": "text",
												"text": " instead."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
									"line": 268,
									"character": 15
								}
							],
							"parameters": [
								{
									"id": 18,
									"name": "emitter",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The emitter to query"
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
											"qualifiedName": "__global.NodeJS.EventEmitter"
										},
										"name": "EventEmitter",
										"package": "@types/node",
										"qualifiedName": "__global.NodeJS.EventEmitter"
									}
								},
								{
									"id": 19,
									"name": "eventName",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The event name"
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "symbol"
											}
										]
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "EventEmitter.listenerCount"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "EventEmitter.listenerCount"
					}
				},
				{
					"id": 11,
					"name": "on",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isStatic": true,
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
							"line": 250,
							"character": 15
						}
					],
					"signatures": [
						{
							"id": 12,
							"name": "on",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "code",
										"text": "```js\nimport { on, EventEmitter } from 'node:events';\nimport process from 'node:process';\n\nconst ee = new EventEmitter();\n\n// Emit later on\nprocess.nextTick(() => {\n  ee.emit('foo', 'bar');\n  ee.emit('foo', 42);\n});\n\nfor await (const event of on(ee, 'foo')) {\n  // The execution of this inner block is synchronous and it\n  // processes one event at a time (even with await). Do not use\n  // if concurrent execution is required.\n  console.log(event); // prints ['bar'] [42]\n}\n// Unreachable here\n```"
									},
									{
										"kind": "text",
										"text": "\n\nReturns an "
									},
									{
										"kind": "code",
										"text": "`AsyncIterator`"
									},
									{
										"kind": "text",
										"text": " that iterates "
									},
									{
										"kind": "code",
										"text": "`eventName`"
									},
									{
										"kind": "text",
										"text": " events. It will throw\nif the "
									},
									{
										"kind": "code",
										"text": "`EventEmitter`"
									},
									{
										"kind": "text",
										"text": " emits "
									},
									{
										"kind": "code",
										"text": "`'error'`"
									},
									{
										"kind": "text",
										"text": ". It removes all listeners when\nexiting the loop. The "
									},
									{
										"kind": "code",
										"text": "`value`"
									},
									{
										"kind": "text",
										"text": " returned by each iteration is an array\ncomposed of the emitted event arguments.\n\nAn "
									},
									{
										"kind": "code",
										"text": "`AbortSignal`"
									},
									{
										"kind": "text",
										"text": " can be used to cancel waiting on events:\n\n"
									},
									{
										"kind": "code",
										"text": "```js\nimport { on, EventEmitter } from 'node:events';\nimport process from 'node:process';\n\nconst ac = new AbortController();\n\n(async () => {\n  const ee = new EventEmitter();\n\n  // Emit later on\n  process.nextTick(() => {\n    ee.emit('foo', 'bar');\n    ee.emit('foo', 42);\n  });\n\n  for await (const event of on(ee, 'foo', { signal: ac.signal })) {\n    // The execution of this inner block is synchronous and it\n    // processes one event at a time (even with await). Do not use\n    // if concurrent execution is required.\n    console.log(event); // prints ['bar'] [42]\n  }\n  // Unreachable here\n})();\n\nprocess.nextTick(() => ac.abort());\n```"
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "v13.6.0, v12.16.0"
											}
										]
									},
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "that iterates "
											},
											{
												"kind": "code",
												"text": "`eventName`"
											},
											{
												"kind": "text",
												"text": " events emitted by the "
											},
											{
												"kind": "code",
												"text": "`emitter`"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
									"line": 250,
									"character": 15
								}
							],
							"parameters": [
								{
									"id": 13,
									"name": "emitter",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
											"qualifiedName": "__global.NodeJS.EventEmitter"
										},
										"name": "EventEmitter",
										"package": "@types/node",
										"qualifiedName": "__global.NodeJS.EventEmitter"
									}
								},
								{
									"id": 14,
									"name": "eventName",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The name of the event being listened for"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 15,
									"name": "options",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
											"qualifiedName": "StaticEventEmitterOptions"
										},
										"name": "StaticEventEmitterOptions",
										"package": "@types/node"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/typescript@5.2.2/node_modules/typescript/lib/lib.es2018.asynciterable.d.ts",
									"qualifiedName": "AsyncIterableIterator"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "AsyncIterableIterator",
								"package": "typescript"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "EventEmitter.on"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "EventEmitter.on"
					}
				},
				{
					"id": 2,
					"name": "once",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isStatic": true,
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
							"line": 189,
							"character": 15
						},
						{
							"fileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
							"line": 190,
							"character": 15
						}
					],
					"signatures": [
						{
							"id": 3,
							"name": "once",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Creates a "
									},
									{
										"kind": "code",
										"text": "`Promise`"
									},
									{
										"kind": "text",
										"text": " that is fulfilled when the "
									},
									{
										"kind": "code",
										"text": "`EventEmitter`"
									},
									{
										"kind": "text",
										"text": " emits the given\nevent or that is rejected if the "
									},
									{
										"kind": "code",
										"text": "`EventEmitter`"
									},
									{
										"kind": "text",
										"text": " emits "
									},
									{
										"kind": "code",
										"text": "`'error'`"
									},
									{
										"kind": "text",
										"text": " while waiting.\nThe "
									},
									{
										"kind": "code",
										"text": "`Promise`"
									},
									{
										"kind": "text",
										"text": " will resolve with an array of all the arguments emitted to the\ngiven event.\n\nThis method is intentionally generic and works with the web platform [EventTarget](https://dom.spec.whatwg.org/#interface-eventtarget) interface, which has no special"
									},
									{
										"kind": "code",
										"text": "`'error'`"
									},
									{
										"kind": "text",
										"text": " event\nsemantics and does not listen to the "
									},
									{
										"kind": "code",
										"text": "`'error'`"
									},
									{
										"kind": "text",
										"text": " event.\n\n"
									},
									{
										"kind": "code",
										"text": "```js\nimport { once, EventEmitter } from 'node:events';\nimport process from 'node:process';\n\nconst ee = new EventEmitter();\n\nprocess.nextTick(() => {\n  ee.emit('myevent', 42);\n});\n\nconst [value] = await once(ee, 'myevent');\nconsole.log(value);\n\nconst err = new Error('kaboom');\nprocess.nextTick(() => {\n  ee.emit('error', err);\n});\n\ntry {\n  await once(ee, 'myevent');\n} catch (err) {\n  console.error('error happened', err);\n}\n```"
									},
									{
										"kind": "text",
										"text": "\n\nThe special handling of the "
									},
									{
										"kind": "code",
										"text": "`'error'`"
									},
									{
										"kind": "text",
										"text": " event is only used when "
									},
									{
										"kind": "code",
										"text": "`events.once()`"
									},
									{
										"kind": "text",
										"text": "is used to wait for another event. If "
									},
									{
										"kind": "code",
										"text": "`events.once()`"
									},
									{
										"kind": "text",
										"text": " is used to wait for the\n'"
									},
									{
										"kind": "code",
										"text": "`error'`"
									},
									{
										"kind": "text",
										"text": " event itself, then it is treated as any other kind of event without\nspecial handling:\n\n"
									},
									{
										"kind": "code",
										"text": "```js\nimport { EventEmitter, once } from 'node:events';\n\nconst ee = new EventEmitter();\n\nonce(ee, 'error')\n  .then(([err]) => console.log('ok', err.message))\n  .catch((err) => console.error('error', err.message));\n\nee.emit('error', new Error('boom'));\n\n// Prints: ok boom\n```"
									},
									{
										"kind": "text",
										"text": "\n\nAn "
									},
									{
										"kind": "code",
										"text": "`AbortSignal`"
									},
									{
										"kind": "text",
										"text": " can be used to cancel waiting for the event:\n\n"
									},
									{
										"kind": "code",
										"text": "```js\nimport { EventEmitter, once } from 'node:events';\n\nconst ee = new EventEmitter();\nconst ac = new AbortController();\n\nasync function foo(emitter, event, signal) {\n  try {\n    await once(emitter, event, { signal });\n    console.log('event emitted!');\n  } catch (error) {\n    if (error.name === 'AbortError') {\n      console.error('Waiting for the event was canceled!');\n    } else {\n      console.error('There was an error', error.message);\n    }\n  }\n}\n\nfoo(ee, 'foo', ac.signal);\nac.abort(); // Abort waiting for the event\nee.emit('foo'); // Prints: Waiting for the event was canceled!\n```"
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "v11.13.0, v10.16.0"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
									"line": 189,
									"character": 15
								}
							],
							"parameters": [
								{
									"id": 4,
									"name": "emitter",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
											"qualifiedName": "_NodeEventTarget"
										},
										"name": "_NodeEventTarget",
										"package": "@types/node"
									}
								},
								{
									"id": 5,
									"name": "eventName",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "symbol"
											}
										]
									}
								},
								{
									"id": 6,
									"name": "options",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
											"qualifiedName": "StaticEventEmitterOptions"
										},
										"name": "StaticEventEmitterOptions",
										"package": "@types/node"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/typescript@5.2.2/node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "any"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "EventEmitter.once"
							}
						},
						{
							"id": 7,
							"name": "once",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
									"line": 190,
									"character": 15
								}
							],
							"parameters": [
								{
									"id": 8,
									"name": "emitter",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
											"qualifiedName": "_DOMEventTarget"
										},
										"name": "_DOMEventTarget",
										"package": "@types/node"
									}
								},
								{
									"id": 9,
									"name": "eventName",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 10,
									"name": "options",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
											"qualifiedName": "StaticEventEmitterOptions"
										},
										"name": "StaticEventEmitterOptions",
										"package": "@types/node"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/typescript@5.2.2/node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "any"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "EventEmitter.once"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "EventEmitter.once"
					}
				},
				{
					"id": 27,
					"name": "setMaxListeners",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isStatic": true,
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
							"line": 340,
							"character": 15
						}
					],
					"signatures": [
						{
							"id": 28,
							"name": "setMaxListeners",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "code",
										"text": "```js\nimport { setMaxListeners, EventEmitter } from 'node:events';\n\nconst target = new EventTarget();\nconst emitter = new EventEmitter();\n\nsetMaxListeners(5, target, emitter);\n```"
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "v15.4.0"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
									"line": 340,
									"character": 15
								}
							],
							"parameters": [
								{
									"id": 29,
									"name": "n",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A non-negative number. The maximum number of listeners per "
											},
											{
												"kind": "code",
												"text": "`EventTarget`"
											},
											{
												"kind": "text",
												"text": " event."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 30,
									"name": "eventTargets",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true,
										"isRest": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "union",
											"types": [
												{
													"type": "reference",
													"target": {
														"sourceFileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
														"qualifiedName": "__global.NodeJS.EventEmitter"
													},
													"name": "EventEmitter",
													"package": "@types/node",
													"qualifiedName": "__global.NodeJS.EventEmitter"
												},
												{
													"type": "reference",
													"target": {
														"sourceFileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
														"qualifiedName": "_DOMEventTarget"
													},
													"name": "_DOMEventTarget",
													"package": "@types/node"
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "EventEmitter.setMaxListeners"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "EventEmitter.setMaxListeners"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						42
					]
				},
				{
					"title": "Properties",
					"children": [
						47,
						46,
						45,
						39,
						40,
						41,
						38
					]
				},
				{
					"title": "Methods",
					"children": [
						70,
						66,
						105,
						127,
						97,
						109,
						99,
						64,
						84,
						56,
						48,
						113,
						120,
						102,
						91,
						77,
						94,
						31,
						20,
						24,
						16,
						11,
						2,
						27
					]
				}
			],
			"sources": [
				{
					"fileName": "src/client/Client.ts",
					"line": 12,
					"character": 13,
					"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/client/Client.ts#L12"
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": {
						"sourceFileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
						"qualifiedName": "EventEmitter"
					},
					"name": "EventEmitter",
					"package": "@types/node"
				}
			]
		},
		{
			"id": 263,
			"name": "Constants",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A utility class containing constants related to the Discord API."
					}
				]
			},
			"children": [
				{
					"id": 266,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 267,
							"name": "new Constants",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 263,
								"name": "Constants",
								"package": "solace.js"
							}
						}
					]
				},
				{
					"id": 264,
					"name": "API",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPublic": true,
						"isStatic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The base URL of the Discord API (v10)."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/config/Constants.ts",
							"line": 9,
							"character": 18,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/config/Constants.ts#L9"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"defaultValue": "\"https://discord.com/api/v10\""
				},
				{
					"id": 265,
					"name": "GATEWAY",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPublic": true,
						"isStatic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The URL for accessing the Discord Gateway API, which is derived from the API base URL."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/config/Constants.ts",
							"line": 14,
							"character": 18,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/config/Constants.ts#L14"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"defaultValue": "..."
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						266
					]
				},
				{
					"title": "Properties",
					"children": [
						264,
						265
					]
				}
			],
			"sources": [
				{
					"fileName": "src/config/Constants.ts",
					"line": 4,
					"character": 13,
					"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/config/Constants.ts#L4"
				}
			]
		},
		{
			"id": 796,
			"name": "Embed",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Represents an embed"
					}
				]
			},
			"children": [
				{
					"id": 797,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"sources": [
						{
							"fileName": "src/structures/Embed.ts",
							"line": 99,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/Embed.ts#L99"
						}
					],
					"signatures": [
						{
							"id": 798,
							"name": "new Embed",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Creates a new Embed instance."
									}
								]
							},
							"sources": [
								{
									"fileName": "src/structures/Embed.ts",
									"line": 99,
									"character": 4,
									"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/Embed.ts#L99"
								}
							],
							"parameters": [
								{
									"id": 799,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The data object containing embed information."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 416,
										"name": "ApiEmbed",
										"package": "solace.js"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 796,
								"name": "Embed",
								"package": "solace.js"
							}
						}
					]
				},
				{
					"id": 800,
					"name": "author",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The author of the embed, or null if not provided."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/structures/Embed.ts",
							"line": 21,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/Embed.ts#L21"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": 850,
								"name": "EmbedAuthor",
								"package": "solace.js"
							}
						]
					}
				},
				{
					"id": 801,
					"name": "color",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The color of the embed, represented as a hexadecimal number, or null if not provided."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/structures/Embed.ts",
							"line": 27,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/Embed.ts#L27"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 802,
					"name": "description",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The description of the embed, or null if not provided."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/structures/Embed.ts",
							"line": 33,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/Embed.ts#L33"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 803,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The array of fields in the embed."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/structures/Embed.ts",
							"line": 39,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/Embed.ts#L39"
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 858,
							"name": "EmbedField",
							"package": "solace.js"
						}
					}
				},
				{
					"id": 804,
					"name": "footer",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The footer of the embed, or null if not provided."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/structures/Embed.ts",
							"line": 45,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/Embed.ts#L45"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": 813,
								"name": "EmbedFooter",
								"package": "solace.js"
							}
						]
					}
				},
				{
					"id": 805,
					"name": "image",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The image within the embed, or null if not provided."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/structures/Embed.ts",
							"line": 51,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/Embed.ts#L51"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": 820,
								"name": "EmbedImage",
								"package": "solace.js"
							}
						]
					}
				},
				{
					"id": 806,
					"name": "provider",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The provider of the embed, or null if not provided."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/structures/Embed.ts",
							"line": 57,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/Embed.ts#L57"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": 844,
								"name": "EmbedProvider",
								"package": "solace.js"
							}
						]
					}
				},
				{
					"id": 807,
					"name": "thumbnail",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The thumbnail image of the embed, or null if not provided."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/structures/Embed.ts",
							"line": 63,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/Embed.ts#L63"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": 828,
								"name": "EmbedThumbnail",
								"package": "solace.js"
							}
						]
					}
				},
				{
					"id": 808,
					"name": "timestamp",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The timestamp for the embed, or null if not provided."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/structures/Embed.ts",
							"line": 69,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/Embed.ts#L69"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 809,
					"name": "title",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The title of the embed, or null if not provided."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/structures/Embed.ts",
							"line": 75,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/Embed.ts#L75"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 810,
					"name": "type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The type of the embed, or null if not provided."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/structures/Embed.ts",
							"line": 81,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/Embed.ts#L81"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 811,
					"name": "url",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The URL of the embed, or null if not provided."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/structures/Embed.ts",
							"line": 87,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/Embed.ts#L87"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 812,
					"name": "video",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The video within the embed, or null if not provided."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/structures/Embed.ts",
							"line": 93,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/Embed.ts#L93"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": 836,
								"name": "EmbedVideo",
								"package": "solace.js"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						797
					]
				},
				{
					"title": "Properties",
					"children": [
						800,
						801,
						802,
						803,
						804,
						805,
						806,
						807,
						808,
						809,
						810,
						811,
						812
					]
				}
			],
			"sources": [
				{
					"fileName": "src/structures/Embed.ts",
					"line": 15,
					"character": 13,
					"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/Embed.ts#L15"
				}
			]
		},
		{
			"id": 850,
			"name": "EmbedAuthor",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Represents the author of an embed."
					}
				]
			},
			"children": [
				{
					"id": 851,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"sources": [
						{
							"fileName": "src/structures/Embed.ts",
							"line": 334,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/Embed.ts#L334"
						}
					],
					"signatures": [
						{
							"id": 852,
							"name": "new EmbedAuthor",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Creates a new EmbedAuthor instance."
									}
								]
							},
							"sources": [
								{
									"fileName": "src/structures/Embed.ts",
									"line": 334,
									"character": 4,
									"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/Embed.ts#L334"
								}
							],
							"parameters": [
								{
									"id": 853,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The data object containing author information."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 452,
										"name": "ApiEmbedAuthor",
										"package": "solace.js"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 850,
								"name": "EmbedAuthor",
								"package": "solace.js"
							}
						}
					]
				},
				{
					"id": 854,
					"name": "iconUrl",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPublic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The URL of the author's icon, or null if not provided."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/structures/Embed.ts",
							"line": 310,
							"character": 11,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/Embed.ts#L310"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 855,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPublic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The name of the author."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/structures/Embed.ts",
							"line": 316,
							"character": 11,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/Embed.ts#L316"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 856,
					"name": "proxyIconUrl",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPublic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The URL of the proxy author's icon, or null if not provided."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/structures/Embed.ts",
							"line": 322,
							"character": 11,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/Embed.ts#L322"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 857,
					"name": "url",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPublic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The URL of the author, or null if not provided."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/structures/Embed.ts",
							"line": 328,
							"character": 11,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/Embed.ts#L328"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						851
					]
				},
				{
					"title": "Properties",
					"children": [
						854,
						855,
						856,
						857
					]
				}
			],
			"sources": [
				{
					"fileName": "src/structures/Embed.ts",
					"line": 304,
					"character": 13,
					"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/Embed.ts#L304"
				}
			]
		},
		{
			"id": 858,
			"name": "EmbedField",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Represents a field within an embed."
					}
				]
			},
			"children": [
				{
					"id": 859,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"sources": [
						{
							"fileName": "src/structures/Embed.ts",
							"line": 369,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/Embed.ts#L369"
						}
					],
					"signatures": [
						{
							"id": 860,
							"name": "new EmbedField",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Creates a new EmbedField instance."
									}
								]
							},
							"sources": [
								{
									"fileName": "src/structures/Embed.ts",
									"line": 369,
									"character": 4,
									"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/Embed.ts#L369"
								}
							],
							"parameters": [
								{
									"id": 861,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The data object containing field information."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 457,
										"name": "ApiEmbedField",
										"package": "solace.js"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 858,
								"name": "EmbedField",
								"package": "solace.js"
							}
						}
					]
				},
				{
					"id": 862,
					"name": "inline",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPublic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Indicates whether the field should be displayed inline."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/structures/Embed.ts",
							"line": 351,
							"character": 11,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/Embed.ts#L351"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 863,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPublic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The name of the field."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/structures/Embed.ts",
							"line": 357,
							"character": 11,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/Embed.ts#L357"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 864,
					"name": "value",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPublic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The value of the field."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/structures/Embed.ts",
							"line": 363,
							"character": 11,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/Embed.ts#L363"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						859
					]
				},
				{
					"title": "Properties",
					"children": [
						862,
						863,
						864
					]
				}
			],
			"sources": [
				{
					"fileName": "src/structures/Embed.ts",
					"line": 345,
					"character": 13,
					"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/Embed.ts#L345"
				}
			]
		},
		{
			"id": 813,
			"name": "EmbedFooter",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Represents the footer of an embed."
					}
				]
			},
			"children": [
				{
					"id": 814,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"sources": [
						{
							"fileName": "src/structures/Embed.ts",
							"line": 143,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/Embed.ts#L143"
						}
					],
					"signatures": [
						{
							"id": 815,
							"name": "new EmbedFooter",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Creates a new EmbedFooter instance."
									}
								]
							},
							"sources": [
								{
									"fileName": "src/structures/Embed.ts",
									"line": 143,
									"character": 4,
									"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/Embed.ts#L143"
								}
							],
							"parameters": [
								{
									"id": 816,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The data object containing footer information."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 430,
										"name": "ApiEmbedFooter",
										"package": "solace.js"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 813,
								"name": "EmbedFooter",
								"package": "solace.js"
							}
						}
					]
				},
				{
					"id": 817,
					"name": "iconUrl",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPublic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The URL of the footer icon, or null if not provided."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/structures/Embed.ts",
							"line": 125,
							"character": 11,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/Embed.ts#L125"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 818,
					"name": "proxyIconUrl",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPublic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The URL of the proxy footer icon, or null if not provided."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/structures/Embed.ts",
							"line": 131,
							"character": 11,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/Embed.ts#L131"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 819,
					"name": "text",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPublic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The text in the footer."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/structures/Embed.ts",
							"line": 137,
							"character": 11,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/Embed.ts#L137"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						814
					]
				},
				{
					"title": "Properties",
					"children": [
						817,
						818,
						819
					]
				}
			],
			"sources": [
				{
					"fileName": "src/structures/Embed.ts",
					"line": 119,
					"character": 13,
					"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/Embed.ts#L119"
				}
			]
		},
		{
			"id": 820,
			"name": "EmbedImage",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Represents an image within an embed."
					}
				]
			},
			"children": [
				{
					"id": 821,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"sources": [
						{
							"fileName": "src/structures/Embed.ts",
							"line": 183,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/Embed.ts#L183"
						}
					],
					"signatures": [
						{
							"id": 822,
							"name": "new EmbedImage",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Creates a new EmbedImage instance."
									}
								]
							},
							"sources": [
								{
									"fileName": "src/structures/Embed.ts",
									"line": 183,
									"character": 4,
									"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/Embed.ts#L183"
								}
							],
							"parameters": [
								{
									"id": 823,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The data object containing image information."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 434,
										"name": "ApiEmbedImage",
										"package": "solace.js"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 820,
								"name": "EmbedImage",
								"package": "solace.js"
							}
						}
					]
				},
				{
					"id": 824,
					"name": "height",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPublic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The height of the image in pixels, or null if not provided."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/structures/Embed.ts",
							"line": 159,
							"character": 11,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/Embed.ts#L159"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 825,
					"name": "proxyUrl",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPublic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The URL of the proxy image."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/structures/Embed.ts",
							"line": 165,
							"character": 11,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/Embed.ts#L165"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 826,
					"name": "url",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPublic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The URL of the image."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/structures/Embed.ts",
							"line": 171,
							"character": 11,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/Embed.ts#L171"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 827,
					"name": "width",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPublic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The width of the image in pixels, or null if not provided."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/structures/Embed.ts",
							"line": 177,
							"character": 11,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/Embed.ts#L177"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						821
					]
				},
				{
					"title": "Properties",
					"children": [
						824,
						825,
						826,
						827
					]
				}
			],
			"sources": [
				{
					"fileName": "src/structures/Embed.ts",
					"line": 153,
					"character": 13,
					"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/Embed.ts#L153"
				}
			]
		},
		{
			"id": 844,
			"name": "EmbedProvider",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Represents a provider of the embed."
					}
				]
			},
			"children": [
				{
					"id": 845,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"sources": [
						{
							"fileName": "src/structures/Embed.ts",
							"line": 294,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/Embed.ts#L294"
						}
					],
					"signatures": [
						{
							"id": 846,
							"name": "new EmbedProvider",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Creates a new EmbedProvider instance."
									}
								]
							},
							"sources": [
								{
									"fileName": "src/structures/Embed.ts",
									"line": 294,
									"character": 4,
									"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/Embed.ts#L294"
								}
							],
							"parameters": [
								{
									"id": 847,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The data object containing provider information."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 449,
										"name": "ApiEmbedProvider",
										"package": "solace.js"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 844,
								"name": "EmbedProvider",
								"package": "solace.js"
							}
						}
					]
				},
				{
					"id": 848,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPublic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The name of the provider, or null if not provided."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/structures/Embed.ts",
							"line": 282,
							"character": 11,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/Embed.ts#L282"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 849,
					"name": "url",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPublic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The URL of the provider, or null if not provided."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/structures/Embed.ts",
							"line": 288,
							"character": 11,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/Embed.ts#L288"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						845
					]
				},
				{
					"title": "Properties",
					"children": [
						848,
						849
					]
				}
			],
			"sources": [
				{
					"fileName": "src/structures/Embed.ts",
					"line": 276,
					"character": 13,
					"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/Embed.ts#L276"
				}
			]
		},
		{
			"id": 828,
			"name": "EmbedThumbnail",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Represents a thumbnail image within an embedded message."
					}
				]
			},
			"children": [
				{
					"id": 829,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"sources": [
						{
							"fileName": "src/structures/Embed.ts",
							"line": 224,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/Embed.ts#L224"
						}
					],
					"signatures": [
						{
							"id": 830,
							"name": "new EmbedThumbnail",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Creates a new EmbedThumbnail instance."
									}
								]
							},
							"sources": [
								{
									"fileName": "src/structures/Embed.ts",
									"line": 224,
									"character": 4,
									"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/Embed.ts#L224"
								}
							],
							"parameters": [
								{
									"id": 831,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The data object containing thumbnail information."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 439,
										"name": "ApiEmbedThumbnail",
										"package": "solace.js"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 828,
								"name": "EmbedThumbnail",
								"package": "solace.js"
							}
						}
					]
				},
				{
					"id": 832,
					"name": "height",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPublic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The height of the thumbnail image in pixels, or null if not provided."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/structures/Embed.ts",
							"line": 200,
							"character": 11,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/Embed.ts#L200"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 833,
					"name": "proxyUrl",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPublic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The URL of the proxy thumbnail image."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/structures/Embed.ts",
							"line": 206,
							"character": 11,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/Embed.ts#L206"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 834,
					"name": "url",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPublic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The URL of the thumbnail image."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/structures/Embed.ts",
							"line": 212,
							"character": 11,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/Embed.ts#L212"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 835,
					"name": "width",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPublic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The width of the thumbnail image in pixels, or null if not provided."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/structures/Embed.ts",
							"line": 218,
							"character": 11,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/Embed.ts#L218"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						829
					]
				},
				{
					"title": "Properties",
					"children": [
						832,
						833,
						834,
						835
					]
				}
			],
			"sources": [
				{
					"fileName": "src/structures/Embed.ts",
					"line": 194,
					"character": 13,
					"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/Embed.ts#L194"
				}
			]
		},
		{
			"id": 836,
			"name": "EmbedVideo",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Represents a video within an embedded message."
					}
				]
			},
			"children": [
				{
					"id": 837,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"sources": [
						{
							"fileName": "src/structures/Embed.ts",
							"line": 265,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/Embed.ts#L265"
						}
					],
					"signatures": [
						{
							"id": 838,
							"name": "new EmbedVideo",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Creates a new EmbedVideo instance."
									}
								]
							},
							"sources": [
								{
									"fileName": "src/structures/Embed.ts",
									"line": 265,
									"character": 4,
									"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/Embed.ts#L265"
								}
							],
							"parameters": [
								{
									"id": 839,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The data object containing video information."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 444,
										"name": "ApiEmbedVideo",
										"package": "solace.js"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 836,
								"name": "EmbedVideo",
								"package": "solace.js"
							}
						}
					]
				},
				{
					"id": 840,
					"name": "height",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPublic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The height of the video in pixels, or null if not provided."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/structures/Embed.ts",
							"line": 241,
							"character": 11,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/Embed.ts#L241"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 841,
					"name": "proxyUrl",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPublic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The URL of the proxy video."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/structures/Embed.ts",
							"line": 247,
							"character": 11,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/Embed.ts#L247"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 842,
					"name": "url",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPublic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The URL of the video."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/structures/Embed.ts",
							"line": 253,
							"character": 11,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/Embed.ts#L253"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 843,
					"name": "width",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPublic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The width of the video in pixels, or null if not provided."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/structures/Embed.ts",
							"line": 259,
							"character": 11,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/Embed.ts#L259"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						837
					]
				},
				{
					"title": "Properties",
					"children": [
						840,
						841,
						842,
						843
					]
				}
			],
			"sources": [
				{
					"fileName": "src/structures/Embed.ts",
					"line": 235,
					"character": 13,
					"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/Embed.ts#L235"
				}
			]
		},
		{
			"id": 865,
			"name": "Emoji",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Represents an emoji."
					}
				]
			},
			"children": [
				{
					"id": 866,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"sources": [
						{
							"fileName": "src/structures/Emoji.ts",
							"line": 61,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/Emoji.ts#L61"
						}
					],
					"signatures": [
						{
							"id": 867,
							"name": "new Emoji",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Creates a new Emoji instance."
									}
								]
							},
							"sources": [
								{
									"fileName": "src/structures/Emoji.ts",
									"line": 61,
									"character": 4,
									"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/Emoji.ts#L61"
								}
							],
							"parameters": [
								{
									"id": 868,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The data object containing emoji information."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 461,
										"name": "ApiEmoji",
										"package": "solace.js"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 865,
								"name": "Emoji",
								"package": "solace.js"
							}
						}
					]
				},
				{
					"id": 869,
					"name": "animated",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPublic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Indicates whether the emoji is animated."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/structures/Emoji.ts",
							"line": 13,
							"character": 11,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/Emoji.ts#L13"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 870,
					"name": "available",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPublic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Indicates whether the emoji is available."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/structures/Emoji.ts",
							"line": 19,
							"character": 11,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/Emoji.ts#L19"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 871,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPublic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The unique ID of the emoji, or null if not provided."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/structures/Emoji.ts",
							"line": 25,
							"character": 11,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/Emoji.ts#L25"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 872,
					"name": "managed",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPublic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Indicates whether the emoji is managed."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/structures/Emoji.ts",
							"line": 31,
							"character": 11,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/Emoji.ts#L31"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 873,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPublic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The name of the emoji, or null if not provided."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/structures/Emoji.ts",
							"line": 37,
							"character": 11,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/Emoji.ts#L37"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 874,
					"name": "requireColons",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPublic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Indicates whether colons are required for this emoji in text representation."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/structures/Emoji.ts",
							"line": 43,
							"character": 11,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/Emoji.ts#L43"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 875,
					"name": "roles",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPublic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of role IDs that this emoji is associated with, or undefined if not provided."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/structures/Emoji.ts",
							"line": 49,
							"character": 11,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/Emoji.ts#L49"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						]
					}
				},
				{
					"id": 876,
					"name": "user",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPublic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The user who created or added the emoji, or null if not provided."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/structures/Emoji.ts",
							"line": 55,
							"character": 11,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/Emoji.ts#L55"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": 1098,
								"name": "User",
								"package": "solace.js"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						866
					]
				},
				{
					"title": "Properties",
					"children": [
						869,
						870,
						871,
						872,
						873,
						874,
						875,
						876
					]
				}
			],
			"sources": [
				{
					"fileName": "src/structures/Emoji.ts",
					"line": 7,
					"character": 13,
					"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/Emoji.ts#L7"
				}
			]
		},
		{
			"id": 322,
			"name": "Event",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Represents an event that can be handled by the client."
					}
				]
			},
			"children": [
				{
					"id": 323,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"sources": [
						{
							"fileName": "src/helper/Event.ts",
							"line": 14,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/helper/Event.ts#L14"
						}
					],
					"signatures": [
						{
							"id": 324,
							"name": "new Event",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Creates a new Event instance."
									}
								]
							},
							"sources": [
								{
									"fileName": "src/helper/Event.ts",
									"line": 14,
									"character": 4,
									"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/helper/Event.ts#L14"
								}
							],
							"parameters": [
								{
									"id": 325,
									"name": "name",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The name of the event."
											}
										]
									},
									"type": {
										"type": "typeOperator",
										"operator": "keyof",
										"target": {
											"type": "reference",
											"target": 729,
											"name": "ClientEvents",
											"package": "solace.js"
										}
									}
								},
								{
									"id": 326,
									"name": "once",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Indicates whether the event should only be handled once."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "boolean"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 322,
								"name": "Event",
								"package": "solace.js"
							}
						}
					]
				},
				{
					"id": 327,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPublic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The name of the event."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/helper/Event.ts",
							"line": 14,
							"character": 23,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/helper/Event.ts#L14"
						}
					],
					"type": {
						"type": "typeOperator",
						"operator": "keyof",
						"target": {
							"type": "reference",
							"target": 729,
							"name": "ClientEvents",
							"package": "solace.js"
						}
					}
				},
				{
					"id": 328,
					"name": "once",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPublic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Indicates whether the event should only be handled once."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/helper/Event.ts",
							"line": 14,
							"character": 56,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/helper/Event.ts#L14"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 329,
					"name": "execute",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/helper/Event.ts",
							"line": 23,
							"character": 17,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/helper/Event.ts#L23"
						}
					],
					"signatures": [
						{
							"id": 330,
							"name": "execute",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Executes the event's logic.\r\nThis method should be overridden by subclasses to provide specific event handling logic."
									}
								],
								"blockTags": [
									{
										"tag": "@throws",
										"content": [
											{
												"kind": "text",
												"text": "- If the event subclass does not implement the execute method."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "src/helper/Event.ts",
									"line": 23,
									"character": 17,
									"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/helper/Event.ts#L23"
								}
							],
							"parameters": [
								{
									"id": 331,
									"name": "client",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The client instance."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 1,
										"name": "Client",
										"package": "solace.js"
									}
								},
								{
									"id": 332,
									"name": "args",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isRest": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Additional arguments passed when the event is triggered."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "any"
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/typescript@5.2.2/node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						323
					]
				},
				{
					"title": "Properties",
					"children": [
						327,
						328
					]
				},
				{
					"title": "Methods",
					"children": [
						329
					]
				}
			],
			"sources": [
				{
					"fileName": "src/helper/Event.ts",
					"line": 7,
					"character": 13,
					"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/helper/Event.ts#L7"
				}
			]
		},
		{
			"id": 1133,
			"name": "EventHandler",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A utility class for handling Discord events received by the client."
					}
				]
			},
			"children": [
				{
					"id": 1142,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 1143,
							"name": "new EventHandler",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 1133,
								"name": "EventHandler",
								"package": "solace.js"
							}
						}
					]
				},
				{
					"id": 1138,
					"name": "MESSAGE_CREATE",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPublic": true,
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "src/util/EventHandler.ts",
							"line": 27,
							"character": 18,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/util/EventHandler.ts#L27"
						}
					],
					"signatures": [
						{
							"id": 1139,
							"name": "MESSAGE_CREATE",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Handles the \"MESSAGE_CREATE\" event by."
									}
								]
							},
							"sources": [
								{
									"fileName": "src/util/EventHandler.ts",
									"line": 27,
									"character": 18,
									"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/util/EventHandler.ts#L27"
								}
							],
							"parameters": [
								{
									"id": 1140,
									"name": "client",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The client instance."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 1,
										"name": "Client",
										"package": "solace.js"
									}
								},
								{
									"id": 1141,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The data associated with the \"MESSAGE_CREATE\" event."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 1134,
					"name": "READY",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPublic": true,
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "src/util/EventHandler.ts",
							"line": 14,
							"character": 18,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/util/EventHandler.ts#L14"
						}
					],
					"signatures": [
						{
							"id": 1135,
							"name": "READY",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Handles the \"READY\" event."
									}
								]
							},
							"sources": [
								{
									"fileName": "src/util/EventHandler.ts",
									"line": 14,
									"character": 18,
									"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/util/EventHandler.ts#L14"
								}
							],
							"parameters": [
								{
									"id": 1136,
									"name": "client",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The client instance."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 1,
										"name": "Client",
										"package": "solace.js"
									}
								},
								{
									"id": 1137,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The data associated with the \"READY\" event."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						1142
					]
				},
				{
					"title": "Methods",
					"children": [
						1138,
						1134
					]
				}
			],
			"sources": [
				{
					"fileName": "src/util/EventHandler.ts",
					"line": 7,
					"character": 13,
					"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/util/EventHandler.ts#L7"
				}
			]
		},
		{
			"id": 268,
			"name": "GatewayIntents",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A utility class for managing Discord Gateway Intents."
					}
				]
			},
			"children": [
				{
					"id": 291,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 292,
							"name": "new GatewayIntents",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 268,
								"name": "GatewayIntents",
								"package": "solace.js"
							}
						}
					]
				},
				{
					"id": 286,
					"name": "AUTO_MODERATION_CONFIGURATION",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPublic": true,
						"isStatic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Represents the \"AUTO_MODERATION_CONFIGURATION\" intent, allowing access to auto-moderation configuration-related events and data."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/config/GatewayIntents.ts",
							"line": 94,
							"character": 18,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/config/GatewayIntents.ts#L94"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "..."
				},
				{
					"id": 287,
					"name": "AUTO_MODERATION_EXECUTION",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPublic": true,
						"isStatic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Represents the \"AUTO_MODERATION_EXECUTION\" intent, allowing access to auto-moderation execution-related events and data."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/config/GatewayIntents.ts",
							"line": 99,
							"character": 18,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/config/GatewayIntents.ts#L99"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "..."
				},
				{
					"id": 281,
					"name": "DIRECT_MESSAGES",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPublic": true,
						"isStatic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Represents the \"DIRECT_MESSAGES\" intent, allowing access to direct message-related events and data."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/config/GatewayIntents.ts",
							"line": 69,
							"character": 18,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/config/GatewayIntents.ts#L69"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "..."
				},
				{
					"id": 282,
					"name": "DIRECT_MESSAGE_REACTIONS",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPublic": true,
						"isStatic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Represents the \"DIRECT_MESSAGE_REACTIONS\" intent, allowing access to direct message reaction-related events and data."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/config/GatewayIntents.ts",
							"line": 74,
							"character": 18,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/config/GatewayIntents.ts#L74"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "..."
				},
				{
					"id": 283,
					"name": "DIRECT_MESSAGE_TYPING",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPublic": true,
						"isStatic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Represents the \"DIRECT_MESSAGE_TYPING\" intent, allowing access to direct message typing-related events."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/config/GatewayIntents.ts",
							"line": 79,
							"character": 18,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/config/GatewayIntents.ts#L79"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "..."
				},
				{
					"id": 269,
					"name": "GUILDS",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPublic": true,
						"isStatic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Represents the \"GUILDS\" intent, allowing access to guilds and guild-related data."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/config/GatewayIntents.ts",
							"line": 9,
							"character": 18,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/config/GatewayIntents.ts#L9"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "..."
				},
				{
					"id": 272,
					"name": "GUILD_EMOJIS_AND_STICKERS",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPublic": true,
						"isStatic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Represents the \"GUILD_EMOJIS_AND_STICKERS\" intent, allowing access to emoji and sticker-related events and data within guilds."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/config/GatewayIntents.ts",
							"line": 24,
							"character": 18,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/config/GatewayIntents.ts#L24"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "..."
				},
				{
					"id": 273,
					"name": "GUILD_INTEGRATIONS",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPublic": true,
						"isStatic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Represents the \"GUILD_INTEGRATIONS\" intent, allowing access to integration-related events and data within guilds."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/config/GatewayIntents.ts",
							"line": 29,
							"character": 18,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/config/GatewayIntents.ts#L29"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "..."
				},
				{
					"id": 275,
					"name": "GUILD_INVITES",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPublic": true,
						"isStatic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Represents the \"GUILD_INVITES\" intent, allowing access to invite-related events and data within guilds."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/config/GatewayIntents.ts",
							"line": 39,
							"character": 18,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/config/GatewayIntents.ts#L39"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "..."
				},
				{
					"id": 270,
					"name": "GUILD_MEMBERS",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPublic": true,
						"isStatic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Represents the \"GUILD_MEMBERS\" intent, allowing access to member-related events and data within guilds."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/config/GatewayIntents.ts",
							"line": 14,
							"character": 18,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/config/GatewayIntents.ts#L14"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "..."
				},
				{
					"id": 278,
					"name": "GUILD_MESSAGES",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPublic": true,
						"isStatic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Represents the \"GUILD_MESSAGES\" intent, allowing access to message-related events and data within guilds."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/config/GatewayIntents.ts",
							"line": 54,
							"character": 18,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/config/GatewayIntents.ts#L54"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "..."
				},
				{
					"id": 279,
					"name": "GUILD_MESSAGE_REACTIONS",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPublic": true,
						"isStatic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Represents the \"GUILD_MESSAGE_REACTIONS\" intent, allowing access to message reaction-related events and data within guilds."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/config/GatewayIntents.ts",
							"line": 59,
							"character": 18,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/config/GatewayIntents.ts#L59"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "..."
				},
				{
					"id": 280,
					"name": "GUILD_MESSAGE_TYPING",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPublic": true,
						"isStatic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Represents the \"GUILD_MESSAGE_TYPING\" intent, allowing access to message typing-related events within guilds."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/config/GatewayIntents.ts",
							"line": 64,
							"character": 18,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/config/GatewayIntents.ts#L64"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "..."
				},
				{
					"id": 271,
					"name": "GUILD_MODERATION",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPublic": true,
						"isStatic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Represents the \"GUILD_MODERATION\" intent, allowing access to moderation-related events and data within guilds."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/config/GatewayIntents.ts",
							"line": 19,
							"character": 18,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/config/GatewayIntents.ts#L19"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "..."
				},
				{
					"id": 277,
					"name": "GUILD_PRESENCES",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPublic": true,
						"isStatic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Represents the \"GUILD_PRESENCES\" intent, allowing access to presence-related events and data within guilds."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/config/GatewayIntents.ts",
							"line": 49,
							"character": 18,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/config/GatewayIntents.ts#L49"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "..."
				},
				{
					"id": 285,
					"name": "GUILD_SCHEDULED_EVENTS",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPublic": true,
						"isStatic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Represents the \"GUILD_SCHEDULED_EVENTS\" intent, allowing access to scheduled event-related events and data within guilds."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/config/GatewayIntents.ts",
							"line": 89,
							"character": 18,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/config/GatewayIntents.ts#L89"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "..."
				},
				{
					"id": 276,
					"name": "GUILD_VOICE_STATES",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPublic": true,
						"isStatic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Represents the \"GUILD_VOICE_STATES\" intent, allowing access to voice state-related events and data within guilds."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/config/GatewayIntents.ts",
							"line": 44,
							"character": 18,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/config/GatewayIntents.ts#L44"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "..."
				},
				{
					"id": 274,
					"name": "GUILD_WEBHOOKS",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPublic": true,
						"isStatic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Represents the \"GUILD_WEBHOOKS\" intent, allowing access to webhook-related events and data within guilds."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/config/GatewayIntents.ts",
							"line": 34,
							"character": 18,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/config/GatewayIntents.ts#L34"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "..."
				},
				{
					"id": 284,
					"name": "MESSAGE_CONTENT",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPublic": true,
						"isStatic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Represents the \"MESSAGE_CONTENT\" intent, allowing access to message content and partial message events."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/config/GatewayIntents.ts",
							"line": 84,
							"character": 18,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/config/GatewayIntents.ts#L84"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "..."
				},
				{
					"id": 288,
					"name": "combineIntents",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPublic": true,
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "src/config/GatewayIntents.ts",
							"line": 106,
							"character": 18,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/config/GatewayIntents.ts#L106"
						}
					],
					"signatures": [
						{
							"id": 289,
							"name": "combineIntents",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Combines multiple Gateway Intents into a single numeric value."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "- The combined Gateway Intents as a numeric value."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "src/config/GatewayIntents.ts",
									"line": 106,
									"character": 18,
									"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/config/GatewayIntents.ts#L106"
								}
							],
							"parameters": [
								{
									"id": 290,
									"name": "intents",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isRest": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The Gateway Intents to combine."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "number"
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						291
					]
				},
				{
					"title": "Properties",
					"children": [
						286,
						287,
						281,
						282,
						283,
						269,
						272,
						273,
						275,
						270,
						278,
						279,
						280,
						271,
						277,
						285,
						276,
						274,
						284
					]
				},
				{
					"title": "Methods",
					"children": [
						288
					]
				}
			],
			"sources": [
				{
					"fileName": "src/config/GatewayIntents.ts",
					"line": 4,
					"character": 13,
					"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/config/GatewayIntents.ts#L4"
				}
			]
		},
		{
			"id": 877,
			"name": "Guild",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Represents a guild (server)."
					}
				]
			},
			"children": [
				{
					"id": 878,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"sources": [
						{
							"fileName": "src/structures/Guild.ts",
							"line": 274,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/Guild.ts#L274"
						}
					],
					"signatures": [
						{
							"id": 879,
							"name": "new Guild",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Creates a new Guild instance."
									}
								]
							},
							"sources": [
								{
									"fileName": "src/structures/Guild.ts",
									"line": 274,
									"character": 4,
									"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/Guild.ts#L274"
								}
							],
							"parameters": [
								{
									"id": 880,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The data object containing guild information."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 478,
										"name": "ApiGuild",
										"package": "solace.js"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 877,
								"name": "Guild",
								"package": "solace.js"
							}
						}
					]
				},
				{
					"id": 881,
					"name": "afkChannelId",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPublic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the AFK channel, or null if not provided."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/structures/Guild.ts",
							"line": 16,
							"character": 11,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/Guild.ts#L16"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 882,
					"name": "afkTimeout",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPublic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The AFK timeout in seconds."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/structures/Guild.ts",
							"line": 22,
							"character": 11,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/Guild.ts#L22"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 883,
					"name": "applicationId",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPublic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The application ID, or null if not provided."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/structures/Guild.ts",
							"line": 28,
							"character": 11,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/Guild.ts#L28"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 884,
					"name": "approximateMemberCount",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPublic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The approximate member count, or null if not provided."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/structures/Guild.ts",
							"line": 34,
							"character": 11,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/Guild.ts#L34"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 885,
					"name": "approximatePresenceCount",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPublic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The approximate presence count, or null if not provided."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/structures/Guild.ts",
							"line": 40,
							"character": 11,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/Guild.ts#L40"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 886,
					"name": "banner",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPublic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The banner image URL of the guild, or null if not provided."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/structures/Guild.ts",
							"line": 46,
							"character": 11,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/Guild.ts#L46"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 887,
					"name": "defaultMessageNotifications",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPublic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The default message notification level."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/structures/Guild.ts",
							"line": 52,
							"character": 11,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/Guild.ts#L52"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 888,
					"name": "description",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPublic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The description of the guild, or null if not provided."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/structures/Guild.ts",
							"line": 58,
							"character": 11,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/Guild.ts#L58"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 889,
					"name": "discoverySplash",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPublic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The discovery splash image URL of the guild, or null if not provided."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/structures/Guild.ts",
							"line": 64,
							"character": 11,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/Guild.ts#L64"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 890,
					"name": "emojis",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPublic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The array of emojis in the guild."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/structures/Guild.ts",
							"line": 70,
							"character": 11,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/Guild.ts#L70"
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 865,
							"name": "Emoji",
							"package": "solace.js"
						}
					}
				},
				{
					"id": 891,
					"name": "explicitContentFilter",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPublic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The explicit content filter level."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/structures/Guild.ts",
							"line": 76,
							"character": 11,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/Guild.ts#L76"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 892,
					"name": "features",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPublic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The features supported by the guild."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/structures/Guild.ts",
							"line": 82,
							"character": 11,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/Guild.ts#L82"
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 893,
					"name": "icon",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPublic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The icon image URL of the guild, or null if not provided."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/structures/Guild.ts",
							"line": 88,
							"character": 11,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/Guild.ts#L88"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 894,
					"name": "iconHash",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPublic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The icon hash of the guild, or null if not provided."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/structures/Guild.ts",
							"line": 94,
							"character": 11,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/Guild.ts#L94"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 895,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPublic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the guild."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/structures/Guild.ts",
							"line": 100,
							"character": 11,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/Guild.ts#L100"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 896,
					"name": "maxMembers",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPublic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The maximum number of members the guild can have, or null if not provided."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/structures/Guild.ts",
							"line": 106,
							"character": 11,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/Guild.ts#L106"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 897,
					"name": "maxPresences",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPublic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The maximum number of presences the guild can have, or null if not provided."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/structures/Guild.ts",
							"line": 112,
							"character": 11,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/Guild.ts#L112"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 898,
					"name": "maxStageVideoChannelUsers",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPublic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The maximum number of users in a stage video channel, or null if not provided."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/structures/Guild.ts",
							"line": 118,
							"character": 11,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/Guild.ts#L118"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 899,
					"name": "maxVideoChannelUsers",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPublic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The maximum number of users in a video channel, or null if not provided."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/structures/Guild.ts",
							"line": 124,
							"character": 11,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/Guild.ts#L124"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 900,
					"name": "mfaLevel",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPublic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The level of multi-factor authentication required."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/structures/Guild.ts",
							"line": 130,
							"character": 11,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/Guild.ts#L130"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 901,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPublic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The name of the guild."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/structures/Guild.ts",
							"line": 136,
							"character": 11,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/Guild.ts#L136"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 902,
					"name": "nsfwLevel",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPublic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The NSFW (Not Safe for Work) content level."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/structures/Guild.ts",
							"line": 142,
							"character": 11,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/Guild.ts#L142"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 903,
					"name": "owner",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPublic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Indicates whether the current user is the owner of the guild."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/structures/Guild.ts",
							"line": 148,
							"character": 11,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/Guild.ts#L148"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 904,
					"name": "ownerId",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPublic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the owner of the guild."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/structures/Guild.ts",
							"line": 154,
							"character": 11,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/Guild.ts#L154"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 905,
					"name": "permissions",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPublic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The permissions of the current user in the guild, or null if not provided."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/structures/Guild.ts",
							"line": 160,
							"character": 11,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/Guild.ts#L160"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 906,
					"name": "preferredLocale",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPublic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The preferred locale of the guild."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/structures/Guild.ts",
							"line": 166,
							"character": 11,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/Guild.ts#L166"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 907,
					"name": "premiumProgressBarEnabled",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPublic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Indicates whether the premium progress bar is enabled."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/structures/Guild.ts",
							"line": 172,
							"character": 11,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/Guild.ts#L172"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 908,
					"name": "premiumSubscriptionCount",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPublic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The number of premium subscriptions, or null if not provided."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/structures/Guild.ts",
							"line": 178,
							"character": 11,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/Guild.ts#L178"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 909,
					"name": "premiumTier",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPublic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The premium tier level."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/structures/Guild.ts",
							"line": 184,
							"character": 11,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/Guild.ts#L184"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 910,
					"name": "publicUpdatesChannelId",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPublic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the channel where public updates are sent, or null if not provided."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/structures/Guild.ts",
							"line": 190,
							"character": 11,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/Guild.ts#L190"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 911,
					"name": "region",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPublic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The region of the guild, or null if not provided."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/structures/Guild.ts",
							"line": 196,
							"character": 11,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/Guild.ts#L196"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 912,
					"name": "roles",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPublic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The array of roles in the guild."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/structures/Guild.ts",
							"line": 202,
							"character": 11,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/Guild.ts#L202"
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 1008,
							"name": "Role",
							"package": "solace.js"
						}
					}
				},
				{
					"id": 913,
					"name": "rulesChannelId",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPublic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the channel where rules are displayed, or null if not provided."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/structures/Guild.ts",
							"line": 208,
							"character": 11,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/Guild.ts#L208"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 914,
					"name": "safetyAlertsChannelId",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPublic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the channel for safety alerts, or null if not provided."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/structures/Guild.ts",
							"line": 214,
							"character": 11,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/Guild.ts#L214"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 915,
					"name": "splash",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPublic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The splash image URL of the guild, or null if not provided."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/structures/Guild.ts",
							"line": 220,
							"character": 11,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/Guild.ts#L220"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 916,
					"name": "stickers",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPublic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The array of stickers associated with the guild, or undefined if not provided."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/structures/Guild.ts",
							"line": 226,
							"character": 11,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/Guild.ts#L226"
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 1034,
							"name": "Sticker",
							"package": "solace.js"
						}
					}
				},
				{
					"id": 917,
					"name": "systemChannelFlags",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPublic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The system channel flags."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/structures/Guild.ts",
							"line": 232,
							"character": 11,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/Guild.ts#L232"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 918,
					"name": "systemChannelId",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPublic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the system channel, or null if not provided."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/structures/Guild.ts",
							"line": 238,
							"character": 11,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/Guild.ts#L238"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 919,
					"name": "vanityUrlCode",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPublic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The vanity URL code, or null if not provided."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/structures/Guild.ts",
							"line": 244,
							"character": 11,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/Guild.ts#L244"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 920,
					"name": "verificationLevel",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPublic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The verification level of the guild."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/structures/Guild.ts",
							"line": 250,
							"character": 11,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/Guild.ts#L250"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 921,
					"name": "welcomeScreen",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPublic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The welcome screen configuration, or null if not provided."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/structures/Guild.ts",
							"line": 256,
							"character": 11,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/Guild.ts#L256"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": 1119,
								"name": "WelcomeScreen",
								"package": "solace.js"
							}
						]
					}
				},
				{
					"id": 922,
					"name": "widgetChannelId",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPublic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the widget channel, or null if not provided."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/structures/Guild.ts",
							"line": 262,
							"character": 11,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/Guild.ts#L262"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 923,
					"name": "widgetEnabled",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPublic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Indicates whether the widget is enabled."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/structures/Guild.ts",
							"line": 268,
							"character": 11,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/Guild.ts#L268"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						878
					]
				},
				{
					"title": "Properties",
					"children": [
						881,
						882,
						883,
						884,
						885,
						886,
						887,
						888,
						889,
						890,
						891,
						892,
						893,
						894,
						895,
						896,
						897,
						898,
						899,
						900,
						901,
						902,
						903,
						904,
						905,
						906,
						907,
						908,
						909,
						910,
						911,
						912,
						913,
						914,
						915,
						916,
						917,
						918,
						919,
						920,
						921,
						922,
						923
					]
				}
			],
			"sources": [
				{
					"fileName": "src/structures/Guild.ts",
					"line": 10,
					"character": 13,
					"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/Guild.ts#L10"
				}
			]
		},
		{
			"id": 924,
			"name": "GuildMember",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Represents a member of a guild."
					}
				]
			},
			"children": [
				{
					"id": 925,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"sources": [
						{
							"fileName": "src/structures/GuildMember.ts",
							"line": 85,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/GuildMember.ts#L85"
						}
					],
					"signatures": [
						{
							"id": 926,
							"name": "new GuildMember",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Creates a new GuildMember instance."
									}
								]
							},
							"sources": [
								{
									"fileName": "src/structures/GuildMember.ts",
									"line": 85,
									"character": 4,
									"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/GuildMember.ts#L85"
								}
							],
							"parameters": [
								{
									"id": 927,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The data object containing member information."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 542,
										"name": "ApiGuildMember",
										"package": "solace.js"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 924,
								"name": "GuildMember",
								"package": "solace.js"
							}
						}
					]
				},
				{
					"id": 928,
					"name": "avatar",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPublic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The avatar image URL of the member, or null if not provided."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/structures/GuildMember.ts",
							"line": 13,
							"character": 11,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/GuildMember.ts#L13"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 929,
					"name": "communicationDisabledUntil",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPublic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The date and time when communication is disabled until for the member, or null if not provided."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/structures/GuildMember.ts",
							"line": 19,
							"character": 11,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/GuildMember.ts#L19"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 930,
					"name": "deaf",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPublic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Indicates whether the member is deafened in voice channels."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/structures/GuildMember.ts",
							"line": 25,
							"character": 11,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/GuildMember.ts#L25"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 931,
					"name": "flags",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPublic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The member's flags."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/structures/GuildMember.ts",
							"line": 31,
							"character": 11,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/GuildMember.ts#L31"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 932,
					"name": "joinedAt",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPublic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The date and time when the member joined the guild."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/structures/GuildMember.ts",
							"line": 37,
							"character": 11,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/GuildMember.ts#L37"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 933,
					"name": "mute",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPublic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Indicates whether the member is muted in voice channels."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/structures/GuildMember.ts",
							"line": 43,
							"character": 11,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/GuildMember.ts#L43"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 934,
					"name": "nick",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPublic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The nickname of the member, or null if not provided."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/structures/GuildMember.ts",
							"line": 49,
							"character": 11,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/GuildMember.ts#L49"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 935,
					"name": "pending",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPublic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Indicates whether the member is pending membership approval."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/structures/GuildMember.ts",
							"line": 55,
							"character": 11,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/GuildMember.ts#L55"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 936,
					"name": "permissions",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPublic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The permissions of the member, or null if not provided."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/structures/GuildMember.ts",
							"line": 61,
							"character": 11,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/GuildMember.ts#L61"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 937,
					"name": "premiumSince",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPublic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The date and time when the member boosted the server (Nitro Boost), or null if not provided."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/structures/GuildMember.ts",
							"line": 67,
							"character": 11,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/GuildMember.ts#L67"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 938,
					"name": "roles",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPublic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of role IDs that the member has."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/structures/GuildMember.ts",
							"line": 73,
							"character": 11,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/GuildMember.ts#L73"
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 939,
					"name": "user",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPublic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The user associated with this member, or null if not provided."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/structures/GuildMember.ts",
							"line": 79,
							"character": 11,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/GuildMember.ts#L79"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": 1098,
								"name": "User",
								"package": "solace.js"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						925
					]
				},
				{
					"title": "Properties",
					"children": [
						928,
						929,
						930,
						931,
						932,
						933,
						934,
						935,
						936,
						937,
						938,
						939
					]
				}
			],
			"sources": [
				{
					"fileName": "src/structures/GuildMember.ts",
					"line": 7,
					"character": 13,
					"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/GuildMember.ts#L7"
				}
			]
		},
		{
			"id": 940,
			"name": "Interaction",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Represents an interaction with the bot."
					}
				]
			},
			"children": [
				{
					"id": 941,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"sources": [
						{
							"fileName": "src/structures/Interaction.ts",
							"line": 44,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/Interaction.ts#L44"
						}
					],
					"signatures": [
						{
							"id": 942,
							"name": "new Interaction",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Creates a new Interaction instance."
									}
								]
							},
							"sources": [
								{
									"fileName": "src/structures/Interaction.ts",
									"line": 44,
									"character": 4,
									"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/Interaction.ts#L44"
								}
							],
							"parameters": [
								{
									"id": 943,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The data object containing interaction information."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 581,
										"name": "ApiInteraction",
										"package": "solace.js"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 940,
								"name": "Interaction",
								"package": "solace.js"
							}
						}
					]
				},
				{
					"id": 944,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPublic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The unique ID of the interaction."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/structures/Interaction.ts",
							"line": 14,
							"character": 11,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/Interaction.ts#L14"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 945,
					"name": "member",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPublic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The member associated with the interaction, or null if not provided."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/structures/Interaction.ts",
							"line": 20,
							"character": 11,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/Interaction.ts#L20"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": 924,
								"name": "GuildMember",
								"package": "solace.js"
							}
						]
					}
				},
				{
					"id": 946,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPublic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The name of the interaction."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/structures/Interaction.ts",
							"line": 26,
							"character": 11,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/Interaction.ts#L26"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 947,
					"name": "type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPublic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The type of the interaction."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/structures/Interaction.ts",
							"line": 32,
							"character": 11,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/Interaction.ts#L32"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 948,
					"name": "user",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPublic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The user who initiated the interaction, or null if not provided."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/structures/Interaction.ts",
							"line": 38,
							"character": 11,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/Interaction.ts#L38"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": 1098,
								"name": "User",
								"package": "solace.js"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						941
					]
				},
				{
					"title": "Properties",
					"children": [
						944,
						945,
						946,
						947,
						948
					]
				}
			],
			"sources": [
				{
					"fileName": "src/structures/Interaction.ts",
					"line": 8,
					"character": 13,
					"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/Interaction.ts#L8"
				}
			]
		},
		{
			"id": 949,
			"name": "Message",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Represents a message on discord"
					}
				]
			},
			"children": [
				{
					"id": 950,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"sources": [
						{
							"fileName": "src/structures/Message.ts",
							"line": 182,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/Message.ts#L182"
						}
					],
					"signatures": [
						{
							"id": 951,
							"name": "new Message",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Constructs a new Message instance."
									}
								]
							},
							"sources": [
								{
									"fileName": "src/structures/Message.ts",
									"line": 182,
									"character": 4,
									"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/Message.ts#L182"
								}
							],
							"parameters": [
								{
									"id": 952,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The message data."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 588,
										"name": "ApiMessage",
										"package": "solace.js"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 949,
								"name": "Message",
								"package": "solace.js"
							}
						}
					]
				},
				{
					"id": 953,
					"name": "activity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPublic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Sent with Rich Presence-related chat embeds"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/structures/Message.ts",
							"line": 26,
							"character": 11,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/Message.ts#L26"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": 735,
								"name": "Activity",
								"package": "solace.js"
							}
						]
					}
				},
				{
					"id": 954,
					"name": "application",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPublic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Sent with Rich Presence-related chat embeds"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/structures/Message.ts",
							"line": 31,
							"character": 11,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/Message.ts#L31"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": 741,
								"name": "Application",
								"package": "solace.js"
							}
						]
					}
				},
				{
					"id": 955,
					"name": "applicationId",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPublic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "If the message is an Interaction or application-owned webhook, this is the id of the application"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/structures/Message.ts",
							"line": 36,
							"character": 11,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/Message.ts#L36"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 956,
					"name": "attachments",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPublic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of attachments (e.g., files, images) sent with the message."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/structures/Message.ts",
							"line": 41,
							"character": 11,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/Message.ts#L41"
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 773,
							"name": "Attachment",
							"package": "solace.js"
						}
					}
				},
				{
					"id": 957,
					"name": "author",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPublic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The user who sent the message."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/structures/Message.ts",
							"line": 46,
							"character": 11,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/Message.ts#L46"
						}
					],
					"type": {
						"type": "reference",
						"target": 1098,
						"name": "User",
						"package": "solace.js"
					}
				},
				{
					"id": 958,
					"name": "channelId",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPublic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The unique identifier of the channel where the message was sent."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/structures/Message.ts",
							"line": 51,
							"character": 11,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/Message.ts#L51"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 959,
					"name": "components",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPublic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Components of the message, if any (e.g., buttons, action rows)."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/structures/Message.ts",
							"line": 56,
							"character": 11,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/Message.ts#L56"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "any"
								}
							}
						]
					}
				},
				{
					"id": 960,
					"name": "content",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPublic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The content (text) of the message."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/structures/Message.ts",
							"line": 61,
							"character": 11,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/Message.ts#L61"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 961,
					"name": "editedTimestamp",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPublic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Timestamp of when the message was last edited, if edited."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/structures/Message.ts",
							"line": 66,
							"character": 11,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/Message.ts#L66"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 962,
					"name": "embeds",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPublic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Embeds (rich media content) included in the message."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/structures/Message.ts",
							"line": 71,
							"character": 11,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/Message.ts#L71"
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 796,
							"name": "Embed",
							"package": "solace.js"
						}
					}
				},
				{
					"id": 963,
					"name": "flags",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPublic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Flags associated with the message, if any."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/structures/Message.ts",
							"line": 76,
							"character": 11,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/Message.ts#L76"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 964,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPublic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The id of the message."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/structures/Message.ts",
							"line": 81,
							"character": 11,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/Message.ts#L81"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 965,
					"name": "interaction",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPublic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Interaction data, if the message is part of an interaction."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/structures/Message.ts",
							"line": 86,
							"character": 11,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/Message.ts#L86"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": 940,
								"name": "Interaction",
								"package": "solace.js"
							}
						]
					}
				},
				{
					"id": 967,
					"name": "mentionChannels",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPublic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Channels mentioned in the message content, if any."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/structures/Message.ts",
							"line": 96,
							"character": 11,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/Message.ts#L96"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "any"
								}
							}
						]
					}
				},
				{
					"id": 966,
					"name": "mentionEveryone",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPublic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Indicates whether the message mentions everyone in the channel."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/structures/Message.ts",
							"line": 91,
							"character": 11,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/Message.ts#L91"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 968,
					"name": "mentionRoles",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPublic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Roles mentioned in the message content."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/structures/Message.ts",
							"line": 101,
							"character": 11,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/Message.ts#L101"
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 969,
					"name": "mentions",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPublic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Users mentioned in the message content."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/structures/Message.ts",
							"line": 106,
							"character": 11,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/Message.ts#L106"
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 1098,
							"name": "User",
							"package": "solace.js"
						}
					}
				},
				{
					"id": 970,
					"name": "messageReference",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPublic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Reference to another message, if this message is a reply or reference."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/structures/Message.ts",
							"line": 111,
							"character": 11,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/Message.ts#L111"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 971,
					"name": "nonce",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPublic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A unique identifier for the message used for checking message delivery (nonce)."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/structures/Message.ts",
							"line": 116,
							"character": 11,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/Message.ts#L116"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 972,
					"name": "pinned",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPublic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Indicates whether the message is pinned in the channel."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/structures/Message.ts",
							"line": 121,
							"character": 11,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/Message.ts#L121"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 973,
					"name": "position",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPublic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The position of the message in the channel, if applicable."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/structures/Message.ts",
							"line": 126,
							"character": 11,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/Message.ts#L126"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 974,
					"name": "reactions",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPublic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Reactions (e.g., emojis) added to the message, if any."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/structures/Message.ts",
							"line": 131,
							"character": 11,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/Message.ts#L131"
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 984,
							"name": "Reaction",
							"package": "solace.js"
						}
					}
				},
				{
					"id": 975,
					"name": "referencedMessage",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPublic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The message that this message references, if applicable."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/structures/Message.ts",
							"line": 136,
							"character": 11,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/Message.ts#L136"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "any"
					}
				},
				{
					"id": 976,
					"name": "roleSubscriptionData",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPublic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Subscription data related to roles, if any."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/structures/Message.ts",
							"line": 141,
							"character": 11,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/Message.ts#L141"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": 1000,
								"name": "RoleSubscriptionData",
								"package": "solace.js"
							}
						]
					}
				},
				{
					"id": 977,
					"name": "stickerItems",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPublic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Items associated with stickers sent in the message, if any."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/structures/Message.ts",
							"line": 146,
							"character": 11,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/Message.ts#L146"
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 1050,
							"name": "StickerItem",
							"package": "solace.js"
						}
					}
				},
				{
					"id": 978,
					"name": "stickers",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPublic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Stickers used in the message, if any."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/structures/Message.ts",
							"line": 151,
							"character": 11,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/Message.ts#L151"
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 1034,
							"name": "Sticker",
							"package": "solace.js"
						}
					}
				},
				{
					"id": 979,
					"name": "thread",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPublic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The thread associated with the message, if part of a threaded conversation."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/structures/Message.ts",
							"line": 156,
							"character": 11,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/Message.ts#L156"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": 1074,
								"name": "ThreadChannel",
								"package": "solace.js"
							}
						]
					}
				},
				{
					"id": 980,
					"name": "timestamp",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPublic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Timestamp indicating when the message was sent."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/structures/Message.ts",
							"line": 161,
							"character": 11,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/Message.ts#L161"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 981,
					"name": "tts",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPublic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Indicates whether the message is a text-to-speech (TTS) message."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/structures/Message.ts",
							"line": 166,
							"character": 11,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/Message.ts#L166"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 982,
					"name": "type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPublic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The type of the message (e.g., DEFAULT, RECIPIENT_ADD, RECIPIENT_REMOVE\tCALL, etc.)."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/structures/Message.ts",
							"line": 171,
							"character": 11,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/Message.ts#L171"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 983,
					"name": "webhookId",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPublic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The id of the webhook that sent the message, if applicable."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/structures/Message.ts",
							"line": 176,
							"character": 11,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/Message.ts#L176"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						950
					]
				},
				{
					"title": "Properties",
					"children": [
						953,
						954,
						955,
						956,
						957,
						958,
						959,
						960,
						961,
						962,
						963,
						964,
						965,
						967,
						966,
						968,
						969,
						970,
						971,
						972,
						973,
						974,
						975,
						976,
						977,
						978,
						979,
						980,
						981,
						982,
						983
					]
				}
			],
			"sources": [
				{
					"fileName": "src/structures/Message.ts",
					"line": 21,
					"character": 13,
					"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/Message.ts#L21"
				}
			]
		},
		{
			"id": 293,
			"name": "OpCodes",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A utility class for managing Discord Gateway operation codes (OpCodes)."
					}
				]
			},
			"children": [
				{
					"id": 305,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 306,
							"name": "new OpCodes",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 293,
								"name": "OpCodes",
								"package": "solace.js"
							}
						}
					]
				},
				{
					"id": 294,
					"name": "DISPATCH",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPublic": true,
						"isStatic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Represents the \"DISPATCH\" operation code used for dispatching events from discord."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/config/OpCodes.ts",
							"line": 9,
							"character": 18,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/config/OpCodes.ts#L9"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "0"
				},
				{
					"id": 295,
					"name": "HEARTBEAT",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPublic": true,
						"isStatic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Represents the \"HEARTBEAT\" operation code used for heartbeating to keep the connection alive."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/config/OpCodes.ts",
							"line": 14,
							"character": 18,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/config/OpCodes.ts#L14"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "1"
				},
				{
					"id": 304,
					"name": "HEARTBEAT_ACK",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPublic": true,
						"isStatic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Represents the \"HEARTBEAT_ACK\" operation code used for acknowledging received heartbeats."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/config/OpCodes.ts",
							"line": 59,
							"character": 18,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/config/OpCodes.ts#L59"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "11"
				},
				{
					"id": 303,
					"name": "HELLO",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPublic": true,
						"isStatic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Represents the \"HELLO\" operation code used for acknowledging the connection and receiving heartbeat intervals."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/config/OpCodes.ts",
							"line": 54,
							"character": 18,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/config/OpCodes.ts#L54"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "10"
				},
				{
					"id": 296,
					"name": "IDENTIFY",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPublic": true,
						"isStatic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Represents the \"IDENTIFY\" operation code used for identifying with discord."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/config/OpCodes.ts",
							"line": 19,
							"character": 18,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/config/OpCodes.ts#L19"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "2"
				},
				{
					"id": 302,
					"name": "INVALID_SESSION",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPublic": true,
						"isStatic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Represents the \"INVALID_SESSION\" operation code used for handling an invalid session."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/config/OpCodes.ts",
							"line": 49,
							"character": 18,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/config/OpCodes.ts#L49"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "9"
				},
				{
					"id": 297,
					"name": "PRESENCE_UPDATE",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPublic": true,
						"isStatic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Represents the \"PRESENCE_UPDATE\" operation code used for updating the client's presence."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/config/OpCodes.ts",
							"line": 24,
							"character": 18,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/config/OpCodes.ts#L24"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "3"
				},
				{
					"id": 300,
					"name": "RECONNECT",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPublic": true,
						"isStatic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Represents the \"RECONNECT\" operation code used for reconnecting to discord."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/config/OpCodes.ts",
							"line": 39,
							"character": 18,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/config/OpCodes.ts#L39"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "7"
				},
				{
					"id": 301,
					"name": "REQUEST_GUILD_MEMBERS",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPublic": true,
						"isStatic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Represents the \"REQUEST_GUILD_MEMBERS\" operation code used for requesting guild members."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/config/OpCodes.ts",
							"line": 44,
							"character": 18,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/config/OpCodes.ts#L44"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "8"
				},
				{
					"id": 299,
					"name": "RESUME",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPublic": true,
						"isStatic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Represents the \"RESUME\" operation code used for resuming a connection."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/config/OpCodes.ts",
							"line": 34,
							"character": 18,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/config/OpCodes.ts#L34"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "6"
				},
				{
					"id": 298,
					"name": "VOICE_STATE_UPDATE",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPublic": true,
						"isStatic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Represents the \"VOICE_STATE_UPDATE\" operation code used for updating voice states."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/config/OpCodes.ts",
							"line": 29,
							"character": 18,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/config/OpCodes.ts#L29"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "4"
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						305
					]
				},
				{
					"title": "Properties",
					"children": [
						294,
						295,
						304,
						303,
						296,
						302,
						297,
						300,
						301,
						299,
						298
					]
				}
			],
			"sources": [
				{
					"fileName": "src/config/OpCodes.ts",
					"line": 4,
					"character": 13,
					"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/config/OpCodes.ts#L4"
				}
			]
		},
		{
			"id": 333,
			"name": "Plugin",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Represents a plugin that can be registered and ran alongside your bot."
					}
				]
			},
			"children": [
				{
					"id": 334,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"sources": [
						{
							"fileName": "src/helper/Plugin.ts",
							"line": 12,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/helper/Plugin.ts#L12"
						}
					],
					"signatures": [
						{
							"id": 335,
							"name": "new Plugin",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Set the name of the plugin."
									}
								]
							},
							"sources": [
								{
									"fileName": "src/helper/Plugin.ts",
									"line": 12,
									"character": 4,
									"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/helper/Plugin.ts#L12"
								}
							],
							"parameters": [
								{
									"id": 336,
									"name": "name",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The name of the plugin."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 333,
								"name": "Plugin",
								"package": "solace.js"
							}
						}
					]
				},
				{
					"id": 337,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The name of the plugin."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/helper/Plugin.ts",
							"line": 12,
							"character": 24,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/helper/Plugin.ts#L12"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 347,
					"name": "getName",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/helper/Plugin.ts",
							"line": 39,
							"character": 11,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/helper/Plugin.ts#L39"
						}
					],
					"signatures": [
						{
							"id": 348,
							"name": "getName",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Gets the name of the plugin"
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "The name of the plugin"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "src/helper/Plugin.ts",
									"line": 39,
									"character": 11,
									"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/helper/Plugin.ts#L39"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "string"
							}
						}
					]
				},
				{
					"id": 341,
					"name": "onDisable",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/helper/Plugin.ts",
							"line": 24,
							"character": 11,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/helper/Plugin.ts#L24"
						}
					],
					"signatures": [
						{
							"id": 342,
							"name": "onDisable",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Called when the plugin is disabled."
									}
								]
							},
							"sources": [
								{
									"fileName": "src/helper/Plugin.ts",
									"line": 24,
									"character": 11,
									"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/helper/Plugin.ts#L24"
								}
							],
							"parameters": [
								{
									"id": 343,
									"name": "client",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The client instance that manages the bot."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 1,
										"name": "Client",
										"package": "solace.js"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 338,
					"name": "onEnable",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/helper/Plugin.ts",
							"line": 18,
							"character": 11,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/helper/Plugin.ts#L18"
						}
					],
					"signatures": [
						{
							"id": 339,
							"name": "onEnable",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Called when the plugin is enabled."
									}
								]
							},
							"sources": [
								{
									"fileName": "src/helper/Plugin.ts",
									"line": 18,
									"character": 11,
									"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/helper/Plugin.ts#L18"
								}
							],
							"parameters": [
								{
									"id": 340,
									"name": "client",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The client instance that manages the bot."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 1,
										"name": "Client",
										"package": "solace.js"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 344,
					"name": "resolveDependencies",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/helper/Plugin.ts",
							"line": 31,
							"character": 11,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/helper/Plugin.ts#L31"
						}
					],
					"signatures": [
						{
							"id": 345,
							"name": "resolveDependencies",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Resolves dependencies required by the plugin."
									}
								],
								"blockTags": [
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "An array of unresolved dependencies (plugins that need to be loaded first)."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "src/helper/Plugin.ts",
									"line": 31,
									"character": 11,
									"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/helper/Plugin.ts#L31"
								}
							],
							"parameters": [
								{
									"id": 346,
									"name": "dependencies",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "An array of plugin names that this plugin depends on."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "string"
										}
									}
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "intrinsic",
									"name": "string"
								}
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						334
					]
				},
				{
					"title": "Properties",
					"children": [
						337
					]
				},
				{
					"title": "Methods",
					"children": [
						347,
						341,
						338,
						344
					]
				}
			],
			"sources": [
				{
					"fileName": "src/helper/Plugin.ts",
					"line": 6,
					"character": 13,
					"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/helper/Plugin.ts#L6"
				}
			]
		},
		{
			"id": 984,
			"name": "Reaction",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Represents a reaction."
					}
				]
			},
			"children": [
				{
					"id": 985,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"sources": [
						{
							"fileName": "src/structures/Reaction.ts",
							"line": 53,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/Reaction.ts#L53"
						}
					],
					"signatures": [
						{
							"id": 986,
							"name": "new Reaction",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Creates a new Reaction instance."
									}
								]
							},
							"sources": [
								{
									"fileName": "src/structures/Reaction.ts",
									"line": 53,
									"character": 4,
									"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/Reaction.ts#L53"
								}
							],
							"parameters": [
								{
									"id": 987,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The data object containing reaction information."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 625,
										"name": "ApiReaction",
										"package": "solace.js"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 984,
								"name": "Reaction",
								"package": "solace.js"
							}
						}
					]
				},
				{
					"id": 993,
					"name": "burstColors",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPublic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of burst colors for the reaction."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/structures/Reaction.ts",
							"line": 47,
							"character": 11,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/Reaction.ts#L47"
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "number"
						}
					}
				},
				{
					"id": 988,
					"name": "count",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPublic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The total count of reactions."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/structures/Reaction.ts",
							"line": 17,
							"character": 11,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/Reaction.ts#L17"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 989,
					"name": "countDetails",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPublic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Details of the reaction count, including burst and normal counts."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/structures/Reaction.ts",
							"line": 23,
							"character": 11,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/Reaction.ts#L23"
						}
					],
					"type": {
						"type": "reference",
						"target": 994,
						"name": "ReactionCountDetails",
						"package": "solace.js"
					}
				},
				{
					"id": 992,
					"name": "emoji",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPublic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The emoji associated with the reaction."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/structures/Reaction.ts",
							"line": 41,
							"character": 11,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/Reaction.ts#L41"
						}
					],
					"type": {
						"type": "reference",
						"target": 865,
						"name": "Emoji",
						"package": "solace.js"
					}
				},
				{
					"id": 990,
					"name": "me",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPublic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Indicates whether the current user has reacted with this emoji."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/structures/Reaction.ts",
							"line": 29,
							"character": 11,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/Reaction.ts#L29"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 991,
					"name": "meBurst",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPublic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Indicates whether the current user has burst-reacted with this emoji."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/structures/Reaction.ts",
							"line": 35,
							"character": 11,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/Reaction.ts#L35"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						985
					]
				},
				{
					"title": "Properties",
					"children": [
						993,
						988,
						989,
						992,
						990,
						991
					]
				}
			],
			"sources": [
				{
					"fileName": "src/structures/Reaction.ts",
					"line": 11,
					"character": 13,
					"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/Reaction.ts#L11"
				}
			]
		},
		{
			"id": 994,
			"name": "ReactionCountDetails",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Represents details of the reaction count, including burst and normal counts."
					}
				]
			},
			"children": [
				{
					"id": 995,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"sources": [
						{
							"fileName": "src/structures/Reaction.ts",
							"line": 84,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/Reaction.ts#L84"
						}
					],
					"signatures": [
						{
							"id": 996,
							"name": "new ReactionCountDetails",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Creates a new ReactionCountDetails instance."
									}
								]
							},
							"sources": [
								{
									"fileName": "src/structures/Reaction.ts",
									"line": 84,
									"character": 4,
									"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/Reaction.ts#L84"
								}
							],
							"parameters": [
								{
									"id": 997,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The data object containing reaction count details."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 632,
										"name": "ApiReactionCountDetails",
										"package": "solace.js"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 994,
								"name": "ReactionCountDetails",
								"package": "solace.js"
							}
						}
					]
				},
				{
					"id": 998,
					"name": "burst",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPublic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The count of burst reactions."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/structures/Reaction.ts",
							"line": 72,
							"character": 11,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/Reaction.ts#L72"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 999,
					"name": "normal",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPublic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The count of normal reactions."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/structures/Reaction.ts",
							"line": 78,
							"character": 11,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/Reaction.ts#L78"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						995
					]
				},
				{
					"title": "Properties",
					"children": [
						998,
						999
					]
				}
			],
			"sources": [
				{
					"fileName": "src/structures/Reaction.ts",
					"line": 66,
					"character": 13,
					"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/Reaction.ts#L66"
				}
			]
		},
		{
			"id": 349,
			"name": "Registry",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A utility class that can be used to register commands, events, and more."
					}
				]
			},
			"children": [
				{
					"id": 354,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 355,
							"name": "new Registry",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 349,
								"name": "Registry",
								"package": "solace.js"
							}
						}
					]
				},
				{
					"id": 350,
					"name": "registerEvents",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPublic": true,
						"isStatic": true
					},
					"sources": [
						{
							"fileName": "src/helper/Registry.ts",
							"line": 14,
							"character": 18,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/helper/Registry.ts#L14"
						}
					],
					"signatures": [
						{
							"id": 351,
							"name": "registerEvents",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Registers a list of events with a Discord client."
									}
								]
							},
							"sources": [
								{
									"fileName": "src/helper/Registry.ts",
									"line": 14,
									"character": 18,
									"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/helper/Registry.ts#L14"
								}
							],
							"parameters": [
								{
									"id": 352,
									"name": "client",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The Discord client instance."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 1,
										"name": "Client",
										"package": "solace.js"
									}
								},
								{
									"id": 353,
									"name": "args",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isRest": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The list of events to register."
											}
										]
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "reference",
											"target": 322,
											"name": "Event",
											"package": "solace.js"
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						354
					]
				},
				{
					"title": "Methods",
					"children": [
						350
					]
				}
			],
			"sources": [
				{
					"fileName": "src/helper/Registry.ts",
					"line": 7,
					"character": 13,
					"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/helper/Registry.ts#L7"
				}
			]
		},
		{
			"id": 1008,
			"name": "Role",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Represents a role within a guild or server."
					}
				]
			},
			"children": [
				{
					"id": 1009,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"sources": [
						{
							"fileName": "src/structures/Role.ts",
							"line": 84,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/Role.ts#L84"
						}
					],
					"signatures": [
						{
							"id": 1010,
							"name": "new Role",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Creates a new Role instance."
									}
								]
							},
							"sources": [
								{
									"fileName": "src/structures/Role.ts",
									"line": 84,
									"character": 4,
									"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/Role.ts#L84"
								}
							],
							"parameters": [
								{
									"id": 1011,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The data object containing role information."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 640,
										"name": "ApiRole",
										"package": "solace.js"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 1008,
								"name": "Role",
								"package": "solace.js"
							}
						}
					]
				},
				{
					"id": 1012,
					"name": "color",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPublic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The color of the role."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/structures/Role.ts",
							"line": 12,
							"character": 11,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/Role.ts#L12"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 1013,
					"name": "flags",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPublic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The flags associated with the role."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/structures/Role.ts",
							"line": 18,
							"character": 11,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/Role.ts#L18"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 1014,
					"name": "hoist",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPublic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Indicates whether the role is hoisted."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/structures/Role.ts",
							"line": 24,
							"character": 11,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/Role.ts#L24"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 1015,
					"name": "icon",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPublic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The icon URL of the role, or null if not provided."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/structures/Role.ts",
							"line": 30,
							"character": 11,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/Role.ts#L30"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 1016,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPublic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The unique ID of the role."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/structures/Role.ts",
							"line": 36,
							"character": 11,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/Role.ts#L36"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1017,
					"name": "managed",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPublic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Indicates whether the role is managed by an integration or bot."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/structures/Role.ts",
							"line": 42,
							"character": 11,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/Role.ts#L42"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 1018,
					"name": "mentionable",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPublic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Indicates whether the role is mentionable."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/structures/Role.ts",
							"line": 48,
							"character": 11,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/Role.ts#L48"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 1019,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPublic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The name of the role."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/structures/Role.ts",
							"line": 54,
							"character": 11,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/Role.ts#L54"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1020,
					"name": "permissions",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPublic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The permissions of the role."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/structures/Role.ts",
							"line": 60,
							"character": 11,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/Role.ts#L60"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1021,
					"name": "position",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPublic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The position of the role in the hierarchy."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/structures/Role.ts",
							"line": 66,
							"character": 11,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/Role.ts#L66"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 1022,
					"name": "tags",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPublic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Tags associated with the role, or undefined if not provided."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/structures/Role.ts",
							"line": 72,
							"character": 11,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/Role.ts#L72"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "undefined"
							},
							{
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 1024,
									"name": "RoleTag",
									"package": "solace.js"
								}
							}
						]
					}
				},
				{
					"id": 1023,
					"name": "unicodeEmoji",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPublic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The Unicode emoji associated with the role, or null if not provided."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/structures/Role.ts",
							"line": 78,
							"character": 11,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/Role.ts#L78"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						1009
					]
				},
				{
					"title": "Properties",
					"children": [
						1012,
						1013,
						1014,
						1015,
						1016,
						1017,
						1018,
						1019,
						1020,
						1021,
						1022,
						1023
					]
				}
			],
			"sources": [
				{
					"fileName": "src/structures/Role.ts",
					"line": 6,
					"character": 13,
					"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/Role.ts#L6"
				}
			]
		},
		{
			"id": 1000,
			"name": "RoleSubscriptionData",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Represents data related to role subscription."
					}
				]
			},
			"children": [
				{
					"id": 1001,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"sources": [
						{
							"fileName": "src/structures/Reaction.ts",
							"line": 123,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/Reaction.ts#L123"
						}
					],
					"signatures": [
						{
							"id": 1002,
							"name": "new RoleSubscriptionData",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Creates a new RoleSubscriptionData instance."
									}
								]
							},
							"sources": [
								{
									"fileName": "src/structures/Reaction.ts",
									"line": 123,
									"character": 4,
									"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/Reaction.ts#L123"
								}
							],
							"parameters": [
								{
									"id": 1003,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The data object containing role subscription information."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 660,
										"name": "ApiRoleSubscriptionData",
										"package": "solace.js"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 1000,
								"name": "RoleSubscriptionData",
								"package": "solace.js"
							}
						}
					]
				},
				{
					"id": 1004,
					"name": "isRenewal",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPublic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Indicates whether the subscription is a renewal."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/structures/Reaction.ts",
							"line": 99,
							"character": 11,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/Reaction.ts#L99"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 1005,
					"name": "roleSubscriptionListingId",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPublic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the role subscription listing."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/structures/Reaction.ts",
							"line": 105,
							"character": 11,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/Reaction.ts#L105"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1006,
					"name": "tierName",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPublic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The name of the subscription tier."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/structures/Reaction.ts",
							"line": 111,
							"character": 11,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/Reaction.ts#L111"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1007,
					"name": "totalMonthsSubscribed",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPublic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The total months subscribed."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/structures/Reaction.ts",
							"line": 117,
							"character": 11,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/Reaction.ts#L117"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						1001
					]
				},
				{
					"title": "Properties",
					"children": [
						1004,
						1005,
						1006,
						1007
					]
				}
			],
			"sources": [
				{
					"fileName": "src/structures/Reaction.ts",
					"line": 93,
					"character": 13,
					"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/Reaction.ts#L93"
				}
			]
		},
		{
			"id": 1024,
			"name": "RoleTag",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Represents additional tags associated with a role."
					}
				]
			},
			"children": [
				{
					"id": 1025,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"sources": [
						{
							"fileName": "src/structures/Role.ts",
							"line": 145,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/Role.ts#L145"
						}
					],
					"signatures": [
						{
							"id": 1026,
							"name": "new RoleTag",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Creates a new RoleTag instance."
									}
								]
							},
							"sources": [
								{
									"fileName": "src/structures/Role.ts",
									"line": 145,
									"character": 4,
									"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/Role.ts#L145"
								}
							],
							"parameters": [
								{
									"id": 1027,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The data object containing role tag information."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 653,
										"name": "ApiRoleTag",
										"package": "solace.js"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 1024,
								"name": "RoleTag",
								"package": "solace.js"
							}
						}
					]
				},
				{
					"id": 1028,
					"name": "availableForPurchase",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPublic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Indicates whether the role is available for purchase."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/structures/Role.ts",
							"line": 109,
							"character": 11,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/Role.ts#L109"
						}
					],
					"type": {
						"type": "literal",
						"value": null
					}
				},
				{
					"id": 1029,
					"name": "botId",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPublic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the bot associated with the role, or null if not provided."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/structures/Role.ts",
							"line": 115,
							"character": 11,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/Role.ts#L115"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 1030,
					"name": "guildConnections",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPublic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The guild connections for the role, or null if not provided."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/structures/Role.ts",
							"line": 121,
							"character": 11,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/Role.ts#L121"
						}
					],
					"type": {
						"type": "literal",
						"value": null
					}
				},
				{
					"id": 1031,
					"name": "integrationId",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPublic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The integration ID associated with the role, or null if not provided."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/structures/Role.ts",
							"line": 127,
							"character": 11,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/Role.ts#L127"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 1032,
					"name": "premiumSubscriber",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPublic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Indicates whether the role is for a premium subscriber, or null if not provided."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/structures/Role.ts",
							"line": 133,
							"character": 11,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/Role.ts#L133"
						}
					],
					"type": {
						"type": "literal",
						"value": null
					}
				},
				{
					"id": 1033,
					"name": "subscriptionListingId",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPublic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The subscription listing ID associated with the role, or null if not provided."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/structures/Role.ts",
							"line": 139,
							"character": 11,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/Role.ts#L139"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						1025
					]
				},
				{
					"title": "Properties",
					"children": [
						1028,
						1029,
						1030,
						1031,
						1032,
						1033
					]
				}
			],
			"sources": [
				{
					"fileName": "src/structures/Role.ts",
					"line": 103,
					"character": 13,
					"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/Role.ts#L103"
				}
			]
		},
		{
			"id": 1144,
			"name": "SolaceError",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Custom error class for handling WebsocketClient errors with specific error codes."
					}
				]
			},
			"children": [
				{
					"id": 1155,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"sources": [
						{
							"fileName": "src/util/SolaceError.ts",
							"line": 9,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/util/SolaceError.ts#L9"
						}
					],
					"signatures": [
						{
							"id": 1156,
							"name": "new SolaceError",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Creates a new SolaceError instance with a specific error code."
									}
								]
							},
							"sources": [
								{
									"fileName": "src/util/SolaceError.ts",
									"line": 9,
									"character": 4,
									"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/util/SolaceError.ts#L9"
								}
							],
							"parameters": [
								{
									"id": 1157,
									"name": "code",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The error code."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 1144,
								"name": "SolaceError",
								"package": "solace.js"
							},
							"overwrites": {
								"type": "reference",
								"target": -1,
								"name": "Error.constructor"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"target": -1,
						"name": "Error.constructor"
					}
				},
				{
					"id": 1159,
					"name": "message",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/typescript@5.2.2/node_modules/typescript/lib/lib.es5.d.ts",
							"line": 1068,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Error.message"
					}
				},
				{
					"id": 1158,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/typescript@5.2.2/node_modules/typescript/lib/lib.es5.d.ts",
							"line": 1067,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Error.name"
					}
				},
				{
					"id": 1160,
					"name": "stack",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/typescript@5.2.2/node_modules/typescript/lib/lib.es5.d.ts",
							"line": 1069,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Error.stack"
					}
				},
				{
					"id": 1149,
					"name": "prepareStackTrace",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isStatic": true,
						"isExternal": true,
						"isOptional": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/globals.d.ts",
							"line": 11,
							"character": 4
						}
					],
					"type": {
						"type": "reflection",
						"declaration": {
							"id": 1150,
							"name": "__type",
							"variant": "declaration",
							"kind": 65536,
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/globals.d.ts",
									"line": 11,
									"character": 25
								}
							],
							"signatures": [
								{
									"id": 1151,
									"name": "__type",
									"variant": "signature",
									"kind": 4096,
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "Optional override for formatting stack traces"
											}
										],
										"blockTags": [
											{
												"tag": "@see",
												"content": [
													{
														"kind": "text",
														"text": "https://v8.dev/docs/stack-trace-api#customizing-stack-traces"
													}
												]
											}
										]
									},
									"sources": [
										{
											"fileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/globals.d.ts",
											"line": 11,
											"character": 25
										}
									],
									"parameters": [
										{
											"id": 1152,
											"name": "err",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "reference",
												"target": {
													"sourceFileName": "node_modules/.pnpm/typescript@5.2.2/node_modules/typescript/lib/lib.es5.d.ts",
													"qualifiedName": "Error"
												},
												"name": "Error",
												"package": "typescript"
											}
										},
										{
											"id": 1153,
											"name": "stackTraces",
											"variant": "param",
											"kind": 32768,
											"flags": {
												"isExternal": true
											},
											"type": {
												"type": "array",
												"elementType": {
													"type": "reference",
													"target": {
														"sourceFileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/globals.d.ts",
														"qualifiedName": "NodeJS.CallSite"
													},
													"name": "CallSite",
													"package": "@types/node",
													"qualifiedName": "NodeJS.CallSite"
												}
											}
										}
									],
									"type": {
										"type": "intrinsic",
										"name": "any"
									}
								}
							]
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Error.prepareStackTrace"
					}
				},
				{
					"id": 1154,
					"name": "stackTraceLimit",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isStatic": true,
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/globals.d.ts",
							"line": 13,
							"character": 4
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Error.stackTraceLimit"
					}
				},
				{
					"id": 1145,
					"name": "captureStackTrace",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isStatic": true,
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/globals.d.ts",
							"line": 4,
							"character": 4
						}
					],
					"signatures": [
						{
							"id": 1146,
							"name": "captureStackTrace",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Create .stack property on a target object"
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/globals.d.ts",
									"line": 4,
									"character": 4
								}
							],
							"parameters": [
								{
									"id": 1147,
									"name": "targetObject",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "object"
									}
								},
								{
									"id": 1148,
									"name": "constructorOpt",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.2.2/node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Function"
										},
										"name": "Function",
										"package": "typescript"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "Error.captureStackTrace"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "Error.captureStackTrace"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						1155
					]
				},
				{
					"title": "Properties",
					"children": [
						1159,
						1158,
						1160,
						1149,
						1154
					]
				},
				{
					"title": "Methods",
					"children": [
						1145
					]
				}
			],
			"sources": [
				{
					"fileName": "src/util/SolaceError.ts",
					"line": 4,
					"character": 13,
					"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/util/SolaceError.ts#L4"
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": {
						"sourceFileName": "node_modules/.pnpm/typescript@5.2.2/node_modules/typescript/lib/lib.es5.d.ts",
						"qualifiedName": "Error"
					},
					"name": "Error",
					"package": "typescript"
				}
			]
		},
		{
			"id": 307,
			"name": "SolaceIntents",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A utility class for defining intent combinations for different types of Discord bots."
					}
				]
			},
			"children": [
				{
					"id": 320,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"signatures": [
						{
							"id": 321,
							"name": "new SolaceIntents",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"type": {
								"type": "reference",
								"target": 307,
								"name": "SolaceIntents",
								"package": "solace.js"
							}
						}
					]
				},
				{
					"id": 319,
					"name": "AUTO_MODERATION",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPublic": true,
						"isStatic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Intents that help with auto-moderation Discord bots."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/config/SolaceIntents.ts",
							"line": 112,
							"character": 18,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/config/SolaceIntents.ts#L112"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "..."
				},
				{
					"id": 317,
					"name": "DIRECT_MESSAGE_MONITOR",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPublic": true,
						"isStatic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Intents that help with direct message monitor Discord bots."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/config/SolaceIntents.ts",
							"line": 95,
							"character": 18,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/config/SolaceIntents.ts#L95"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "..."
				},
				{
					"id": 312,
					"name": "EMOJI_MANAGER",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPublic": true,
						"isStatic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Intents that help with emoji and sticker management Discord bots."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/config/SolaceIntents.ts",
							"line": 55,
							"character": 18,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/config/SolaceIntents.ts#L55"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "..."
				},
				{
					"id": 308,
					"name": "GENERAL",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPublic": true,
						"isStatic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Intents that help with general-purpose Discord bots."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/config/SolaceIntents.ts",
							"line": 11,
							"character": 18,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/config/SolaceIntents.ts#L11"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "..."
				},
				{
					"id": 313,
					"name": "INTEGRATION_MANAGER",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPublic": true,
						"isStatic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Intents that help with guild integration management Discord bots."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/config/SolaceIntents.ts",
							"line": 63,
							"character": 18,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/config/SolaceIntents.ts#L63"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "..."
				},
				{
					"id": 311,
					"name": "INVITE_TRACKER",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPublic": true,
						"isStatic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Intents that help with invite tracker Discord bots."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/config/SolaceIntents.ts",
							"line": 47,
							"character": 18,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/config/SolaceIntents.ts#L47"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "..."
				},
				{
					"id": 318,
					"name": "MESSAGE_CONTENT_MONITOR",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPublic": true,
						"isStatic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Intents that help with message content monitor Discord bots."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/config/SolaceIntents.ts",
							"line": 104,
							"character": 18,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/config/SolaceIntents.ts#L104"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "..."
				},
				{
					"id": 309,
					"name": "MODERATION",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPublic": true,
						"isStatic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Intents that help with moderation Discord bots."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/config/SolaceIntents.ts",
							"line": 22,
							"character": 18,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/config/SolaceIntents.ts#L22"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "..."
				},
				{
					"id": 310,
					"name": "MUSIC",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPublic": true,
						"isStatic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Intents that help with music Discord bots."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/config/SolaceIntents.ts",
							"line": 35,
							"character": 18,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/config/SolaceIntents.ts#L35"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "..."
				},
				{
					"id": 316,
					"name": "PRESENCE_MONITOR",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPublic": true,
						"isStatic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Intents that help with guild presence monitor Discord bots."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/config/SolaceIntents.ts",
							"line": 87,
							"character": 18,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/config/SolaceIntents.ts#L87"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "..."
				},
				{
					"id": 315,
					"name": "VOICE_STATE_MONITOR",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPublic": true,
						"isStatic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Intents that help with voice state monitor Discord bots."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/config/SolaceIntents.ts",
							"line": 79,
							"character": 18,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/config/SolaceIntents.ts#L79"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "..."
				},
				{
					"id": 314,
					"name": "WEBHOOK_MANAGER",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPublic": true,
						"isStatic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Intents that help with webhook management Discord bots."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/config/SolaceIntents.ts",
							"line": 71,
							"character": 18,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/config/SolaceIntents.ts#L71"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"defaultValue": "..."
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						320
					]
				},
				{
					"title": "Properties",
					"children": [
						319,
						317,
						312,
						308,
						313,
						311,
						318,
						309,
						310,
						316,
						315,
						314
					]
				}
			],
			"sources": [
				{
					"fileName": "src/config/SolaceIntents.ts",
					"line": 6,
					"character": 13,
					"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/config/SolaceIntents.ts#L6"
				}
			]
		},
		{
			"id": 1034,
			"name": "Sticker",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Represents a sticker."
					}
				]
			},
			"children": [
				{
					"id": 1035,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"sources": [
						{
							"fileName": "src/structures/Sticker.ts",
							"line": 88,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/Sticker.ts#L88"
						}
					],
					"signatures": [
						{
							"id": 1036,
							"name": "new Sticker",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Creates a new Sticker instance."
									}
								]
							},
							"sources": [
								{
									"fileName": "src/structures/Sticker.ts",
									"line": 88,
									"character": 4,
									"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/Sticker.ts#L88"
								}
							],
							"parameters": [
								{
									"id": 1037,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The data object containing sticker information."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 665,
										"name": "ApiSticker",
										"package": "solace.js"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 1034,
								"name": "Sticker",
								"package": "solace.js"
							}
						}
					]
				},
				{
					"id": 1038,
					"name": "asset",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPublic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The asset URL of the sticker, or null if not provided."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/structures/Sticker.ts",
							"line": 16,
							"character": 11,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/Sticker.ts#L16"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 1039,
					"name": "available",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPublic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Indicates whether the sticker is available."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/structures/Sticker.ts",
							"line": 22,
							"character": 11,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/Sticker.ts#L22"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 1040,
					"name": "description",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPublic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The description of the sticker, or null if not provided."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/structures/Sticker.ts",
							"line": 28,
							"character": 11,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/Sticker.ts#L28"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 1041,
					"name": "formatType",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPublic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The format type of the sticker."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/structures/Sticker.ts",
							"line": 34,
							"character": 11,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/Sticker.ts#L34"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 1042,
					"name": "guildId",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPublic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the guild to which the sticker belongs, or null if not provided."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/structures/Sticker.ts",
							"line": 40,
							"character": 11,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/Sticker.ts#L40"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 1043,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPublic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The unique ID of the sticker."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/structures/Sticker.ts",
							"line": 46,
							"character": 11,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/Sticker.ts#L46"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1044,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPublic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The name of the sticker."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/structures/Sticker.ts",
							"line": 52,
							"character": 11,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/Sticker.ts#L52"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1045,
					"name": "packId",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPublic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the sticker pack to which the sticker belongs, or null if not provided."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/structures/Sticker.ts",
							"line": 58,
							"character": 11,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/Sticker.ts#L58"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 1046,
					"name": "sortValue",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPublic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The sort value of the sticker, or null if not provided."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/structures/Sticker.ts",
							"line": 64,
							"character": 11,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/Sticker.ts#L64"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 1047,
					"name": "tags",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPublic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The tags associated with the sticker."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/structures/Sticker.ts",
							"line": 70,
							"character": 11,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/Sticker.ts#L70"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1048,
					"name": "type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPublic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The type of the sticker."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/structures/Sticker.ts",
							"line": 76,
							"character": 11,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/Sticker.ts#L76"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 1049,
					"name": "user",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPublic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The user who created the sticker, or null if not provided."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/structures/Sticker.ts",
							"line": 82,
							"character": 11,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/Sticker.ts#L82"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": 1098,
								"name": "User",
								"package": "solace.js"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						1035
					]
				},
				{
					"title": "Properties",
					"children": [
						1038,
						1039,
						1040,
						1041,
						1042,
						1043,
						1044,
						1045,
						1046,
						1047,
						1048,
						1049
					]
				}
			],
			"sources": [
				{
					"fileName": "src/structures/Sticker.ts",
					"line": 10,
					"character": 13,
					"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/Sticker.ts#L10"
				}
			]
		},
		{
			"id": 1050,
			"name": "StickerItem",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Represents an item of a sticker pack."
					}
				]
			},
			"children": [
				{
					"id": 1051,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"sources": [
						{
							"fileName": "src/structures/Sticker.ts",
							"line": 131,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/Sticker.ts#L131"
						}
					],
					"signatures": [
						{
							"id": 1052,
							"name": "new StickerItem",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Creates a new StickerItem instance."
									}
								]
							},
							"sources": [
								{
									"fileName": "src/structures/Sticker.ts",
									"line": 131,
									"character": 4,
									"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/Sticker.ts#L131"
								}
							],
							"parameters": [
								{
									"id": 1053,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The data object containing sticker item information."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 678,
										"name": "ApiStickerItem",
										"package": "solace.js"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 1050,
								"name": "StickerItem",
								"package": "solace.js"
							}
						}
					]
				},
				{
					"id": 1054,
					"name": "formatType",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPublic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The format type of the sticker item."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/structures/Sticker.ts",
							"line": 113,
							"character": 11,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/Sticker.ts#L113"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 1055,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPublic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The unique ID of the sticker item."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/structures/Sticker.ts",
							"line": 119,
							"character": 11,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/Sticker.ts#L119"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1056,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPublic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The name of the sticker item."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/structures/Sticker.ts",
							"line": 125,
							"character": 11,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/Sticker.ts#L125"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						1051
					]
				},
				{
					"title": "Properties",
					"children": [
						1054,
						1055,
						1056
					]
				}
			],
			"sources": [
				{
					"fileName": "src/structures/Sticker.ts",
					"line": 107,
					"character": 13,
					"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/Sticker.ts#L107"
				}
			]
		},
		{
			"id": 1057,
			"name": "Team",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Represents a team."
					}
				]
			},
			"children": [
				{
					"id": 1058,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"sources": [
						{
							"fileName": "src/structures/Team.ts",
							"line": 43,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/Team.ts#L43"
						}
					],
					"signatures": [
						{
							"id": 1059,
							"name": "new Team",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Creates a new Team instance."
									}
								]
							},
							"sources": [
								{
									"fileName": "src/structures/Team.ts",
									"line": 43,
									"character": 4,
									"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/Team.ts#L43"
								}
							],
							"parameters": [
								{
									"id": 1060,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The data object containing team information."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 682,
										"name": "ApiTeam",
										"package": "solace.js"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 1057,
								"name": "Team",
								"package": "solace.js"
							}
						}
					]
				},
				{
					"id": 1061,
					"name": "icon",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPublic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The icon URL of the team, or null if not provided."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/structures/Team.ts",
							"line": 13,
							"character": 11,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/Team.ts#L13"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 1062,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPublic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The unique ID of the team."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/structures/Team.ts",
							"line": 19,
							"character": 11,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/Team.ts#L19"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1063,
					"name": "members",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPublic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of team members."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/structures/Team.ts",
							"line": 25,
							"character": 11,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/Team.ts#L25"
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 1066,
							"name": "TeamMember",
							"package": "solace.js"
						}
					}
				},
				{
					"id": 1064,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPublic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The name of the team."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/structures/Team.ts",
							"line": 31,
							"character": 11,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/Team.ts#L31"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1065,
					"name": "ownerUserId",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPublic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The unique ID of the owner user of the team."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/structures/Team.ts",
							"line": 37,
							"character": 11,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/Team.ts#L37"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						1058
					]
				},
				{
					"title": "Properties",
					"children": [
						1061,
						1062,
						1063,
						1064,
						1065
					]
				}
			],
			"sources": [
				{
					"fileName": "src/structures/Team.ts",
					"line": 7,
					"character": 13,
					"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/Team.ts#L7"
				}
			]
		},
		{
			"id": 1066,
			"name": "TeamMember",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Represents a member of a team."
					}
				]
			},
			"children": [
				{
					"id": 1067,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"sources": [
						{
							"fileName": "src/structures/TeamMember.ts",
							"line": 37,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/TeamMember.ts#L37"
						}
					],
					"signatures": [
						{
							"id": 1068,
							"name": "new TeamMember",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Creates a new TeamMember instance."
									}
								]
							},
							"sources": [
								{
									"fileName": "src/structures/TeamMember.ts",
									"line": 37,
									"character": 4,
									"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/TeamMember.ts#L37"
								}
							],
							"parameters": [
								{
									"id": 1069,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The data object containing team member information."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 688,
										"name": "ApiTeamMember",
										"package": "solace.js"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 1066,
								"name": "TeamMember",
								"package": "solace.js"
							}
						}
					]
				},
				{
					"id": 1070,
					"name": "membershipState",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPublic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The membership state of the team member."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/structures/TeamMember.ts",
							"line": 13,
							"character": 11,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/TeamMember.ts#L13"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 1071,
					"name": "role",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPublic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The role of the team member."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/structures/TeamMember.ts",
							"line": 19,
							"character": 11,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/TeamMember.ts#L19"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1072,
					"name": "teamId",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPublic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The unique ID of the team to which the member belongs."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/structures/TeamMember.ts",
							"line": 25,
							"character": 11,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/TeamMember.ts#L25"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1073,
					"name": "user",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPublic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The user who is a member of the team."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/structures/TeamMember.ts",
							"line": 31,
							"character": 11,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/TeamMember.ts#L31"
						}
					],
					"type": {
						"type": "reference",
						"target": 1098,
						"name": "User",
						"package": "solace.js"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						1067
					]
				},
				{
					"title": "Properties",
					"children": [
						1070,
						1071,
						1072,
						1073
					]
				}
			],
			"sources": [
				{
					"fileName": "src/structures/TeamMember.ts",
					"line": 7,
					"character": 13,
					"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/TeamMember.ts#L7"
				}
			]
		},
		{
			"id": 1074,
			"name": "ThreadChannel",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Represents a thread channel, which is a specialized type of channel."
					}
				]
			},
			"children": [
				{
					"id": 1075,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"sources": [
						{
							"fileName": "src/structures/ThreadChannel.ts",
							"line": 73,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/ThreadChannel.ts#L73"
						}
					],
					"signatures": [
						{
							"id": 1076,
							"name": "new ThreadChannel",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Creates a new ThreadChannel instance."
									}
								]
							},
							"sources": [
								{
									"fileName": "src/structures/ThreadChannel.ts",
									"line": 73,
									"character": 4,
									"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/ThreadChannel.ts#L73"
								}
							],
							"parameters": [
								{
									"id": 1077,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The data object containing thread channel information."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 693,
										"name": "ApiThreadChannel",
										"package": "solace.js"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 1074,
								"name": "ThreadChannel",
								"package": "solace.js"
							},
							"overwrites": {
								"type": "reference",
								"target": 792,
								"name": "Channel.constructor"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"target": 791,
						"name": "Channel.constructor"
					}
				},
				{
					"id": 1078,
					"name": "guildId",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPublic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the guild to which the thread channel belongs."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/structures/ThreadChannel.ts",
							"line": 13,
							"character": 11,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/ThreadChannel.ts#L13"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1088,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPublic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The unique ID of the channel."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/structures/Channel.ts",
							"line": 12,
							"character": 11,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/Channel.ts#L12"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 794,
						"name": "Channel.id"
					}
				},
				{
					"id": 1079,
					"name": "lastMessageId",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPublic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the last message sent in the thread, or null if not provided."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/structures/ThreadChannel.ts",
							"line": 19,
							"character": 11,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/ThreadChannel.ts#L19"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 1080,
					"name": "memberCount",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPublic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The number of members in the thread."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/structures/ThreadChannel.ts",
							"line": 25,
							"character": 11,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/ThreadChannel.ts#L25"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 1081,
					"name": "messageCount",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPublic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The number of messages sent in the thread."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/structures/ThreadChannel.ts",
							"line": 31,
							"character": 11,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/ThreadChannel.ts#L31"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 1082,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPublic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The name of the thread channel, or null if not provided."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/structures/ThreadChannel.ts",
							"line": 37,
							"character": 11,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/ThreadChannel.ts#L37"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 1083,
					"name": "ownerId",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPublic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the owner of the thread channel."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/structures/ThreadChannel.ts",
							"line": 43,
							"character": 11,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/ThreadChannel.ts#L43"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1084,
					"name": "parentId",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPublic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the parent channel to which the thread belongs, or null if not provided."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/structures/ThreadChannel.ts",
							"line": 49,
							"character": 11,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/ThreadChannel.ts#L49"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 1085,
					"name": "rateLimitPerUser",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPublic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The rate limit per user in the thread."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/structures/ThreadChannel.ts",
							"line": 55,
							"character": 11,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/ThreadChannel.ts#L55"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 1086,
					"name": "threadMetadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPublic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The metadata associated with the thread."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/structures/ThreadChannel.ts",
							"line": 61,
							"character": 11,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/ThreadChannel.ts#L61"
						}
					],
					"type": {
						"type": "reference",
						"target": 1090,
						"name": "ThreadMetaData",
						"package": "solace.js"
					}
				},
				{
					"id": 1087,
					"name": "totalMessageSent",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPublic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The total number of messages sent in the thread."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/structures/ThreadChannel.ts",
							"line": 67,
							"character": 11,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/ThreadChannel.ts#L67"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 1089,
					"name": "type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPublic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The type of the channel."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/structures/Channel.ts",
							"line": 18,
							"character": 11,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/Channel.ts#L18"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 795,
						"name": "Channel.type"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						1075
					]
				},
				{
					"title": "Properties",
					"children": [
						1078,
						1088,
						1079,
						1080,
						1081,
						1082,
						1083,
						1084,
						1085,
						1086,
						1087,
						1089
					]
				}
			],
			"sources": [
				{
					"fileName": "src/structures/ThreadChannel.ts",
					"line": 7,
					"character": 13,
					"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/ThreadChannel.ts#L7"
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 790,
					"name": "Channel",
					"package": "solace.js"
				}
			]
		},
		{
			"id": 1090,
			"name": "ThreadMetaData",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Represents metadata associated with a thread."
					}
				]
			},
			"children": [
				{
					"id": 1091,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"sources": [
						{
							"fileName": "src/structures/ThreadChannel.ts",
							"line": 121,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/ThreadChannel.ts#L121"
						}
					],
					"signatures": [
						{
							"id": 1092,
							"name": "new ThreadMetaData",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Creates a new ThreadMetaData instance."
									}
								]
							},
							"sources": [
								{
									"fileName": "src/structures/ThreadChannel.ts",
									"line": 121,
									"character": 4,
									"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/ThreadChannel.ts#L121"
								}
							],
							"parameters": [
								{
									"id": 1093,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The data object containing thread metadata."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 706,
										"name": "ApiThreadMetadata",
										"package": "solace.js"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 1090,
								"name": "ThreadMetaData",
								"package": "solace.js"
							}
						}
					]
				},
				{
					"id": 1094,
					"name": "archiveTimestamp",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPublic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The timestamp at which the thread was archived."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/structures/ThreadChannel.ts",
							"line": 97,
							"character": 11,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/ThreadChannel.ts#L97"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1095,
					"name": "archived",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPublic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Indicates whether the thread is archived."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/structures/ThreadChannel.ts",
							"line": 103,
							"character": 11,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/ThreadChannel.ts#L103"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 1096,
					"name": "autoArchiveDuration",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPublic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The duration in minutes after which the thread will be automatically archived."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/structures/ThreadChannel.ts",
							"line": 109,
							"character": 11,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/ThreadChannel.ts#L109"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 1097,
					"name": "locked",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPublic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Indicates whether the thread is locked."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/structures/ThreadChannel.ts",
							"line": 115,
							"character": 11,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/ThreadChannel.ts#L115"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						1091
					]
				},
				{
					"title": "Properties",
					"children": [
						1094,
						1095,
						1096,
						1097
					]
				}
			],
			"sources": [
				{
					"fileName": "src/structures/ThreadChannel.ts",
					"line": 91,
					"character": 13,
					"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/ThreadChannel.ts#L91"
				}
			]
		},
		{
			"id": 1098,
			"name": "User",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Represents a user."
					}
				]
			},
			"children": [
				{
					"id": 1099,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"sources": [
						{
							"fileName": "src/structures/User.ts",
							"line": 97,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/User.ts#L97"
						}
					],
					"signatures": [
						{
							"id": 1100,
							"name": "new User",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Constructs a new User instance."
									}
								]
							},
							"sources": [
								{
									"fileName": "src/structures/User.ts",
									"line": 97,
									"character": 4,
									"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/User.ts#L97"
								}
							],
							"parameters": [
								{
									"id": 1101,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The user data."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 711,
										"name": "ApiUser",
										"package": "solace.js"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 1098,
								"name": "User",
								"package": "solace.js"
							}
						}
					]
				},
				{
					"id": 1102,
					"name": "accentColor",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPublic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The user's base 10 accent color."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/structures/User.ts",
							"line": 11,
							"character": 11,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/User.ts#L11"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 1103,
					"name": "avatar",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPublic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The user's avatar hash."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/structures/User.ts",
							"line": 16,
							"character": 11,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/User.ts#L16"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 1104,
					"name": "avatarDecoration",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPublic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The user's avatar decoration hash."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/structures/User.ts",
							"line": 21,
							"character": 11,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/User.ts#L21"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 1105,
					"name": "banner",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPublic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The user's banner hash."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/structures/User.ts",
							"line": 26,
							"character": 11,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/User.ts#L26"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 1106,
					"name": "bot",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPublic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Indicates whether the user is a bot."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/structures/User.ts",
							"line": 31,
							"character": 11,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/User.ts#L31"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 1107,
					"name": "discriminator",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPublic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The user's discriminator."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/structures/User.ts",
							"line": 36,
							"character": 11,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/User.ts#L36"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1108,
					"name": "email",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPublic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The user's email address."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/structures/User.ts",
							"line": 41,
							"character": 11,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/User.ts#L41"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 1109,
					"name": "flags",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPublic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The user's flags."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/structures/User.ts",
							"line": 46,
							"character": 11,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/User.ts#L46"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 1110,
					"name": "globalName",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPublic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The user's global name."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/structures/User.ts",
							"line": 51,
							"character": 11,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/User.ts#L51"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 1111,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPublic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The user's id."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/structures/User.ts",
							"line": 56,
							"character": 11,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/User.ts#L56"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1112,
					"name": "locale",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPublic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The user's preferred locale."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/structures/User.ts",
							"line": 61,
							"character": 11,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/User.ts#L61"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 1113,
					"name": "mfaEnabled",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPublic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Indicates whether multi-factor authentication (MFA) is enabled for the user."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/structures/User.ts",
							"line": 66,
							"character": 11,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/User.ts#L66"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 1114,
					"name": "premiumType",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPublic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The user's premium type."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/structures/User.ts",
							"line": 71,
							"character": 11,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/User.ts#L71"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 1115,
					"name": "publicFlags",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPublic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The user's public flags."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/structures/User.ts",
							"line": 76,
							"character": 11,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/User.ts#L76"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 1116,
					"name": "system",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPublic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Indicates whether the user is a system user."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/structures/User.ts",
							"line": 81,
							"character": 11,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/User.ts#L81"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 1117,
					"name": "username",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPublic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The user's username."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/structures/User.ts",
							"line": 86,
							"character": 11,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/User.ts#L86"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1118,
					"name": "verified",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPublic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Indicates whether the user is verified."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/structures/User.ts",
							"line": 91,
							"character": 11,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/User.ts#L91"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						1099
					]
				},
				{
					"title": "Properties",
					"children": [
						1102,
						1103,
						1104,
						1105,
						1106,
						1107,
						1108,
						1109,
						1110,
						1111,
						1112,
						1113,
						1114,
						1115,
						1116,
						1117,
						1118
					]
				}
			],
			"sources": [
				{
					"fileName": "src/structures/User.ts",
					"line": 6,
					"character": 13,
					"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/User.ts#L6"
				}
			]
		},
		{
			"id": 129,
			"name": "WebsocketClient",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "A WebSocket client for connecting to the Discord Gateway and handling communication."
					}
				]
			},
			"children": [
				{
					"id": 170,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"sources": [
						{
							"fileName": "src/client/WebsocketClient.ts",
							"line": 33,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/client/WebsocketClient.ts#L33"
						}
					],
					"signatures": [
						{
							"id": 171,
							"name": "new WebsocketClient",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Creates a new WebsocketClient instance."
									}
								]
							},
							"sources": [
								{
									"fileName": "src/client/WebsocketClient.ts",
									"line": 33,
									"character": 4,
									"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/client/WebsocketClient.ts#L33"
								}
							],
							"parameters": [
								{
									"id": 172,
									"name": "client",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The Discord client instance."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 1,
										"name": "Client",
										"package": "solace.js"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 129,
								"name": "WebsocketClient",
								"package": "solace.js"
							},
							"overwrites": {
								"type": "reference",
								"target": -1,
								"name": "EventEmitter.constructor"
							}
						}
					],
					"overwrites": {
						"type": "reference",
						"target": -1,
						"name": "EventEmitter.constructor"
					}
				},
				{
					"id": 174,
					"name": "_ws",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Represents the WebSocket instance used for communication with the Discord Gateway"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/client/WebsocketClient.ts",
							"line": 22,
							"character": 12,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/client/WebsocketClient.ts#L22"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+ws@8.5.5/node_modules/@types/ws/index.d.ts",
									"qualifiedName": "WebSocket"
								},
								"name": "WebSocket",
								"package": "@types/ws"
							}
						]
					},
					"defaultValue": "null"
				},
				{
					"id": 176,
					"name": "client",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The Discord client instance."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/client/WebsocketClient.ts",
							"line": 33,
							"character": 24,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/client/WebsocketClient.ts#L33"
						}
					],
					"type": {
						"type": "reference",
						"target": 1,
						"name": "Client",
						"package": "solace.js"
					}
				},
				{
					"id": 173,
					"name": "gateway",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Represents the URL of the Discord Gateway to which the WebSocket client will establish a connection"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/client/WebsocketClient.ts",
							"line": 18,
							"character": 12,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/client/WebsocketClient.ts#L18"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					},
					"defaultValue": "null"
				},
				{
					"id": 175,
					"name": "heartbeatInterval",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPrivate": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "represents a Node.js timeout object that is used to periodically send heartbeat messages to the Discord Gateway to maintain the connection."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/client/WebsocketClient.ts",
							"line": 27,
							"character": 12,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/client/WebsocketClient.ts#L27"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/timers.d.ts",
									"qualifiedName": "__global.NodeJS.Timeout"
								},
								"name": "Timeout",
								"package": "@types/node",
								"qualifiedName": "__global.NodeJS.Timeout"
							}
						]
					},
					"defaultValue": "null"
				},
				{
					"id": 167,
					"name": "captureRejectionSymbol",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isStatic": true,
						"isExternal": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Value: "
							},
							{
								"kind": "code",
								"text": "`Symbol.for('nodejs.rejection')`"
							},
							{
								"kind": "text",
								"text": "\n\nSee how to write a custom "
							},
							{
								"kind": "code",
								"text": "`rejection handler`"
							},
							{
								"kind": "text",
								"text": "."
							}
						],
						"blockTags": [
							{
								"tag": "@since",
								"content": [
									{
										"kind": "text",
										"text": "v13.4.0, v12.16.0"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
							"line": 390,
							"character": 24
						}
					],
					"type": {
						"type": "query",
						"queryType": {
							"type": "reference",
							"target": 39,
							"name": "captureRejectionSymbol",
							"package": "@types/node",
							"qualifiedName": "EventEmitter.captureRejectionSymbol"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "EventEmitter.captureRejectionSymbol"
					}
				},
				{
					"id": 168,
					"name": "captureRejections",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isStatic": true,
						"isExternal": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Value: [boolean](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Data_structures#Boolean_type)\n\nChange the default "
							},
							{
								"kind": "code",
								"text": "`captureRejections`"
							},
							{
								"kind": "text",
								"text": " option on all new "
							},
							{
								"kind": "code",
								"text": "`EventEmitter`"
							},
							{
								"kind": "text",
								"text": " objects."
							}
						],
						"blockTags": [
							{
								"tag": "@since",
								"content": [
									{
										"kind": "text",
										"text": "v13.4.0, v12.16.0"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
							"line": 397,
							"character": 15
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "EventEmitter.captureRejections"
					}
				},
				{
					"id": 169,
					"name": "defaultMaxListeners",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isStatic": true,
						"isExternal": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "By default, a maximum of "
							},
							{
								"kind": "code",
								"text": "`10`"
							},
							{
								"kind": "text",
								"text": " listeners can be registered for any single\nevent. This limit can be changed for individual "
							},
							{
								"kind": "code",
								"text": "`EventEmitter`"
							},
							{
								"kind": "text",
								"text": " instances\nusing the "
							},
							{
								"kind": "code",
								"text": "`emitter.setMaxListeners(n)`"
							},
							{
								"kind": "text",
								"text": " method. To change the default\nfor _all_"
							},
							{
								"kind": "code",
								"text": "`EventEmitter`"
							},
							{
								"kind": "text",
								"text": " instances, the "
							},
							{
								"kind": "code",
								"text": "`events.defaultMaxListeners`"
							},
							{
								"kind": "text",
								"text": "property can be used. If this value is not a positive number, a "
							},
							{
								"kind": "code",
								"text": "`RangeError`"
							},
							{
								"kind": "text",
								"text": "is thrown.\n\nTake caution when setting the "
							},
							{
								"kind": "code",
								"text": "`events.defaultMaxListeners`"
							},
							{
								"kind": "text",
								"text": " because the\nchange affects _all_"
							},
							{
								"kind": "code",
								"text": "`EventEmitter`"
							},
							{
								"kind": "text",
								"text": " instances, including those created before\nthe change is made. However, calling "
							},
							{
								"kind": "code",
								"text": "`emitter.setMaxListeners(n)`"
							},
							{
								"kind": "text",
								"text": " still has\nprecedence over "
							},
							{
								"kind": "code",
								"text": "`events.defaultMaxListeners`"
							},
							{
								"kind": "text",
								"text": ".\n\nThis is not a hard limit. The "
							},
							{
								"kind": "code",
								"text": "`EventEmitter`"
							},
							{
								"kind": "text",
								"text": " instance will allow\nmore listeners to be added but will output a trace warning to stderr indicating\nthat a \"possible EventEmitter memory leak\" has been detected. For any single"
							},
							{
								"kind": "code",
								"text": "`EventEmitter`"
							},
							{
								"kind": "text",
								"text": ", the "
							},
							{
								"kind": "code",
								"text": "`emitter.getMaxListeners()`"
							},
							{
								"kind": "text",
								"text": " and "
							},
							{
								"kind": "code",
								"text": "`emitter.setMaxListeners()`"
							},
							{
								"kind": "text",
								"text": "methods can be used to\ntemporarily avoid this warning:\n\n"
							},
							{
								"kind": "code",
								"text": "```js\nimport { EventEmitter } from 'node:events';\nconst emitter = new EventEmitter();\nemitter.setMaxListeners(emitter.getMaxListeners() + 1);\nemitter.once('event', () => {\n  // do stuff\n  emitter.setMaxListeners(Math.max(emitter.getMaxListeners() - 1, 0));\n});\n```"
							},
							{
								"kind": "text",
								"text": "\n\nThe "
							},
							{
								"kind": "code",
								"text": "`--trace-warnings`"
							},
							{
								"kind": "text",
								"text": " command-line flag can be used to display the\nstack trace for such warnings.\n\nThe emitted warning can be inspected with "
							},
							{
								"kind": "code",
								"text": "`process.on('warning')`"
							},
							{
								"kind": "text",
								"text": " and will\nhave the additional "
							},
							{
								"kind": "code",
								"text": "`emitter`"
							},
							{
								"kind": "text",
								"text": ", "
							},
							{
								"kind": "code",
								"text": "`type`"
							},
							{
								"kind": "text",
								"text": ", and "
							},
							{
								"kind": "code",
								"text": "`count`"
							},
							{
								"kind": "text",
								"text": " properties, referring to\nthe event emitter instance, the event's name and the number of attached\nlisteners, respectively.\nIts "
							},
							{
								"kind": "code",
								"text": "`name`"
							},
							{
								"kind": "text",
								"text": " property is set to "
							},
							{
								"kind": "code",
								"text": "`'MaxListenersExceededWarning'`"
							},
							{
								"kind": "text",
								"text": "."
							}
						],
						"blockTags": [
							{
								"tag": "@since",
								"content": [
									{
										"kind": "text",
										"text": "v0.11.2"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
							"line": 434,
							"character": 15
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "EventEmitter.defaultMaxListeners"
					}
				},
				{
					"id": 166,
					"name": "errorMonitor",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isStatic": true,
						"isExternal": true,
						"isReadonly": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "This symbol shall be used to install a listener for only monitoring "
							},
							{
								"kind": "code",
								"text": "`'error'`"
							},
							{
								"kind": "text",
								"text": "events. Listeners installed using this symbol are called before the regular"
							},
							{
								"kind": "code",
								"text": "`'error'`"
							},
							{
								"kind": "text",
								"text": " listeners are called.\n\nInstalling a listener using this symbol does not change the behavior once an"
							},
							{
								"kind": "code",
								"text": "`'error'`"
							},
							{
								"kind": "text",
								"text": " event is emitted. Therefore, the process will still crash if no\nregular "
							},
							{
								"kind": "code",
								"text": "`'error'`"
							},
							{
								"kind": "text",
								"text": " listener is installed."
							}
						],
						"blockTags": [
							{
								"tag": "@since",
								"content": [
									{
										"kind": "text",
										"text": "v13.6.0, v12.17.0"
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
							"line": 383,
							"character": 24
						}
					],
					"type": {
						"type": "query",
						"queryType": {
							"type": "reference",
							"target": 38,
							"name": "errorMonitor",
							"package": "@types/node",
							"qualifiedName": "EventEmitter.errorMonitor"
						}
					},
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "EventEmitter.errorMonitor"
					}
				},
				{
					"id": 190,
					"name": "addListener",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
							"line": 454,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 191,
							"name": "addListener",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Alias for "
									},
									{
										"kind": "code",
										"text": "`emitter.on(eventName, listener)`"
									},
									{
										"kind": "text",
										"text": "."
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "v0.1.26"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
									"line": 454,
									"character": 16
								}
							],
							"parameters": [
								{
									"id": 192,
									"name": "eventName",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "symbol"
											}
										]
									}
								},
								{
									"id": 193,
									"name": "listener",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 194,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
													"line": 454,
													"character": 66
												}
											],
											"signatures": [
												{
													"id": 195,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
															"line": 454,
															"character": 66
														}
													],
													"parameters": [
														{
															"id": 196,
															"name": "args",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true,
																"isRest": true
															},
															"type": {
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "any"
																}
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 129,
								"name": "WebsocketClient",
								"package": "solace.js"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "EventEmitter.addListener"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "EventEmitter.addListener"
					}
				},
				{
					"id": 177,
					"name": "connect",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPublic": true
					},
					"sources": [
						{
							"fileName": "src/client/WebsocketClient.ts",
							"line": 40,
							"character": 17,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/client/WebsocketClient.ts#L40"
						}
					],
					"signatures": [
						{
							"id": 178,
							"name": "connect",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Establishes a connection to the Discord Gateway."
									}
								]
							},
							"sources": [
								{
									"fileName": "src/client/WebsocketClient.ts",
									"line": 40,
									"character": 17,
									"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/client/WebsocketClient.ts#L40"
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/typescript@5.2.2/node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "void"
									}
								],
								"name": "Promise",
								"package": "typescript"
							}
						}
					]
				},
				{
					"id": 239,
					"name": "emit",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
							"line": 716,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 240,
							"name": "emit",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Synchronously calls each of the listeners registered for the event named"
									},
									{
										"kind": "code",
										"text": "`eventName`"
									},
									{
										"kind": "text",
										"text": ", in the order they were registered, passing the supplied arguments\nto each.\n\nReturns "
									},
									{
										"kind": "code",
										"text": "`true`"
									},
									{
										"kind": "text",
										"text": " if the event had listeners, "
									},
									{
										"kind": "code",
										"text": "`false`"
									},
									{
										"kind": "text",
										"text": " otherwise.\n\n"
									},
									{
										"kind": "code",
										"text": "```js\nimport { EventEmitter } from 'node:events';\nconst myEmitter = new EventEmitter();\n\n// First listener\nmyEmitter.on('event', function firstListener() {\n  console.log('Helloooo! first listener');\n});\n// Second listener\nmyEmitter.on('event', function secondListener(arg1, arg2) {\n  console.log(`event with parameters ${arg1}, ${arg2} in second listener`);\n});\n// Third listener\nmyEmitter.on('event', function thirdListener(...args) {\n  const parameters = args.join(', ');\n  console.log(`event with parameters ${parameters} in third listener`);\n});\n\nconsole.log(myEmitter.listeners('event'));\n\nmyEmitter.emit('event', 1, 2, 3, 4, 5);\n\n// Prints:\n// [\n//   [Function: firstListener],\n//   [Function: secondListener],\n//   [Function: thirdListener]\n// ]\n// Helloooo! first listener\n// event with parameters 1, 2 in second listener\n// event with parameters 1, 2, 3, 4, 5 in third listener\n```"
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "v0.1.26"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
									"line": 716,
									"character": 16
								}
							],
							"parameters": [
								{
									"id": 241,
									"name": "eventName",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "symbol"
											}
										]
									}
								},
								{
									"id": 242,
									"name": "args",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true,
										"isRest": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "any"
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "boolean"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "EventEmitter.emit"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "EventEmitter.emit"
					}
				},
				{
					"id": 261,
					"name": "eventNames",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
							"line": 779,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 262,
							"name": "eventNames",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns an array listing the events for which the emitter has registered\nlisteners. The values in the array are strings or "
									},
									{
										"kind": "code",
										"text": "`Symbol`"
									},
									{
										"kind": "text",
										"text": "s.\n\n"
									},
									{
										"kind": "code",
										"text": "```js\nimport { EventEmitter } from 'node:events';\n\nconst myEE = new EventEmitter();\nmyEE.on('foo', () => {});\nmyEE.on('bar', () => {});\n\nconst sym = Symbol('symbol');\nmyEE.on(sym, () => {});\n\nconsole.log(myEE.eventNames());\n// Prints: [ 'foo', 'bar', Symbol(symbol) ]\n```"
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "v6.0.0"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
									"line": 779,
									"character": 16
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "union",
									"types": [
										{
											"type": "intrinsic",
											"name": "string"
										},
										{
											"type": "intrinsic",
											"name": "symbol"
										}
									]
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "EventEmitter.eventNames"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "EventEmitter.eventNames"
					}
				},
				{
					"id": 231,
					"name": "getMaxListeners",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
							"line": 631,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 232,
							"name": "getMaxListeners",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns the current max listener value for the "
									},
									{
										"kind": "code",
										"text": "`EventEmitter`"
									},
									{
										"kind": "text",
										"text": " which is either\nset by "
									},
									{
										"kind": "code",
										"text": "`emitter.setMaxListeners(n)`"
									},
									{
										"kind": "text",
										"text": " or defaults to "
									},
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "defaultMaxListeners",
										"target": 169
									},
									{
										"kind": "text",
										"text": "."
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "v1.0.0"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
									"line": 631,
									"character": 16
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "EventEmitter.getMaxListeners"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "EventEmitter.getMaxListeners"
					}
				},
				{
					"id": 181,
					"name": "identify",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "src/client/WebsocketClient.ts",
							"line": 100,
							"character": 12,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/client/WebsocketClient.ts#L100"
						}
					],
					"signatures": [
						{
							"id": 182,
							"name": "identify",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Sends the IDENTIFY payload to the Discord Gateway upon establishing a connection."
									}
								]
							},
							"sources": [
								{
									"fileName": "src/client/WebsocketClient.ts",
									"line": 100,
									"character": 12,
									"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/client/WebsocketClient.ts#L100"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 243,
					"name": "listenerCount",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
							"line": 725,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 244,
							"name": "listenerCount",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns the number of listeners listening for the event named "
									},
									{
										"kind": "code",
										"text": "`eventName`"
									},
									{
										"kind": "text",
										"text": ".\nIf "
									},
									{
										"kind": "code",
										"text": "`listener`"
									},
									{
										"kind": "text",
										"text": " is provided, it will return how many times the listener is found\nin the list of the listeners of the event."
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "v3.2.0"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
									"line": 725,
									"character": 16
								}
							],
							"parameters": [
								{
									"id": 245,
									"name": "eventName",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The name of the event being listened for"
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "symbol"
											}
										]
									}
								},
								{
									"id": 246,
									"name": "listener",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The event handler function"
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.2.2/node_modules/typescript/lib/lib.es5.d.ts",
											"qualifiedName": "Function"
										},
										"name": "Function",
										"package": "typescript"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "EventEmitter.listenerCount"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "EventEmitter.listenerCount"
					}
				},
				{
					"id": 233,
					"name": "listeners",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
							"line": 644,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 234,
							"name": "listeners",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns a copy of the array of listeners for the event named "
									},
									{
										"kind": "code",
										"text": "`eventName`"
									},
									{
										"kind": "text",
										"text": ".\n\n"
									},
									{
										"kind": "code",
										"text": "```js\nserver.on('connection', (stream) => {\n  console.log('someone connected!');\n});\nconsole.log(util.inspect(server.listeners('connection')));\n// Prints: [ [Function] ]\n```"
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "v0.1.26"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
									"line": 644,
									"character": 16
								}
							],
							"parameters": [
								{
									"id": 235,
									"name": "eventName",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "symbol"
											}
										]
									}
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": {
										"sourceFileName": "node_modules/.pnpm/typescript@5.2.2/node_modules/typescript/lib/lib.es5.d.ts",
										"qualifiedName": "Function"
									},
									"name": "Function",
									"package": "typescript"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "EventEmitter.listeners"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "EventEmitter.listeners"
					}
				},
				{
					"id": 218,
					"name": "off",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
							"line": 604,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 219,
							"name": "off",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Alias for "
									},
									{
										"kind": "code",
										"text": "`emitter.removeListener()`"
									},
									{
										"kind": "text",
										"text": "."
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "v10.0.0"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
									"line": 604,
									"character": 16
								}
							],
							"parameters": [
								{
									"id": 220,
									"name": "eventName",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "symbol"
											}
										]
									}
								},
								{
									"id": 221,
									"name": "listener",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 222,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
													"line": 604,
													"character": 58
												}
											],
											"signatures": [
												{
													"id": 223,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
															"line": 604,
															"character": 58
														}
													],
													"parameters": [
														{
															"id": 224,
															"name": "args",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true,
																"isRest": true
															},
															"type": {
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "any"
																}
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 129,
								"name": "WebsocketClient",
								"package": "solace.js"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "EventEmitter.off"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "EventEmitter.off"
					}
				},
				{
					"id": 197,
					"name": "on",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
							"line": 486,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 198,
							"name": "on",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Adds the "
									},
									{
										"kind": "code",
										"text": "`listener`"
									},
									{
										"kind": "text",
										"text": " function to the end of the listeners array for the\nevent named "
									},
									{
										"kind": "code",
										"text": "`eventName`"
									},
									{
										"kind": "text",
										"text": ". No checks are made to see if the "
									},
									{
										"kind": "code",
										"text": "`listener`"
									},
									{
										"kind": "text",
										"text": " has\nalready been added. Multiple calls passing the same combination of "
									},
									{
										"kind": "code",
										"text": "`eventName`"
									},
									{
										"kind": "text",
										"text": "and "
									},
									{
										"kind": "code",
										"text": "`listener`"
									},
									{
										"kind": "text",
										"text": " will result in the "
									},
									{
										"kind": "code",
										"text": "`listener`"
									},
									{
										"kind": "text",
										"text": " being added, and called, multiple\ntimes.\n\n"
									},
									{
										"kind": "code",
										"text": "```js\nserver.on('connection', (stream) => {\n  console.log('someone connected!');\n});\n```"
									},
									{
										"kind": "text",
										"text": "\n\nReturns a reference to the "
									},
									{
										"kind": "code",
										"text": "`EventEmitter`"
									},
									{
										"kind": "text",
										"text": ", so that calls can be chained.\n\nBy default, event listeners are invoked in the order they are added. The"
									},
									{
										"kind": "code",
										"text": "`emitter.prependListener()`"
									},
									{
										"kind": "text",
										"text": " method can be used as an alternative to add the\nevent listener to the beginning of the listeners array.\n\n"
									},
									{
										"kind": "code",
										"text": "```js\nimport { EventEmitter } from 'node:events';\nconst myEE = new EventEmitter();\nmyEE.on('foo', () => console.log('a'));\nmyEE.prependListener('foo', () => console.log('b'));\nmyEE.emit('foo');\n// Prints:\n//   b\n//   a\n```"
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "v0.1.101"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
									"line": 486,
									"character": 16
								}
							],
							"parameters": [
								{
									"id": 199,
									"name": "eventName",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The name of the event."
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "symbol"
											}
										]
									}
								},
								{
									"id": 200,
									"name": "listener",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The callback function"
											}
										]
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 201,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
													"line": 486,
													"character": 57
												}
											],
											"signatures": [
												{
													"id": 202,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
															"line": 486,
															"character": 57
														}
													],
													"parameters": [
														{
															"id": 203,
															"name": "args",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true,
																"isRest": true
															},
															"type": {
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "any"
																}
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 129,
								"name": "WebsocketClient",
								"package": "solace.js"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "EventEmitter.on"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "EventEmitter.on"
					}
				},
				{
					"id": 204,
					"name": "once",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
							"line": 516,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 205,
							"name": "once",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Adds a **one-time**"
									},
									{
										"kind": "code",
										"text": "`listener`"
									},
									{
										"kind": "text",
										"text": " function for the event named "
									},
									{
										"kind": "code",
										"text": "`eventName`"
									},
									{
										"kind": "text",
										"text": ". The\nnext time "
									},
									{
										"kind": "code",
										"text": "`eventName`"
									},
									{
										"kind": "text",
										"text": " is triggered, this listener is removed and then invoked.\n\n"
									},
									{
										"kind": "code",
										"text": "```js\nserver.once('connection', (stream) => {\n  console.log('Ah, we have our first user!');\n});\n```"
									},
									{
										"kind": "text",
										"text": "\n\nReturns a reference to the "
									},
									{
										"kind": "code",
										"text": "`EventEmitter`"
									},
									{
										"kind": "text",
										"text": ", so that calls can be chained.\n\nBy default, event listeners are invoked in the order they are added. The"
									},
									{
										"kind": "code",
										"text": "`emitter.prependOnceListener()`"
									},
									{
										"kind": "text",
										"text": " method can be used as an alternative to add the\nevent listener to the beginning of the listeners array.\n\n"
									},
									{
										"kind": "code",
										"text": "```js\nimport { EventEmitter } from 'node:events';\nconst myEE = new EventEmitter();\nmyEE.once('foo', () => console.log('a'));\nmyEE.prependOnceListener('foo', () => console.log('b'));\nmyEE.emit('foo');\n// Prints:\n//   b\n//   a\n```"
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "v0.3.0"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
									"line": 516,
									"character": 16
								}
							],
							"parameters": [
								{
									"id": 206,
									"name": "eventName",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The name of the event."
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "symbol"
											}
										]
									}
								},
								{
									"id": 207,
									"name": "listener",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The callback function"
											}
										]
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 208,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
													"line": 516,
													"character": 59
												}
											],
											"signatures": [
												{
													"id": 209,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
															"line": 516,
															"character": 59
														}
													],
													"parameters": [
														{
															"id": 210,
															"name": "args",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true,
																"isRest": true
															},
															"type": {
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "any"
																}
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 129,
								"name": "WebsocketClient",
								"package": "solace.js"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "EventEmitter.once"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "EventEmitter.once"
					}
				},
				{
					"id": 247,
					"name": "prependListener",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
							"line": 743,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 248,
							"name": "prependListener",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Adds the "
									},
									{
										"kind": "code",
										"text": "`listener`"
									},
									{
										"kind": "text",
										"text": " function to the _beginning_ of the listeners array for the\nevent named "
									},
									{
										"kind": "code",
										"text": "`eventName`"
									},
									{
										"kind": "text",
										"text": ". No checks are made to see if the "
									},
									{
										"kind": "code",
										"text": "`listener`"
									},
									{
										"kind": "text",
										"text": " has\nalready been added. Multiple calls passing the same combination of "
									},
									{
										"kind": "code",
										"text": "`eventName`"
									},
									{
										"kind": "text",
										"text": "and "
									},
									{
										"kind": "code",
										"text": "`listener`"
									},
									{
										"kind": "text",
										"text": " will result in the "
									},
									{
										"kind": "code",
										"text": "`listener`"
									},
									{
										"kind": "text",
										"text": " being added, and called, multiple\ntimes.\n\n"
									},
									{
										"kind": "code",
										"text": "```js\nserver.prependListener('connection', (stream) => {\n  console.log('someone connected!');\n});\n```"
									},
									{
										"kind": "text",
										"text": "\n\nReturns a reference to the "
									},
									{
										"kind": "code",
										"text": "`EventEmitter`"
									},
									{
										"kind": "text",
										"text": ", so that calls can be chained."
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "v6.0.0"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
									"line": 743,
									"character": 16
								}
							],
							"parameters": [
								{
									"id": 249,
									"name": "eventName",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The name of the event."
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "symbol"
											}
										]
									}
								},
								{
									"id": 250,
									"name": "listener",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The callback function"
											}
										]
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 251,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
													"line": 743,
													"character": 70
												}
											],
											"signatures": [
												{
													"id": 252,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
															"line": 743,
															"character": 70
														}
													],
													"parameters": [
														{
															"id": 253,
															"name": "args",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true,
																"isRest": true
															},
															"type": {
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "any"
																}
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 129,
								"name": "WebsocketClient",
								"package": "solace.js"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "EventEmitter.prependListener"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "EventEmitter.prependListener"
					}
				},
				{
					"id": 254,
					"name": "prependOnceListener",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
							"line": 759,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 255,
							"name": "prependOnceListener",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Adds a **one-time**"
									},
									{
										"kind": "code",
										"text": "`listener`"
									},
									{
										"kind": "text",
										"text": " function for the event named "
									},
									{
										"kind": "code",
										"text": "`eventName`"
									},
									{
										"kind": "text",
										"text": " to the _beginning_ of the listeners array. The next time "
									},
									{
										"kind": "code",
										"text": "`eventName`"
									},
									{
										"kind": "text",
										"text": " is triggered, this\nlistener is removed, and then invoked.\n\n"
									},
									{
										"kind": "code",
										"text": "```js\nserver.prependOnceListener('connection', (stream) => {\n  console.log('Ah, we have our first user!');\n});\n```"
									},
									{
										"kind": "text",
										"text": "\n\nReturns a reference to the "
									},
									{
										"kind": "code",
										"text": "`EventEmitter`"
									},
									{
										"kind": "text",
										"text": ", so that calls can be chained."
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "v6.0.0"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
									"line": 759,
									"character": 16
								}
							],
							"parameters": [
								{
									"id": 256,
									"name": "eventName",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The name of the event."
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "symbol"
											}
										]
									}
								},
								{
									"id": 257,
									"name": "listener",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The callback function"
											}
										]
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 258,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
													"line": 759,
													"character": 74
												}
											],
											"signatures": [
												{
													"id": 259,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
															"line": 759,
															"character": 74
														}
													],
													"parameters": [
														{
															"id": 260,
															"name": "args",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true,
																"isRest": true
															},
															"type": {
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "any"
																}
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 129,
								"name": "WebsocketClient",
								"package": "solace.js"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "EventEmitter.prependOnceListener"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "EventEmitter.prependOnceListener"
					}
				},
				{
					"id": 236,
					"name": "rawListeners",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
							"line": 675,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 237,
							"name": "rawListeners",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns a copy of the array of listeners for the event named "
									},
									{
										"kind": "code",
										"text": "`eventName`"
									},
									{
										"kind": "text",
										"text": ",\nincluding any wrappers (such as those created by "
									},
									{
										"kind": "code",
										"text": "`.once()`"
									},
									{
										"kind": "text",
										"text": ").\n\n"
									},
									{
										"kind": "code",
										"text": "```js\nimport { EventEmitter } from 'node:events';\nconst emitter = new EventEmitter();\nemitter.once('log', () => console.log('log once'));\n\n// Returns a new Array with a function `onceWrapper` which has a property\n// `listener` which contains the original listener bound above\nconst listeners = emitter.rawListeners('log');\nconst logFnWrapper = listeners[0];\n\n// Logs \"log once\" to the console and does not unbind the `once` event\nlogFnWrapper.listener();\n\n// Logs \"log once\" to the console and removes the listener\nlogFnWrapper();\n\nemitter.on('log', () => console.log('log persistently'));\n// Will return a new Array with a single function bound by `.on()` above\nconst newListeners = emitter.rawListeners('log');\n\n// Logs \"log persistently\" twice\nnewListeners[0]();\nemitter.emit('log');\n```"
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "v9.4.0"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
									"line": 675,
									"character": 16
								}
							],
							"parameters": [
								{
									"id": 238,
									"name": "eventName",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "symbol"
											}
										]
									}
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": {
										"sourceFileName": "node_modules/.pnpm/typescript@5.2.2/node_modules/typescript/lib/lib.es5.d.ts",
										"qualifiedName": "Function"
									},
									"name": "Function",
									"package": "typescript"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "EventEmitter.rawListeners"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "EventEmitter.rawListeners"
					}
				},
				{
					"id": 179,
					"name": "reconnect",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "src/client/WebsocketClient.ts",
							"line": 88,
							"character": 12,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/client/WebsocketClient.ts#L88"
						}
					],
					"signatures": [
						{
							"id": 180,
							"name": "reconnect",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Initiates the reconnection process to the Discord Gateway.\r\nStops sending heartbeats, clears the WebSocket instance, and attempts to reconnect after a delay."
									}
								]
							},
							"sources": [
								{
									"fileName": "src/client/WebsocketClient.ts",
									"line": 88,
									"character": 12,
									"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/client/WebsocketClient.ts#L88"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 225,
					"name": "removeAllListeners",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
							"line": 615,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 226,
							"name": "removeAllListeners",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Removes all listeners, or those of the specified "
									},
									{
										"kind": "code",
										"text": "`eventName`"
									},
									{
										"kind": "text",
										"text": ".\n\nIt is bad practice to remove listeners added elsewhere in the code,\nparticularly when the "
									},
									{
										"kind": "code",
										"text": "`EventEmitter`"
									},
									{
										"kind": "text",
										"text": " instance was created by some other\ncomponent or module (e.g. sockets or file streams).\n\nReturns a reference to the "
									},
									{
										"kind": "code",
										"text": "`EventEmitter`"
									},
									{
										"kind": "text",
										"text": ", so that calls can be chained."
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "v0.1.26"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
									"line": 615,
									"character": 16
								}
							],
							"parameters": [
								{
									"id": 227,
									"name": "event",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "symbol"
											}
										]
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 129,
								"name": "WebsocketClient",
								"package": "solace.js"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "EventEmitter.removeAllListeners"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "EventEmitter.removeAllListeners"
					}
				},
				{
					"id": 211,
					"name": "removeListener",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
							"line": 599,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 212,
							"name": "removeListener",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Removes the specified "
									},
									{
										"kind": "code",
										"text": "`listener`"
									},
									{
										"kind": "text",
										"text": " from the listener array for the event named"
									},
									{
										"kind": "code",
										"text": "`eventName`"
									},
									{
										"kind": "text",
										"text": ".\n\n"
									},
									{
										"kind": "code",
										"text": "```js\nconst callback = (stream) => {\n  console.log('someone connected!');\n};\nserver.on('connection', callback);\n// ...\nserver.removeListener('connection', callback);\n```"
									},
									{
										"kind": "text",
										"text": "\n\n"
									},
									{
										"kind": "code",
										"text": "`removeListener()`"
									},
									{
										"kind": "text",
										"text": " will remove, at most, one instance of a listener from the\nlistener array. If any single listener has been added multiple times to the\nlistener array for the specified "
									},
									{
										"kind": "code",
										"text": "`eventName`"
									},
									{
										"kind": "text",
										"text": ", then "
									},
									{
										"kind": "code",
										"text": "`removeListener()`"
									},
									{
										"kind": "text",
										"text": " must be\ncalled multiple times to remove each instance.\n\nOnce an event is emitted, all listeners attached to it at the\ntime of emitting are called in order. This implies that any"
									},
									{
										"kind": "code",
										"text": "`removeListener()`"
									},
									{
										"kind": "text",
										"text": " or "
									},
									{
										"kind": "code",
										"text": "`removeAllListeners()`"
									},
									{
										"kind": "text",
										"text": " calls _after_ emitting and _before_ the last listener finishes execution\nwill not remove them from"
									},
									{
										"kind": "code",
										"text": "`emit()`"
									},
									{
										"kind": "text",
										"text": " in progress. Subsequent events behave as expected.\n\n"
									},
									{
										"kind": "code",
										"text": "```js\nimport { EventEmitter } from 'node:events';\nclass MyEmitter extends EventEmitter {}\nconst myEmitter = new MyEmitter();\n\nconst callbackA = () => {\n  console.log('A');\n  myEmitter.removeListener('event', callbackB);\n};\n\nconst callbackB = () => {\n  console.log('B');\n};\n\nmyEmitter.on('event', callbackA);\n\nmyEmitter.on('event', callbackB);\n\n// callbackA removes listener callbackB but it will still be called.\n// Internal listener array at time of emit [callbackA, callbackB]\nmyEmitter.emit('event');\n// Prints:\n//   A\n//   B\n\n// callbackB is now removed.\n// Internal listener array [callbackA]\nmyEmitter.emit('event');\n// Prints:\n//   A\n```"
									},
									{
										"kind": "text",
										"text": "\n\nBecause listeners are managed using an internal array, calling this will\nchange the position indices of any listener registered _after_ the listener\nbeing removed. This will not impact the order in which listeners are called,\nbut it means that any copies of the listener array as returned by\nthe "
									},
									{
										"kind": "code",
										"text": "`emitter.listeners()`"
									},
									{
										"kind": "text",
										"text": " method will need to be recreated.\n\nWhen a single function has been added as a handler multiple times for a single\nevent (as in the example below), "
									},
									{
										"kind": "code",
										"text": "`removeListener()`"
									},
									{
										"kind": "text",
										"text": " will remove the most\nrecently added instance. In the example the "
									},
									{
										"kind": "code",
										"text": "`once('ping')`"
									},
									{
										"kind": "text",
										"text": "listener is removed:\n\n"
									},
									{
										"kind": "code",
										"text": "```js\nimport { EventEmitter } from 'node:events';\nconst ee = new EventEmitter();\n\nfunction pong() {\n  console.log('pong');\n}\n\nee.on('ping', pong);\nee.once('ping', pong);\nee.removeListener('ping', pong);\n\nee.emit('ping');\nee.emit('ping');\n```"
									},
									{
										"kind": "text",
										"text": "\n\nReturns a reference to the "
									},
									{
										"kind": "code",
										"text": "`EventEmitter`"
									},
									{
										"kind": "text",
										"text": ", so that calls can be chained."
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "v0.1.26"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
									"line": 599,
									"character": 16
								}
							],
							"parameters": [
								{
									"id": 213,
									"name": "eventName",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "symbol"
											}
										]
									}
								},
								{
									"id": 214,
									"name": "listener",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 215,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
													"line": 599,
													"character": 69
												}
											],
											"signatures": [
												{
													"id": 216,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
															"line": 599,
															"character": 69
														}
													],
													"parameters": [
														{
															"id": 217,
															"name": "args",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true,
																"isRest": true
															},
															"type": {
																"type": "array",
																"elementType": {
																	"type": "intrinsic",
																	"name": "any"
																}
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 129,
								"name": "WebsocketClient",
								"package": "solace.js"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "EventEmitter.removeListener"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "EventEmitter.removeListener"
					}
				},
				{
					"id": 188,
					"name": "sendHeartbeat",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "src/client/WebsocketClient.ts",
							"line": 140,
							"character": 12,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/client/WebsocketClient.ts#L140"
						}
					],
					"signatures": [
						{
							"id": 189,
							"name": "sendHeartbeat",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Sends a heartbeat to the Discord Gateway."
									}
								]
							},
							"sources": [
								{
									"fileName": "src/client/WebsocketClient.ts",
									"line": 140,
									"character": 12,
									"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/client/WebsocketClient.ts#L140"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 228,
					"name": "setMaxListeners",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
							"line": 625,
							"character": 16
						}
					],
					"signatures": [
						{
							"id": 229,
							"name": "setMaxListeners",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "By default "
									},
									{
										"kind": "code",
										"text": "`EventEmitter`"
									},
									{
										"kind": "text",
										"text": "s will print a warning if more than "
									},
									{
										"kind": "code",
										"text": "`10`"
									},
									{
										"kind": "text",
										"text": " listeners are\nadded for a particular event. This is a useful default that helps finding\nmemory leaks. The "
									},
									{
										"kind": "code",
										"text": "`emitter.setMaxListeners()`"
									},
									{
										"kind": "text",
										"text": " method allows the limit to be\nmodified for this specific "
									},
									{
										"kind": "code",
										"text": "`EventEmitter`"
									},
									{
										"kind": "text",
										"text": " instance. The value can be set to"
									},
									{
										"kind": "code",
										"text": "`Infinity`"
									},
									{
										"kind": "text",
										"text": " (or "
									},
									{
										"kind": "code",
										"text": "`0`"
									},
									{
										"kind": "text",
										"text": ") to indicate an unlimited number of listeners.\n\nReturns a reference to the "
									},
									{
										"kind": "code",
										"text": "`EventEmitter`"
									},
									{
										"kind": "text",
										"text": ", so that calls can be chained."
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "v0.3.5"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
									"line": 625,
									"character": 16
								}
							],
							"parameters": [
								{
									"id": 230,
									"name": "n",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 129,
								"name": "WebsocketClient",
								"package": "solace.js"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "EventEmitter.setMaxListeners"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "EventEmitter.setMaxListeners"
					}
				},
				{
					"id": 183,
					"name": "startHeartbeat",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "src/client/WebsocketClient.ts",
							"line": 124,
							"character": 12,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/client/WebsocketClient.ts#L124"
						}
					],
					"signatures": [
						{
							"id": 184,
							"name": "startHeartbeat",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Starts sending heartbeats at the specified interval."
									}
								]
							},
							"sources": [
								{
									"fileName": "src/client/WebsocketClient.ts",
									"line": 124,
									"character": 12,
									"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/client/WebsocketClient.ts#L124"
								}
							],
							"parameters": [
								{
									"id": 185,
									"name": "interval",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The heartbeat interval in milliseconds."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 186,
					"name": "stopHeartbeat",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isPrivate": true
					},
					"sources": [
						{
							"fileName": "src/client/WebsocketClient.ts",
							"line": 133,
							"character": 12,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/client/WebsocketClient.ts#L133"
						}
					],
					"signatures": [
						{
							"id": 187,
							"name": "stopHeartbeat",
							"variant": "signature",
							"kind": 4096,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Stops sending heartbeats."
									}
								]
							},
							"sources": [
								{
									"fileName": "src/client/WebsocketClient.ts",
									"line": 133,
									"character": 12,
									"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/client/WebsocketClient.ts#L133"
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							}
						}
					]
				},
				{
					"id": 159,
					"name": "addAbortListener",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isStatic": true,
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
							"line": 375,
							"character": 15
						}
					],
					"signatures": [
						{
							"id": 160,
							"name": "addAbortListener",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Listens once to the "
									},
									{
										"kind": "code",
										"text": "`abort`"
									},
									{
										"kind": "text",
										"text": " event on the provided "
									},
									{
										"kind": "code",
										"text": "`signal`"
									},
									{
										"kind": "text",
										"text": ".\n\nListening to the "
									},
									{
										"kind": "code",
										"text": "`abort`"
									},
									{
										"kind": "text",
										"text": " event on abort signals is unsafe and may\nlead to resource leaks since another third party with the signal can\ncall "
									},
									{
										"kind": "code",
										"text": "`e.stopImmediatePropagation()`"
									},
									{
										"kind": "text",
										"text": ". Unfortunately Node.js cannot change\nthis since it would violate the web standard. Additionally, the original\nAPI makes it easy to forget to remove listeners.\n\nThis API allows safely using "
									},
									{
										"kind": "code",
										"text": "`AbortSignal`"
									},
									{
										"kind": "text",
										"text": "s in Node.js APIs by solving these\ntwo issues by listening to the event such that "
									},
									{
										"kind": "code",
										"text": "`stopImmediatePropagation`"
									},
									{
										"kind": "text",
										"text": " does\nnot prevent the listener from running.\n\nReturns a disposable so that it may be unsubscribed from more easily.\n\n"
									},
									{
										"kind": "code",
										"text": "```js\nimport { addAbortListener } from 'node:events';\n\nfunction example(signal) {\n  let disposable;\n  try {\n    signal.addEventListener('abort', (e) => e.stopImmediatePropagation());\n    disposable = addAbortListener(signal, (e) => {\n      // Do something when signal is aborted.\n    });\n  } finally {\n    disposable?.[Symbol.dispose]();\n  }\n}\n```"
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "v20.5.0"
											}
										]
									},
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "that removes the "
											},
											{
												"kind": "code",
												"text": "`abort`"
											},
											{
												"kind": "text",
												"text": " listener."
											}
										]
									}
								],
								"modifierTags": [
									"@experimental"
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
									"line": 375,
									"character": 15
								}
							],
							"parameters": [
								{
									"id": 161,
									"name": "signal",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/typescript@5.2.2/node_modules/typescript/lib/lib.dom.d.ts",
											"qualifiedName": "AbortSignal"
										},
										"name": "AbortSignal",
										"package": "typescript"
									}
								},
								{
									"id": 162,
									"name": "resource",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reflection",
										"declaration": {
											"id": 163,
											"name": "__type",
											"variant": "declaration",
											"kind": 65536,
											"flags": {
												"isExternal": true
											},
											"sources": [
												{
													"fileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
													"line": 375,
													"character": 63
												}
											],
											"signatures": [
												{
													"id": 164,
													"name": "__type",
													"variant": "signature",
													"kind": 4096,
													"flags": {
														"isExternal": true
													},
													"sources": [
														{
															"fileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
															"line": 375,
															"character": 63
														}
													],
													"parameters": [
														{
															"id": 165,
															"name": "event",
															"variant": "param",
															"kind": 32768,
															"flags": {
																"isExternal": true
															},
															"type": {
																"type": "reference",
																"target": {
																	"sourceFileName": "node_modules/.pnpm/typescript@5.2.2/node_modules/typescript/lib/lib.dom.d.ts",
																	"qualifiedName": "Event"
																},
																"name": "Event",
																"package": "typescript"
															}
														}
													],
													"type": {
														"type": "intrinsic",
														"name": "void"
													}
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/globals.d.ts",
									"qualifiedName": "Disposable"
								},
								"name": "Disposable",
								"package": "@types/node"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "EventEmitter.addAbortListener"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "EventEmitter.addAbortListener"
					}
				},
				{
					"id": 148,
					"name": "getEventListeners",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isStatic": true,
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
							"line": 296,
							"character": 15
						}
					],
					"signatures": [
						{
							"id": 149,
							"name": "getEventListeners",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns a copy of the array of listeners for the event named "
									},
									{
										"kind": "code",
										"text": "`eventName`"
									},
									{
										"kind": "text",
										"text": ".\n\nFor "
									},
									{
										"kind": "code",
										"text": "`EventEmitter`"
									},
									{
										"kind": "text",
										"text": "s this behaves exactly the same as calling "
									},
									{
										"kind": "code",
										"text": "`.listeners`"
									},
									{
										"kind": "text",
										"text": " on\nthe emitter.\n\nFor "
									},
									{
										"kind": "code",
										"text": "`EventTarget`"
									},
									{
										"kind": "text",
										"text": "s this is the only way to get the event listeners for the\nevent target. This is useful for debugging and diagnostic purposes.\n\n"
									},
									{
										"kind": "code",
										"text": "```js\nimport { getEventListeners, EventEmitter } from 'node:events';\n\n{\n  const ee = new EventEmitter();\n  const listener = () => console.log('Events are fun');\n  ee.on('foo', listener);\n  console.log(getEventListeners(ee, 'foo')); // [ [Function: listener] ]\n}\n{\n  const et = new EventTarget();\n  const listener = () => console.log('Events are fun');\n  et.addEventListener('foo', listener);\n  console.log(getEventListeners(et, 'foo')); // [ [Function: listener] ]\n}\n```"
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "v15.2.0, v14.17.0"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
									"line": 296,
									"character": 15
								}
							],
							"parameters": [
								{
									"id": 150,
									"name": "emitter",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
													"qualifiedName": "__global.NodeJS.EventEmitter"
												},
												"name": "EventEmitter",
												"package": "@types/node",
												"qualifiedName": "__global.NodeJS.EventEmitter"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
													"qualifiedName": "_DOMEventTarget"
												},
												"name": "_DOMEventTarget",
												"package": "@types/node"
											}
										]
									}
								},
								{
									"id": 151,
									"name": "name",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "symbol"
											}
										]
									}
								}
							],
							"type": {
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": {
										"sourceFileName": "node_modules/.pnpm/typescript@5.2.2/node_modules/typescript/lib/lib.es5.d.ts",
										"qualifiedName": "Function"
									},
									"name": "Function",
									"package": "typescript"
								}
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "EventEmitter.getEventListeners"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "EventEmitter.getEventListeners"
					}
				},
				{
					"id": 152,
					"name": "getMaxListeners",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isStatic": true,
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
							"line": 325,
							"character": 15
						}
					],
					"signatures": [
						{
							"id": 153,
							"name": "getMaxListeners",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Returns the currently set max amount of listeners.\n\nFor "
									},
									{
										"kind": "code",
										"text": "`EventEmitter`"
									},
									{
										"kind": "text",
										"text": "s this behaves exactly the same as calling "
									},
									{
										"kind": "code",
										"text": "`.getMaxListeners`"
									},
									{
										"kind": "text",
										"text": " on\nthe emitter.\n\nFor "
									},
									{
										"kind": "code",
										"text": "`EventTarget`"
									},
									{
										"kind": "text",
										"text": "s this is the only way to get the max event listeners for the\nevent target. If the number of event handlers on a single EventTarget exceeds\nthe max set, the EventTarget will print a warning.\n\n"
									},
									{
										"kind": "code",
										"text": "```js\nimport { getMaxListeners, setMaxListeners, EventEmitter } from 'node:events';\n\n{\n  const ee = new EventEmitter();\n  console.log(getMaxListeners(ee)); // 10\n  setMaxListeners(11, ee);\n  console.log(getMaxListeners(ee)); // 11\n}\n{\n  const et = new EventTarget();\n  console.log(getMaxListeners(et)); // 10\n  setMaxListeners(11, et);\n  console.log(getMaxListeners(et)); // 11\n}\n```"
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "v19.9.0"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
									"line": 325,
									"character": 15
								}
							],
							"parameters": [
								{
									"id": 154,
									"name": "emitter",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "reference",
												"target": {
													"sourceFileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
													"qualifiedName": "__global.NodeJS.EventEmitter"
												},
												"name": "EventEmitter",
												"package": "@types/node",
												"qualifiedName": "__global.NodeJS.EventEmitter"
											},
											{
												"type": "reference",
												"target": {
													"sourceFileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
													"qualifiedName": "_DOMEventTarget"
												},
												"name": "_DOMEventTarget",
												"package": "@types/node"
											}
										]
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "EventEmitter.getMaxListeners"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "EventEmitter.getMaxListeners"
					}
				},
				{
					"id": 144,
					"name": "listenerCount",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isStatic": true,
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
							"line": 268,
							"character": 15
						}
					],
					"signatures": [
						{
							"id": 145,
							"name": "listenerCount",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "A class method that returns the number of listeners for the given "
									},
									{
										"kind": "code",
										"text": "`eventName`"
									},
									{
										"kind": "text",
										"text": "registered on the given "
									},
									{
										"kind": "code",
										"text": "`emitter`"
									},
									{
										"kind": "text",
										"text": ".\n\n"
									},
									{
										"kind": "code",
										"text": "```js\nimport { EventEmitter, listenerCount } from 'node:events';\n\nconst myEmitter = new EventEmitter();\nmyEmitter.on('event', () => {});\nmyEmitter.on('event', () => {});\nconsole.log(listenerCount(myEmitter, 'event'));\n// Prints: 2\n```"
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "v0.9.12"
											}
										]
									},
									{
										"tag": "@deprecated",
										"content": [
											{
												"kind": "text",
												"text": "Since v3.2.0 - Use "
											},
											{
												"kind": "code",
												"text": "`listenerCount`"
											},
											{
												"kind": "text",
												"text": " instead."
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
									"line": 268,
									"character": 15
								}
							],
							"parameters": [
								{
									"id": 146,
									"name": "emitter",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The emitter to query"
											}
										]
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
											"qualifiedName": "__global.NodeJS.EventEmitter"
										},
										"name": "EventEmitter",
										"package": "@types/node",
										"qualifiedName": "__global.NodeJS.EventEmitter"
									}
								},
								{
									"id": 147,
									"name": "eventName",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The event name"
											}
										]
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "symbol"
											}
										]
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "number"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "EventEmitter.listenerCount"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "EventEmitter.listenerCount"
					}
				},
				{
					"id": 139,
					"name": "on",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isStatic": true,
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
							"line": 250,
							"character": 15
						}
					],
					"signatures": [
						{
							"id": 140,
							"name": "on",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "code",
										"text": "```js\nimport { on, EventEmitter } from 'node:events';\nimport process from 'node:process';\n\nconst ee = new EventEmitter();\n\n// Emit later on\nprocess.nextTick(() => {\n  ee.emit('foo', 'bar');\n  ee.emit('foo', 42);\n});\n\nfor await (const event of on(ee, 'foo')) {\n  // The execution of this inner block is synchronous and it\n  // processes one event at a time (even with await). Do not use\n  // if concurrent execution is required.\n  console.log(event); // prints ['bar'] [42]\n}\n// Unreachable here\n```"
									},
									{
										"kind": "text",
										"text": "\n\nReturns an "
									},
									{
										"kind": "code",
										"text": "`AsyncIterator`"
									},
									{
										"kind": "text",
										"text": " that iterates "
									},
									{
										"kind": "code",
										"text": "`eventName`"
									},
									{
										"kind": "text",
										"text": " events. It will throw\nif the "
									},
									{
										"kind": "code",
										"text": "`EventEmitter`"
									},
									{
										"kind": "text",
										"text": " emits "
									},
									{
										"kind": "code",
										"text": "`'error'`"
									},
									{
										"kind": "text",
										"text": ". It removes all listeners when\nexiting the loop. The "
									},
									{
										"kind": "code",
										"text": "`value`"
									},
									{
										"kind": "text",
										"text": " returned by each iteration is an array\ncomposed of the emitted event arguments.\n\nAn "
									},
									{
										"kind": "code",
										"text": "`AbortSignal`"
									},
									{
										"kind": "text",
										"text": " can be used to cancel waiting on events:\n\n"
									},
									{
										"kind": "code",
										"text": "```js\nimport { on, EventEmitter } from 'node:events';\nimport process from 'node:process';\n\nconst ac = new AbortController();\n\n(async () => {\n  const ee = new EventEmitter();\n\n  // Emit later on\n  process.nextTick(() => {\n    ee.emit('foo', 'bar');\n    ee.emit('foo', 42);\n  });\n\n  for await (const event of on(ee, 'foo', { signal: ac.signal })) {\n    // The execution of this inner block is synchronous and it\n    // processes one event at a time (even with await). Do not use\n    // if concurrent execution is required.\n    console.log(event); // prints ['bar'] [42]\n  }\n  // Unreachable here\n})();\n\nprocess.nextTick(() => ac.abort());\n```"
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "v13.6.0, v12.16.0"
											}
										]
									},
									{
										"tag": "@returns",
										"content": [
											{
												"kind": "text",
												"text": "that iterates "
											},
											{
												"kind": "code",
												"text": "`eventName`"
											},
											{
												"kind": "text",
												"text": " events emitted by the "
											},
											{
												"kind": "code",
												"text": "`emitter`"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
									"line": 250,
									"character": 15
								}
							],
							"parameters": [
								{
									"id": 141,
									"name": "emitter",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
											"qualifiedName": "__global.NodeJS.EventEmitter"
										},
										"name": "EventEmitter",
										"package": "@types/node",
										"qualifiedName": "__global.NodeJS.EventEmitter"
									}
								},
								{
									"id": 142,
									"name": "eventName",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The name of the event being listened for"
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 143,
									"name": "options",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
											"qualifiedName": "StaticEventEmitterOptions"
										},
										"name": "StaticEventEmitterOptions",
										"package": "@types/node"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/typescript@5.2.2/node_modules/typescript/lib/lib.es2018.asynciterable.d.ts",
									"qualifiedName": "AsyncIterableIterator"
								},
								"typeArguments": [
									{
										"type": "intrinsic",
										"name": "any"
									}
								],
								"name": "AsyncIterableIterator",
								"package": "typescript"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "EventEmitter.on"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "EventEmitter.on"
					}
				},
				{
					"id": 130,
					"name": "once",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isStatic": true,
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
							"line": 189,
							"character": 15
						},
						{
							"fileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
							"line": 190,
							"character": 15
						}
					],
					"signatures": [
						{
							"id": 131,
							"name": "once",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Creates a "
									},
									{
										"kind": "code",
										"text": "`Promise`"
									},
									{
										"kind": "text",
										"text": " that is fulfilled when the "
									},
									{
										"kind": "code",
										"text": "`EventEmitter`"
									},
									{
										"kind": "text",
										"text": " emits the given\nevent or that is rejected if the "
									},
									{
										"kind": "code",
										"text": "`EventEmitter`"
									},
									{
										"kind": "text",
										"text": " emits "
									},
									{
										"kind": "code",
										"text": "`'error'`"
									},
									{
										"kind": "text",
										"text": " while waiting.\nThe "
									},
									{
										"kind": "code",
										"text": "`Promise`"
									},
									{
										"kind": "text",
										"text": " will resolve with an array of all the arguments emitted to the\ngiven event.\n\nThis method is intentionally generic and works with the web platform [EventTarget](https://dom.spec.whatwg.org/#interface-eventtarget) interface, which has no special"
									},
									{
										"kind": "code",
										"text": "`'error'`"
									},
									{
										"kind": "text",
										"text": " event\nsemantics and does not listen to the "
									},
									{
										"kind": "code",
										"text": "`'error'`"
									},
									{
										"kind": "text",
										"text": " event.\n\n"
									},
									{
										"kind": "code",
										"text": "```js\nimport { once, EventEmitter } from 'node:events';\nimport process from 'node:process';\n\nconst ee = new EventEmitter();\n\nprocess.nextTick(() => {\n  ee.emit('myevent', 42);\n});\n\nconst [value] = await once(ee, 'myevent');\nconsole.log(value);\n\nconst err = new Error('kaboom');\nprocess.nextTick(() => {\n  ee.emit('error', err);\n});\n\ntry {\n  await once(ee, 'myevent');\n} catch (err) {\n  console.error('error happened', err);\n}\n```"
									},
									{
										"kind": "text",
										"text": "\n\nThe special handling of the "
									},
									{
										"kind": "code",
										"text": "`'error'`"
									},
									{
										"kind": "text",
										"text": " event is only used when "
									},
									{
										"kind": "code",
										"text": "`events.once()`"
									},
									{
										"kind": "text",
										"text": "is used to wait for another event. If "
									},
									{
										"kind": "code",
										"text": "`events.once()`"
									},
									{
										"kind": "text",
										"text": " is used to wait for the\n'"
									},
									{
										"kind": "code",
										"text": "`error'`"
									},
									{
										"kind": "text",
										"text": " event itself, then it is treated as any other kind of event without\nspecial handling:\n\n"
									},
									{
										"kind": "code",
										"text": "```js\nimport { EventEmitter, once } from 'node:events';\n\nconst ee = new EventEmitter();\n\nonce(ee, 'error')\n  .then(([err]) => console.log('ok', err.message))\n  .catch((err) => console.error('error', err.message));\n\nee.emit('error', new Error('boom'));\n\n// Prints: ok boom\n```"
									},
									{
										"kind": "text",
										"text": "\n\nAn "
									},
									{
										"kind": "code",
										"text": "`AbortSignal`"
									},
									{
										"kind": "text",
										"text": " can be used to cancel waiting for the event:\n\n"
									},
									{
										"kind": "code",
										"text": "```js\nimport { EventEmitter, once } from 'node:events';\n\nconst ee = new EventEmitter();\nconst ac = new AbortController();\n\nasync function foo(emitter, event, signal) {\n  try {\n    await once(emitter, event, { signal });\n    console.log('event emitted!');\n  } catch (error) {\n    if (error.name === 'AbortError') {\n      console.error('Waiting for the event was canceled!');\n    } else {\n      console.error('There was an error', error.message);\n    }\n  }\n}\n\nfoo(ee, 'foo', ac.signal);\nac.abort(); // Abort waiting for the event\nee.emit('foo'); // Prints: Waiting for the event was canceled!\n```"
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "v11.13.0, v10.16.0"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
									"line": 189,
									"character": 15
								}
							],
							"parameters": [
								{
									"id": 132,
									"name": "emitter",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
											"qualifiedName": "_NodeEventTarget"
										},
										"name": "_NodeEventTarget",
										"package": "@types/node"
									}
								},
								{
									"id": 133,
									"name": "eventName",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "union",
										"types": [
											{
												"type": "intrinsic",
												"name": "string"
											},
											{
												"type": "intrinsic",
												"name": "symbol"
											}
										]
									}
								},
								{
									"id": 134,
									"name": "options",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
											"qualifiedName": "StaticEventEmitterOptions"
										},
										"name": "StaticEventEmitterOptions",
										"package": "@types/node"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/typescript@5.2.2/node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "any"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "EventEmitter.once"
							}
						},
						{
							"id": 135,
							"name": "once",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
									"line": 190,
									"character": 15
								}
							],
							"parameters": [
								{
									"id": 136,
									"name": "emitter",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
											"qualifiedName": "_DOMEventTarget"
										},
										"name": "_DOMEventTarget",
										"package": "@types/node"
									}
								},
								{
									"id": 137,
									"name": "eventName",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true
									},
									"type": {
										"type": "intrinsic",
										"name": "string"
									}
								},
								{
									"id": 138,
									"name": "options",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"type": {
										"type": "reference",
										"target": {
											"sourceFileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
											"qualifiedName": "StaticEventEmitterOptions"
										},
										"name": "StaticEventEmitterOptions",
										"package": "@types/node"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": {
									"sourceFileName": "node_modules/.pnpm/typescript@5.2.2/node_modules/typescript/lib/lib.es5.d.ts",
									"qualifiedName": "Promise"
								},
								"typeArguments": [
									{
										"type": "array",
										"elementType": {
											"type": "intrinsic",
											"name": "any"
										}
									}
								],
								"name": "Promise",
								"package": "typescript"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "EventEmitter.once"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "EventEmitter.once"
					}
				},
				{
					"id": 155,
					"name": "setMaxListeners",
					"variant": "declaration",
					"kind": 2048,
					"flags": {
						"isStatic": true,
						"isExternal": true
					},
					"sources": [
						{
							"fileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
							"line": 340,
							"character": 15
						}
					],
					"signatures": [
						{
							"id": 156,
							"name": "setMaxListeners",
							"variant": "signature",
							"kind": 4096,
							"flags": {
								"isExternal": true
							},
							"comment": {
								"summary": [
									{
										"kind": "code",
										"text": "```js\nimport { setMaxListeners, EventEmitter } from 'node:events';\n\nconst target = new EventTarget();\nconst emitter = new EventEmitter();\n\nsetMaxListeners(5, target, emitter);\n```"
									}
								],
								"blockTags": [
									{
										"tag": "@since",
										"content": [
											{
												"kind": "text",
												"text": "v15.4.0"
											}
										]
									}
								]
							},
							"sources": [
								{
									"fileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
									"line": 340,
									"character": 15
								}
							],
							"parameters": [
								{
									"id": 157,
									"name": "n",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true,
										"isOptional": true
									},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "A non-negative number. The maximum number of listeners per "
											},
											{
												"kind": "code",
												"text": "`EventTarget`"
											},
											{
												"kind": "text",
												"text": " event."
											}
										]
									},
									"type": {
										"type": "intrinsic",
										"name": "number"
									}
								},
								{
									"id": 158,
									"name": "eventTargets",
									"variant": "param",
									"kind": 32768,
									"flags": {
										"isExternal": true,
										"isRest": true
									},
									"type": {
										"type": "array",
										"elementType": {
											"type": "union",
											"types": [
												{
													"type": "reference",
													"target": {
														"sourceFileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
														"qualifiedName": "__global.NodeJS.EventEmitter"
													},
													"name": "EventEmitter",
													"package": "@types/node",
													"qualifiedName": "__global.NodeJS.EventEmitter"
												},
												{
													"type": "reference",
													"target": {
														"sourceFileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
														"qualifiedName": "_DOMEventTarget"
													},
													"name": "_DOMEventTarget",
													"package": "@types/node"
												}
											]
										}
									}
								}
							],
							"type": {
								"type": "intrinsic",
								"name": "void"
							},
							"inheritedFrom": {
								"type": "reference",
								"target": -1,
								"name": "EventEmitter.setMaxListeners"
							}
						}
					],
					"inheritedFrom": {
						"type": "reference",
						"target": -1,
						"name": "EventEmitter.setMaxListeners"
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						170
					]
				},
				{
					"title": "Properties",
					"children": [
						174,
						176,
						173,
						175,
						167,
						168,
						169,
						166
					]
				},
				{
					"title": "Methods",
					"children": [
						190,
						177,
						239,
						261,
						231,
						181,
						243,
						233,
						218,
						197,
						204,
						247,
						254,
						236,
						179,
						225,
						211,
						188,
						228,
						183,
						186,
						159,
						148,
						152,
						144,
						139,
						130,
						155
					]
				}
			],
			"sources": [
				{
					"fileName": "src/client/WebsocketClient.ts",
					"line": 13,
					"character": 13,
					"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/client/WebsocketClient.ts#L13"
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": {
						"sourceFileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
						"qualifiedName": "EventEmitter"
					},
					"name": "EventEmitter",
					"package": "@types/node"
				}
			]
		},
		{
			"id": 1125,
			"name": "WelcomeChannel",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Represents a welcome channel within a welcome screen configuration."
					}
				]
			},
			"children": [
				{
					"id": 1126,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"sources": [
						{
							"fileName": "src/structures/WelcomeScreen.ts",
							"line": 66,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/WelcomeScreen.ts#L66"
						}
					],
					"signatures": [
						{
							"id": 1127,
							"name": "new WelcomeChannel",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Creates a new WelcomeChannel instance."
									}
								]
							},
							"sources": [
								{
									"fileName": "src/structures/WelcomeScreen.ts",
									"line": 66,
									"character": 4,
									"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/WelcomeScreen.ts#L66"
								}
							],
							"parameters": [
								{
									"id": 1128,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The data object containing welcome channel information."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 525,
										"name": "ApiGuildWelcomeScreenChannel",
										"package": "solace.js"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 1125,
								"name": "WelcomeChannel",
								"package": "solace.js"
							}
						}
					]
				},
				{
					"id": 1129,
					"name": "channelId",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPublic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the channel associated with the welcome channel."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/structures/WelcomeScreen.ts",
							"line": 42,
							"character": 11,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/WelcomeScreen.ts#L42"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1130,
					"name": "description",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPublic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The description of the welcome channel."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/structures/WelcomeScreen.ts",
							"line": 48,
							"character": 11,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/WelcomeScreen.ts#L48"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 1131,
					"name": "emojiId",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPublic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the emoji associated with the welcome channel, or null if not provided."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/structures/WelcomeScreen.ts",
							"line": 54,
							"character": 11,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/WelcomeScreen.ts#L54"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 1132,
					"name": "emojiName",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPublic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The name of the emoji associated with the welcome channel, or null if not provided."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/structures/WelcomeScreen.ts",
							"line": 60,
							"character": 11,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/WelcomeScreen.ts#L60"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						1126
					]
				},
				{
					"title": "Properties",
					"children": [
						1129,
						1130,
						1131,
						1132
					]
				}
			],
			"sources": [
				{
					"fileName": "src/structures/WelcomeScreen.ts",
					"line": 36,
					"character": 13,
					"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/WelcomeScreen.ts#L36"
				}
			]
		},
		{
			"id": 1119,
			"name": "WelcomeScreen",
			"variant": "declaration",
			"kind": 128,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Represents a welcome screen configuration for a guild."
					}
				]
			},
			"children": [
				{
					"id": 1120,
					"name": "constructor",
					"variant": "declaration",
					"kind": 512,
					"flags": {},
					"sources": [
						{
							"fileName": "src/structures/WelcomeScreen.ts",
							"line": 27,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/WelcomeScreen.ts#L27"
						}
					],
					"signatures": [
						{
							"id": 1121,
							"name": "new WelcomeScreen",
							"variant": "signature",
							"kind": 16384,
							"flags": {},
							"comment": {
								"summary": [
									{
										"kind": "text",
										"text": "Creates a new WelcomeScreen instance."
									}
								]
							},
							"sources": [
								{
									"fileName": "src/structures/WelcomeScreen.ts",
									"line": 27,
									"character": 4,
									"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/WelcomeScreen.ts#L27"
								}
							],
							"parameters": [
								{
									"id": 1122,
									"name": "data",
									"variant": "param",
									"kind": 32768,
									"flags": {},
									"comment": {
										"summary": [
											{
												"kind": "text",
												"text": "The data object containing welcome screen information."
											}
										]
									},
									"type": {
										"type": "reference",
										"target": 522,
										"name": "ApiGuildWelcomeScreen",
										"package": "solace.js"
									}
								}
							],
							"type": {
								"type": "reference",
								"target": 1119,
								"name": "WelcomeScreen",
								"package": "solace.js"
							}
						}
					]
				},
				{
					"id": 1123,
					"name": "description",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The description of the welcome screen, or null if not provided."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/structures/WelcomeScreen.ts",
							"line": 15,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/WelcomeScreen.ts#L15"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 1124,
					"name": "welcomeChannels",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of welcome channels configured for the welcome screen."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/structures/WelcomeScreen.ts",
							"line": 21,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/WelcomeScreen.ts#L21"
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 1125,
							"name": "WelcomeChannel",
							"package": "solace.js"
						}
					}
				}
			],
			"groups": [
				{
					"title": "Constructors",
					"children": [
						1120
					]
				},
				{
					"title": "Properties",
					"children": [
						1123,
						1124
					]
				}
			],
			"sources": [
				{
					"fileName": "src/structures/WelcomeScreen.ts",
					"line": 9,
					"character": 13,
					"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/WelcomeScreen.ts#L9"
				}
			]
		},
		{
			"id": 356,
			"name": "ApiActivity",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Interface defining the structure of an Acitivty which is sent with Rich Presence-related chat embeds"
					}
				]
			},
			"children": [
				{
					"id": 357,
					"name": "party_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The party ID associated with the activity, if applicable."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/interfaces/ApiActivity.ts",
							"line": 8,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiActivity.ts#L8"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 358,
					"name": "type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The type of the activity."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/interfaces/ApiActivity.ts",
							"line": 13,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiActivity.ts#L13"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						357,
						358
					]
				}
			],
			"sources": [
				{
					"fileName": "src/interfaces/ApiActivity.ts",
					"line": 4,
					"character": 17,
					"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiActivity.ts#L4"
				}
			]
		},
		{
			"id": 359,
			"name": "ApiApplication",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Interface defining the structure of an Application which is sent with Rich Presence-related chat embeds"
					}
				]
			},
			"children": [
				{
					"id": 360,
					"name": "approximate_guild_count",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The approximate number of guilds (servers) the bot is in, if applicable."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/interfaces/ApiApplication.ts",
							"line": 12,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiApplication.ts#L12"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 361,
					"name": "bot_public",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Indicates whether the bot is publicly available."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/interfaces/ApiApplication.ts",
							"line": 17,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiApplication.ts#L17"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 362,
					"name": "bot_require_code_grant",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Indicates whether the bot requires code grant for access."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/interfaces/ApiApplication.ts",
							"line": 22,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiApplication.ts#L22"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 363,
					"name": "cover_image",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "URL to the cover image of the application, if provided."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/interfaces/ApiApplication.ts",
							"line": 27,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiApplication.ts#L27"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 364,
					"name": "custom_install_url",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Custom installation URL for the application, if available."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/interfaces/ApiApplication.ts",
							"line": 32,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiApplication.ts#L32"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 365,
					"name": "description",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The description of the application."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/interfaces/ApiApplication.ts",
							"line": 37,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiApplication.ts#L37"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 366,
					"name": "flags",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Flags associated with the application, if any."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/interfaces/ApiApplication.ts",
							"line": 42,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiApplication.ts#L42"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 367,
					"name": "guild",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Partial guild object representing the linked guild, if applicable."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/interfaces/ApiApplication.ts",
							"line": 47,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiApplication.ts#L47"
						}
					],
					"type": {
						"type": "reference",
						"target": 478,
						"name": "ApiGuild",
						"package": "solace.js"
					}
				},
				{
					"id": 368,
					"name": "guild_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the guild (server) linked to the application, if applicable."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/interfaces/ApiApplication.ts",
							"line": 52,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiApplication.ts#L52"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 369,
					"name": "icon",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The icon associated with the application, if available."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/interfaces/ApiApplication.ts",
							"line": 57,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiApplication.ts#L57"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 370,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The unique identifier of the application."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/interfaces/ApiApplication.ts",
							"line": 62,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiApplication.ts#L62"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 371,
					"name": "install_params",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Installation parameters for the application."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/interfaces/ApiApplication.ts",
							"line": 67,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiApplication.ts#L67"
						}
					],
					"type": {
						"type": "reference",
						"target": 382,
						"name": "ApiApplicationInstallParams",
						"package": "solace.js"
					}
				},
				{
					"id": 372,
					"name": "owner",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Partial user object representing the owner of the application, if applicable."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/interfaces/ApiApplication.ts",
							"line": 72,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiApplication.ts#L72"
						}
					],
					"type": {
						"type": "reference",
						"target": 711,
						"name": "ApiUser",
						"package": "solace.js"
					}
				},
				{
					"id": 373,
					"name": "privacy_policy_url",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "URL to the privacy policy for the application, if provided."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/interfaces/ApiApplication.ts",
							"line": 77,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiApplication.ts#L77"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 375,
					"name": "role_connections_verification_url",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "URL for role connections verification, if applicable."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/interfaces/ApiApplication.ts",
							"line": 87,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiApplication.ts#L87"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 374,
					"name": "rpc_origins",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Origins allowed to make RPC requests to this application, if applicable."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/interfaces/ApiApplication.ts",
							"line": 82,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiApplication.ts#L82"
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 376,
					"name": "slug",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The slug of the application, if available."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/interfaces/ApiApplication.ts",
							"line": 92,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiApplication.ts#L92"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 377,
					"name": "summary",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A summary of the application."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/interfaces/ApiApplication.ts",
							"line": 97,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiApplication.ts#L97"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 378,
					"name": "tags",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Tags associated with the application, if any."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/interfaces/ApiApplication.ts",
							"line": 102,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiApplication.ts#L102"
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 379,
					"name": "team",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Information about the team associated with the application, if applicable."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/interfaces/ApiApplication.ts",
							"line": 107,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiApplication.ts#L107"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": 682,
								"name": "ApiTeam",
								"package": "solace.js"
							}
						]
					}
				},
				{
					"id": 380,
					"name": "terms_of_service_url",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "URL to the terms of service for the application, if provided."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/interfaces/ApiApplication.ts",
							"line": 112,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiApplication.ts#L112"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 381,
					"name": "verify_key",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The verification key for the application."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/interfaces/ApiApplication.ts",
							"line": 117,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiApplication.ts#L117"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						360,
						361,
						362,
						363,
						364,
						365,
						366,
						367,
						368,
						369,
						370,
						371,
						372,
						373,
						375,
						374,
						376,
						377,
						378,
						379,
						380,
						381
					]
				}
			],
			"sources": [
				{
					"fileName": "src/interfaces/ApiApplication.ts",
					"line": 8,
					"character": 17,
					"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiApplication.ts#L8"
				}
			]
		},
		{
			"id": 382,
			"name": "ApiApplicationInstallParams",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Interface defining the structure of installation parameters for the application."
					}
				]
			},
			"children": [
				{
					"id": 383,
					"name": "permissions",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The permissions required by the application."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/interfaces/ApiApplication.ts",
							"line": 128,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiApplication.ts#L128"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 384,
					"name": "scopes",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The scopes required by the application."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/interfaces/ApiApplication.ts",
							"line": 133,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiApplication.ts#L133"
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						383,
						384
					]
				}
			],
			"sources": [
				{
					"fileName": "src/interfaces/ApiApplication.ts",
					"line": 124,
					"character": 17,
					"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiApplication.ts#L124"
				}
			]
		},
		{
			"id": 385,
			"name": "ApiAttachment",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Interface defining the structure of an attachment, such as files or media, within a message."
					}
				]
			},
			"children": [
				{
					"id": 386,
					"name": "content_type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The content type of the attachment, if applicable."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/interfaces/ApiAttachment.ts",
							"line": 8,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiAttachment.ts#L8"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 387,
					"name": "description",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A description of the attachment, if provided."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/interfaces/ApiAttachment.ts",
							"line": 13,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiAttachment.ts#L13"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 388,
					"name": "duration_secs",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The duration of the attachment in seconds, if applicable."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/interfaces/ApiAttachment.ts",
							"line": 18,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiAttachment.ts#L18"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 389,
					"name": "ephemeral",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Indicates whether the attachment is ephemeral."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/interfaces/ApiAttachment.ts",
							"line": 23,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiAttachment.ts#L23"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 390,
					"name": "filename",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The filename of the attachment."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/interfaces/ApiAttachment.ts",
							"line": 28,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiAttachment.ts#L28"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 391,
					"name": "flags",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Flags associated with the attachment, if any."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/interfaces/ApiAttachment.ts",
							"line": 33,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiAttachment.ts#L33"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 392,
					"name": "height",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The height of the attachment, if applicable."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/interfaces/ApiAttachment.ts",
							"line": 38,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiAttachment.ts#L38"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 393,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The unique identifier of the attachment."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/interfaces/ApiAttachment.ts",
							"line": 43,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiAttachment.ts#L43"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 394,
					"name": "proxy_url",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The proxy URL of the attachment."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/interfaces/ApiAttachment.ts",
							"line": 48,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiAttachment.ts#L48"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 395,
					"name": "size",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The size of the attachment in bytes."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/interfaces/ApiAttachment.ts",
							"line": 53,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiAttachment.ts#L53"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 396,
					"name": "url",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The URL to access the attachment."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/interfaces/ApiAttachment.ts",
							"line": 58,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiAttachment.ts#L58"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 397,
					"name": "waveform",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The waveform data of the attachment, if applicable."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/interfaces/ApiAttachment.ts",
							"line": 63,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiAttachment.ts#L63"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 398,
					"name": "width",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The width of the attachment, if applicable."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/interfaces/ApiAttachment.ts",
							"line": 68,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiAttachment.ts#L68"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						386,
						387,
						388,
						389,
						390,
						391,
						392,
						393,
						394,
						395,
						396,
						397,
						398
					]
				}
			],
			"sources": [
				{
					"fileName": "src/interfaces/ApiAttachment.ts",
					"line": 4,
					"character": 17,
					"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiAttachment.ts#L4"
				}
			]
		},
		{
			"id": 399,
			"name": "ApiChannel",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Represents the structure of a channel."
					}
				]
			},
			"children": [
				{
					"id": 400,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The unique identifier of the channel."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/interfaces/ApiChannel.ts",
							"line": 8,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiChannel.ts#L8"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 401,
					"name": "type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The type of the channel, represented as a number."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/interfaces/ApiChannel.ts",
							"line": 13,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiChannel.ts#L13"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						400,
						401
					]
				}
			],
			"sources": [
				{
					"fileName": "src/interfaces/ApiChannel.ts",
					"line": 4,
					"character": 17,
					"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiChannel.ts#L4"
				}
			],
			"extendedBy": [
				{
					"type": "reference",
					"target": 693,
					"name": "ApiThreadChannel"
				}
			]
		},
		{
			"id": 402,
			"name": "ApiChannelCategory",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Represents the structure of a channel category."
					}
				]
			},
			"children": [
				{
					"id": 403,
					"name": "guild_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The unique identifier of the guild (server) that the category belongs to."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/interfaces/ApiChannelCategory.ts",
							"line": 8,
							"character": 2,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiChannelCategory.ts#L8"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 404,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The unique identifier of the category."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/interfaces/ApiChannelCategory.ts",
							"line": 13,
							"character": 2,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiChannelCategory.ts#L13"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 405,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The name of the category."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/interfaces/ApiChannelCategory.ts",
							"line": 18,
							"character": 2,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiChannelCategory.ts#L18"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 406,
					"name": "nsfw",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Indicates whether the category is marked as NSFW (Not Safe for Work)."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/interfaces/ApiChannelCategory.ts",
							"line": 23,
							"character": 2,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiChannelCategory.ts#L23"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 407,
					"name": "parent_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The unique identifier of the parent category, if applicable. It can be "
							},
							{
								"kind": "code",
								"text": "`null`"
							},
							{
								"kind": "text",
								"text": " if there is no parent category."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/interfaces/ApiChannelCategory.ts",
							"line": 28,
							"character": 2,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiChannelCategory.ts#L28"
						}
					],
					"type": {
						"type": "literal",
						"value": null
					}
				},
				{
					"id": 408,
					"name": "permission_overwrites",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of permission overwrites, if any, applied to this category. It can be an empty array or "
							},
							{
								"kind": "code",
								"text": "`null`"
							},
							{
								"kind": "text",
								"text": " if there are no permission overwrites."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/interfaces/ApiChannelCategory.ts",
							"line": 33,
							"character": 2,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiChannelCategory.ts#L33"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "array",
								"elementType": {
									"type": "literal",
									"value": null
								}
							}
						]
					}
				},
				{
					"id": 409,
					"name": "position",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The position of the category in the channel list."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/interfaces/ApiChannelCategory.ts",
							"line": 38,
							"character": 2,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiChannelCategory.ts#L38"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 410,
					"name": "type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The type of the category, represented as a number."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/interfaces/ApiChannelCategory.ts",
							"line": 43,
							"character": 2,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiChannelCategory.ts#L43"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						403,
						404,
						405,
						406,
						407,
						408,
						409,
						410
					]
				}
			],
			"sources": [
				{
					"fileName": "src/interfaces/ApiChannelCategory.ts",
					"line": 4,
					"character": 17,
					"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiChannelCategory.ts#L4"
				}
			]
		},
		{
			"id": 411,
			"name": "ApiDmChannel",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Represents the structure of a direct message (DM) channel."
					}
				]
			},
			"children": [
				{
					"id": 412,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The unique identifier of the DM channel."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/interfaces/ApiDmChannel.ts",
							"line": 10,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiDmChannel.ts#L10"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 413,
					"name": "last_message_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The unique identifier of the last message sent in the DM channel."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/interfaces/ApiDmChannel.ts",
							"line": 15,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiDmChannel.ts#L15"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 414,
					"name": "recipients",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of recipients in the DM channel. It can be an empty array or "
							},
							{
								"kind": "code",
								"text": "`null`"
							},
							{
								"kind": "text",
								"text": " if there are no recipients."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/interfaces/ApiDmChannel.ts",
							"line": 20,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiDmChannel.ts#L20"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 635,
									"name": "ApiRecipientsEntity",
									"package": "solace.js"
								}
							}
						]
					}
				},
				{
					"id": 415,
					"name": "type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The type of the DM channel, represented as a number."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/interfaces/ApiDmChannel.ts",
							"line": 25,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiDmChannel.ts#L25"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						412,
						413,
						414,
						415
					]
				}
			],
			"sources": [
				{
					"fileName": "src/interfaces/ApiDmChannel.ts",
					"line": 6,
					"character": 17,
					"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiDmChannel.ts#L6"
				}
			]
		},
		{
			"id": 416,
			"name": "ApiEmbed",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Represents the structure of an embed."
					}
				]
			},
			"children": [
				{
					"id": 417,
					"name": "author",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Information about the author of the embed, if provided. It follows the ApiEmbedAuthor interface."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/interfaces/ApiEmbed.ts",
							"line": 8,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiEmbed.ts#L8"
						}
					],
					"type": {
						"type": "reference",
						"target": 452,
						"name": "ApiEmbedAuthor",
						"package": "solace.js"
					}
				},
				{
					"id": 418,
					"name": "color",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A numerical color value associated with the embed."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/interfaces/ApiEmbed.ts",
							"line": 13,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiEmbed.ts#L13"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 419,
					"name": "description",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The description text of the embed."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/interfaces/ApiEmbed.ts",
							"line": 18,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiEmbed.ts#L18"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 420,
					"name": "fields",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of embed fields, each following the ApiEmbedField interface."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/interfaces/ApiEmbed.ts",
							"line": 23,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiEmbed.ts#L23"
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 457,
							"name": "ApiEmbedField",
							"package": "solace.js"
						}
					}
				},
				{
					"id": 421,
					"name": "footer",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Information about the footer of the embed, if provided. It follows the ApiEmbedFooter interface."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/interfaces/ApiEmbed.ts",
							"line": 28,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiEmbed.ts#L28"
						}
					],
					"type": {
						"type": "reference",
						"target": 430,
						"name": "ApiEmbedFooter",
						"package": "solace.js"
					}
				},
				{
					"id": 422,
					"name": "image",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Information about an image included in the embed, if provided. It follows the ApiEmbedImage interface."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/interfaces/ApiEmbed.ts",
							"line": 33,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiEmbed.ts#L33"
						}
					],
					"type": {
						"type": "reference",
						"target": 434,
						"name": "ApiEmbedImage",
						"package": "solace.js"
					}
				},
				{
					"id": 423,
					"name": "provider",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Information about the provider of the embed, if provided. It follows the ApiEmbedProvider interface."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/interfaces/ApiEmbed.ts",
							"line": 38,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiEmbed.ts#L38"
						}
					],
					"type": {
						"type": "reference",
						"target": 449,
						"name": "ApiEmbedProvider",
						"package": "solace.js"
					}
				},
				{
					"id": 424,
					"name": "thumbnail",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Information about a thumbnail image, if provided. It follows the ApiEmbedThumbnail interface."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/interfaces/ApiEmbed.ts",
							"line": 43,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiEmbed.ts#L43"
						}
					],
					"type": {
						"type": "reference",
						"target": 439,
						"name": "ApiEmbedThumbnail",
						"package": "solace.js"
					}
				},
				{
					"id": 425,
					"name": "timestamp",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A timestamp associated with the embed."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/interfaces/ApiEmbed.ts",
							"line": 48,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiEmbed.ts#L48"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 426,
					"name": "title",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The title of the embed."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/interfaces/ApiEmbed.ts",
							"line": 53,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiEmbed.ts#L53"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 427,
					"name": "type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The type of the embed."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/interfaces/ApiEmbed.ts",
							"line": 58,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiEmbed.ts#L58"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 428,
					"name": "url",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A URL associated with the embed."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/interfaces/ApiEmbed.ts",
							"line": 63,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiEmbed.ts#L63"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 429,
					"name": "video",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Information about a video included in the embed, if provided. It follows the ApiEmbedVideo interface."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/interfaces/ApiEmbed.ts",
							"line": 68,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiEmbed.ts#L68"
						}
					],
					"type": {
						"type": "reference",
						"target": 444,
						"name": "ApiEmbedVideo",
						"package": "solace.js"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						417,
						418,
						419,
						420,
						421,
						422,
						423,
						424,
						425,
						426,
						427,
						428,
						429
					]
				}
			],
			"sources": [
				{
					"fileName": "src/interfaces/ApiEmbed.ts",
					"line": 4,
					"character": 17,
					"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiEmbed.ts#L4"
				}
			]
		},
		{
			"id": 452,
			"name": "ApiEmbedAuthor",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Represents the  structure of the author of the embed."
					}
				]
			},
			"children": [
				{
					"id": 453,
					"name": "icon_url",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The URL of the author's icon."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/interfaces/ApiEmbed.ts",
							"line": 185,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiEmbed.ts#L185"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 454,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The name of the author."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/interfaces/ApiEmbed.ts",
							"line": 190,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiEmbed.ts#L190"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 455,
					"name": "proxy_icon_url",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A proxy URL for the author's icon."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/interfaces/ApiEmbed.ts",
							"line": 195,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiEmbed.ts#L195"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 456,
					"name": "url",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The URL associated with the author."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/interfaces/ApiEmbed.ts",
							"line": 200,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiEmbed.ts#L200"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						453,
						454,
						455,
						456
					]
				}
			],
			"sources": [
				{
					"fileName": "src/interfaces/ApiEmbed.ts",
					"line": 181,
					"character": 17,
					"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiEmbed.ts#L181"
				}
			]
		},
		{
			"id": 457,
			"name": "ApiEmbedField",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Represents the structure of a field within an embed."
					}
				]
			},
			"children": [
				{
					"id": 458,
					"name": "inline",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Specifies whether the field should be displayed inline."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/interfaces/ApiEmbed.ts",
							"line": 210,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiEmbed.ts#L210"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 459,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The name or title of the field."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/interfaces/ApiEmbed.ts",
							"line": 215,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiEmbed.ts#L215"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 460,
					"name": "value",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The value or content of the field."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/interfaces/ApiEmbed.ts",
							"line": 220,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiEmbed.ts#L220"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						458,
						459,
						460
					]
				}
			],
			"sources": [
				{
					"fileName": "src/interfaces/ApiEmbed.ts",
					"line": 206,
					"character": 17,
					"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiEmbed.ts#L206"
				}
			]
		},
		{
			"id": 430,
			"name": "ApiEmbedFooter",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Represents the structure of the footer of an embed."
					}
				]
			},
			"children": [
				{
					"id": 431,
					"name": "icon_url",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The URL of the footer icon."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/interfaces/ApiEmbed.ts",
							"line": 78,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiEmbed.ts#L78"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 432,
					"name": "proxy_icon_url",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A proxy URL for the footer icon."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/interfaces/ApiEmbed.ts",
							"line": 83,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiEmbed.ts#L83"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 433,
					"name": "text",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The text content of the footer."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/interfaces/ApiEmbed.ts",
							"line": 88,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiEmbed.ts#L88"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						431,
						432,
						433
					]
				}
			],
			"sources": [
				{
					"fileName": "src/interfaces/ApiEmbed.ts",
					"line": 74,
					"character": 17,
					"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiEmbed.ts#L74"
				}
			]
		},
		{
			"id": 434,
			"name": "ApiEmbedImage",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Represents the structure of an image included in the embed."
					}
				]
			},
			"children": [
				{
					"id": 435,
					"name": "height",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The height of the image."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/interfaces/ApiEmbed.ts",
							"line": 98,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiEmbed.ts#L98"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 436,
					"name": "proxy_url",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A proxy URL for the image."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/interfaces/ApiEmbed.ts",
							"line": 103,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiEmbed.ts#L103"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 437,
					"name": "url",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The URL of the image."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/interfaces/ApiEmbed.ts",
							"line": 108,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiEmbed.ts#L108"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 438,
					"name": "width",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The width of the image."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/interfaces/ApiEmbed.ts",
							"line": 113,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiEmbed.ts#L113"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						435,
						436,
						437,
						438
					]
				}
			],
			"sources": [
				{
					"fileName": "src/interfaces/ApiEmbed.ts",
					"line": 94,
					"character": 17,
					"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiEmbed.ts#L94"
				}
			]
		},
		{
			"id": 449,
			"name": "ApiEmbedProvider",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Represents the structure of a provider of the embed."
					}
				]
			},
			"children": [
				{
					"id": 450,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The name of the provider."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/interfaces/ApiEmbed.ts",
							"line": 170,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiEmbed.ts#L170"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 451,
					"name": "url",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The URL of the provider."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/interfaces/ApiEmbed.ts",
							"line": 175,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiEmbed.ts#L175"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						450,
						451
					]
				}
			],
			"sources": [
				{
					"fileName": "src/interfaces/ApiEmbed.ts",
					"line": 166,
					"character": 17,
					"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiEmbed.ts#L166"
				}
			]
		},
		{
			"id": 439,
			"name": "ApiEmbedThumbnail",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Represents the strucute of a thumbnail image included in the embed."
					}
				]
			},
			"children": [
				{
					"id": 440,
					"name": "height",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The height of the thumbnail image."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/interfaces/ApiEmbed.ts",
							"line": 123,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiEmbed.ts#L123"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 441,
					"name": "proxy_url",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A proxy URL for the thumbnail image."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/interfaces/ApiEmbed.ts",
							"line": 128,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiEmbed.ts#L128"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 442,
					"name": "url",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The URL of the thumbnail image."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/interfaces/ApiEmbed.ts",
							"line": 133,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiEmbed.ts#L133"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 443,
					"name": "width",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The width of the thumbnail image."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/interfaces/ApiEmbed.ts",
							"line": 138,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiEmbed.ts#L138"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						440,
						441,
						442,
						443
					]
				}
			],
			"sources": [
				{
					"fileName": "src/interfaces/ApiEmbed.ts",
					"line": 119,
					"character": 17,
					"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiEmbed.ts#L119"
				}
			]
		},
		{
			"id": 444,
			"name": "ApiEmbedVideo",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"children": [
				{
					"id": 445,
					"name": "height",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The height of the video."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/interfaces/ApiEmbed.ts",
							"line": 145,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiEmbed.ts#L145"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 446,
					"name": "proxy_url",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A proxy URL for the video."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/interfaces/ApiEmbed.ts",
							"line": 150,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiEmbed.ts#L150"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 447,
					"name": "url",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The URL of the video."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/interfaces/ApiEmbed.ts",
							"line": 155,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiEmbed.ts#L155"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 448,
					"name": "width",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The width of the video."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/interfaces/ApiEmbed.ts",
							"line": 160,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiEmbed.ts#L160"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						445,
						446,
						447,
						448
					]
				}
			],
			"sources": [
				{
					"fileName": "src/interfaces/ApiEmbed.ts",
					"line": 141,
					"character": 17,
					"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiEmbed.ts#L141"
				}
			]
		},
		{
			"id": 461,
			"name": "ApiEmoji",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Represents an emoji in an API response."
					}
				]
			},
			"children": [
				{
					"id": 462,
					"name": "animated",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Indicates whether the emoji is animated."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/interfaces/ApiEmoji.ts",
							"line": 10,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiEmoji.ts#L10"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 463,
					"name": "available",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Indicates whether the emoji is available."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/interfaces/ApiEmoji.ts",
							"line": 15,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiEmoji.ts#L15"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 464,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The unique identifier of the emoji."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/interfaces/ApiEmoji.ts",
							"line": 20,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiEmoji.ts#L20"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 465,
					"name": "managed",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Indicates whether the emoji is managed by an external service."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/interfaces/ApiEmoji.ts",
							"line": 25,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiEmoji.ts#L25"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 466,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The name of the emoji."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/interfaces/ApiEmoji.ts",
							"line": 30,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiEmoji.ts#L30"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 467,
					"name": "require_colons",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Indicates whether colons are required to use the emoji."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/interfaces/ApiEmoji.ts",
							"line": 35,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiEmoji.ts#L35"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 468,
					"name": "roles",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of role IDs that are allowed to use this emoji."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/interfaces/ApiEmoji.ts",
							"line": 40,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiEmoji.ts#L40"
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 469,
					"name": "user",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Information about the user who created the emoji."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/interfaces/ApiEmoji.ts",
							"line": 45,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiEmoji.ts#L45"
						}
					],
					"type": {
						"type": "reference",
						"target": 711,
						"name": "ApiUser",
						"package": "solace.js"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						462,
						463,
						464,
						465,
						466,
						467,
						468,
						469
					]
				}
			],
			"sources": [
				{
					"fileName": "src/interfaces/ApiEmoji.ts",
					"line": 6,
					"character": 17,
					"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiEmoji.ts#L6"
				}
			]
		},
		{
			"id": 470,
			"name": "ApiGroupDmChannel",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Represents the structure of a group direct message (DM) channel."
					}
				]
			},
			"children": [
				{
					"id": 471,
					"name": "icon",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The icon of the group DM channel, which is always null for this type of channel."
							}
						],
						"blockTags": [
							{
								"tag": "@remarks",
								"content": [
									{
										"kind": "text",
										"text": "This property is optional."
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "src/interfaces/ApiGroupDmChannel.ts",
							"line": 12,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiGroupDmChannel.ts#L12"
						}
					],
					"type": {
						"type": "literal",
						"value": null
					}
				},
				{
					"id": 472,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The unique identifier of the group DM channel."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/interfaces/ApiGroupDmChannel.ts",
							"line": 17,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiGroupDmChannel.ts#L17"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 473,
					"name": "last_message_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The unique identifier of the last message sent in the group DM channel."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/interfaces/ApiGroupDmChannel.ts",
							"line": 22,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiGroupDmChannel.ts#L22"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 474,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The name of the group DM channel."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/interfaces/ApiGroupDmChannel.ts",
							"line": 27,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiGroupDmChannel.ts#L27"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 475,
					"name": "owner_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The unique identifier of the owner of the group DM channel."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/interfaces/ApiGroupDmChannel.ts",
							"line": 32,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiGroupDmChannel.ts#L32"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 476,
					"name": "recipients",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of recipient entities representing the users in the group DM."
							}
						],
						"blockTags": [
							{
								"tag": "@remarks",
								"content": [
									{
										"kind": "text",
										"text": "This property is optional and can be null."
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "src/interfaces/ApiGroupDmChannel.ts",
							"line": 39,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiGroupDmChannel.ts#L39"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 635,
									"name": "ApiRecipientsEntity",
									"package": "solace.js"
								}
							}
						]
					}
				},
				{
					"id": 477,
					"name": "type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The type of the channel, which is a number representing the channel type."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/interfaces/ApiGroupDmChannel.ts",
							"line": 44,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiGroupDmChannel.ts#L44"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						471,
						472,
						473,
						474,
						475,
						476,
						477
					]
				}
			],
			"sources": [
				{
					"fileName": "src/interfaces/ApiGroupDmChannel.ts",
					"line": 6,
					"character": 17,
					"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiGroupDmChannel.ts#L6"
				}
			]
		},
		{
			"id": 478,
			"name": "ApiGuild",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Represents the structure of a guild (server)."
					}
				]
			},
			"children": [
				{
					"id": 479,
					"name": "afk_channel_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the AFK (Away From Keyboard) channel within the guild, or null if not set."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/interfaces/ApiGuild.ts",
							"line": 12,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiGuild.ts#L12"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 480,
					"name": "afk_timeout",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The timeout (in seconds) for AFK users in the AFK channel."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/interfaces/ApiGuild.ts",
							"line": 17,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiGuild.ts#L17"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 481,
					"name": "application_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the application associated with the guild, or null if not applicable."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/interfaces/ApiGuild.ts",
							"line": 22,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiGuild.ts#L22"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 482,
					"name": "approximate_member_count",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An approximate count of guild members."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/interfaces/ApiGuild.ts",
							"line": 27,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiGuild.ts#L27"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 483,
					"name": "approximate_presence_count",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An approximate count of members currently online."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/interfaces/ApiGuild.ts",
							"line": 32,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiGuild.ts#L32"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 484,
					"name": "banner",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The banner image of the guild, or null if not set."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/interfaces/ApiGuild.ts",
							"line": 37,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiGuild.ts#L37"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 485,
					"name": "default_message_notifications",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The default message notification level for the guild."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/interfaces/ApiGuild.ts",
							"line": 42,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiGuild.ts#L42"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 486,
					"name": "description",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A description of the guild, or null if not provided."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/interfaces/ApiGuild.ts",
							"line": 47,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiGuild.ts#L47"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 487,
					"name": "discovery_splash",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The discovery splash image of the guild, or null if not set."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/interfaces/ApiGuild.ts",
							"line": 52,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiGuild.ts#L52"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 488,
					"name": "emojis",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of emojis associated with the guild."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/interfaces/ApiGuild.ts",
							"line": 57,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiGuild.ts#L57"
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 461,
							"name": "ApiEmoji",
							"package": "solace.js"
						}
					}
				},
				{
					"id": 489,
					"name": "explicit_content_filter",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The explicit content filter level for the guild."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/interfaces/ApiGuild.ts",
							"line": 62,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiGuild.ts#L62"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 490,
					"name": "features",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of feature strings describing the guild's features."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/interfaces/ApiGuild.ts",
							"line": 67,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiGuild.ts#L67"
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 491,
					"name": "icon",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The icon image of the guild, or null if not set."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/interfaces/ApiGuild.ts",
							"line": 72,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiGuild.ts#L72"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 492,
					"name": "icon_hash",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The icon hash for the guild's icon, or null if not set."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/interfaces/ApiGuild.ts",
							"line": 77,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiGuild.ts#L77"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 493,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The unique identifier of the guild."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/interfaces/ApiGuild.ts",
							"line": 82,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiGuild.ts#L82"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 494,
					"name": "max_members",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The maximum number of members allowed in the guild."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/interfaces/ApiGuild.ts",
							"line": 87,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiGuild.ts#L87"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 495,
					"name": "max_presences",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The maximum number of presences allowed in the guild, or null if not set."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/interfaces/ApiGuild.ts",
							"line": 92,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiGuild.ts#L92"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 496,
					"name": "max_stage_video_channel_users",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The maximum number of users allowed in a stage video channel within the guild."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/interfaces/ApiGuild.ts",
							"line": 97,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiGuild.ts#L97"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 497,
					"name": "max_video_channel_users",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The maximum number of users allowed in a video channel within the guild."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/interfaces/ApiGuild.ts",
							"line": 102,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiGuild.ts#L102"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 498,
					"name": "mfa_level",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The level of multi-factor authentication (MFA) required for guild members."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/interfaces/ApiGuild.ts",
							"line": 107,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiGuild.ts#L107"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 499,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The name of the guild."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/interfaces/ApiGuild.ts",
							"line": 112,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiGuild.ts#L112"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 500,
					"name": "nsfw_level",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The NSFW (Not Safe For Work) level of the guild."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/interfaces/ApiGuild.ts",
							"line": 117,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiGuild.ts#L117"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 501,
					"name": "owner",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Indicates whether the current user is the owner of the guild."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/interfaces/ApiGuild.ts",
							"line": 122,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiGuild.ts#L122"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 502,
					"name": "owner_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the owner of the guild."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/interfaces/ApiGuild.ts",
							"line": 127,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiGuild.ts#L127"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 503,
					"name": "permissions",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The permissions for the current user in the guild, or null if not applicable."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/interfaces/ApiGuild.ts",
							"line": 132,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiGuild.ts#L132"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 504,
					"name": "preferred_locale",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The preferred locale of the guild."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/interfaces/ApiGuild.ts",
							"line": 137,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiGuild.ts#L137"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 505,
					"name": "premium_progress_bar_enabled",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Indicates whether the premium progress bar is enabled."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/interfaces/ApiGuild.ts",
							"line": 142,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiGuild.ts#L142"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 506,
					"name": "premium_subscription_count",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The number of premium subscriptions for the guild, or null if not set."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/interfaces/ApiGuild.ts",
							"line": 147,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiGuild.ts#L147"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 507,
					"name": "premium_tier",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The premium tier level of the guild."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/interfaces/ApiGuild.ts",
							"line": 152,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiGuild.ts#L152"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 508,
					"name": "public_updates_channel_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the public updates channel, or null if not set."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/interfaces/ApiGuild.ts",
							"line": 157,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiGuild.ts#L157"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 509,
					"name": "region",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The region of the guild, or null if not set."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/interfaces/ApiGuild.ts",
							"line": 162,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiGuild.ts#L162"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 510,
					"name": "roles",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of roles within the guild."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/interfaces/ApiGuild.ts",
							"line": 167,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiGuild.ts#L167"
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 640,
							"name": "ApiRole",
							"package": "solace.js"
						}
					}
				},
				{
					"id": 511,
					"name": "rules_channel_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the rules channel, or null if not set."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/interfaces/ApiGuild.ts",
							"line": 172,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiGuild.ts#L172"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 512,
					"name": "safety_alerts_channel_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the safety alerts channel, or null if not set."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/interfaces/ApiGuild.ts",
							"line": 177,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiGuild.ts#L177"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 513,
					"name": "splash",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The splash image of the guild, or null if not set."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/interfaces/ApiGuild.ts",
							"line": 182,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiGuild.ts#L182"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 514,
					"name": "stickers",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of stickers associated with the guild."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/interfaces/ApiGuild.ts",
							"line": 187,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiGuild.ts#L187"
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 665,
							"name": "ApiSticker",
							"package": "solace.js"
						}
					}
				},
				{
					"id": 515,
					"name": "system_channel_flags",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The system channel flags for the guild."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/interfaces/ApiGuild.ts",
							"line": 192,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiGuild.ts#L192"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 516,
					"name": "system_channel_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the system channel, or null if not set."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/interfaces/ApiGuild.ts",
							"line": 197,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiGuild.ts#L197"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 517,
					"name": "vanity_url_code",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The vanity URL code for the guild, or null if not set."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/interfaces/ApiGuild.ts",
							"line": 202,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiGuild.ts#L202"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 518,
					"name": "verification_level",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The verification level of the guild."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/interfaces/ApiGuild.ts",
							"line": 207,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiGuild.ts#L207"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 519,
					"name": "welcome_screen",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The welcome screen configuration for the guild, if available."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/interfaces/ApiGuild.ts",
							"line": 212,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiGuild.ts#L212"
						}
					],
					"type": {
						"type": "reference",
						"target": 522,
						"name": "ApiGuildWelcomeScreen",
						"package": "solace.js"
					}
				},
				{
					"id": 520,
					"name": "widget_channel_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the widget channel, or null if not set."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/interfaces/ApiGuild.ts",
							"line": 217,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiGuild.ts#L217"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 521,
					"name": "widget_enabled",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Indicates whether the widget is enabled."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/interfaces/ApiGuild.ts",
							"line": 222,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiGuild.ts#L222"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						479,
						480,
						481,
						482,
						483,
						484,
						485,
						486,
						487,
						488,
						489,
						490,
						491,
						492,
						493,
						494,
						495,
						496,
						497,
						498,
						499,
						500,
						501,
						502,
						503,
						504,
						505,
						506,
						507,
						508,
						509,
						510,
						511,
						512,
						513,
						514,
						515,
						516,
						517,
						518,
						519,
						520,
						521
					]
				}
			],
			"sources": [
				{
					"fileName": "src/interfaces/ApiGuild.ts",
					"line": 8,
					"character": 17,
					"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiGuild.ts#L8"
				}
			]
		},
		{
			"id": 530,
			"name": "ApiGuildAnnouncementChannel",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Represents the structure of an announcement channel in a guild (server)."
					}
				]
			},
			"children": [
				{
					"id": 531,
					"name": "default_auto_archive_duration",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The default auto-archive duration for messages in this channel, in minutes."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/interfaces/ApiGuildAnnouncementChannel.ts",
							"line": 8,
							"character": 2,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiGuildAnnouncementChannel.ts#L8"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 532,
					"name": "guild_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the guild to which this announcement channel belongs."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/interfaces/ApiGuildAnnouncementChannel.ts",
							"line": 13,
							"character": 2,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiGuildAnnouncementChannel.ts#L13"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 533,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The unique identifier of the announcement channel."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/interfaces/ApiGuildAnnouncementChannel.ts",
							"line": 18,
							"character": 2,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiGuildAnnouncementChannel.ts#L18"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 534,
					"name": "last_message_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the last message sent in this channel."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/interfaces/ApiGuildAnnouncementChannel.ts",
							"line": 23,
							"character": 2,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiGuildAnnouncementChannel.ts#L23"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 535,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The name of the announcement channel."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/interfaces/ApiGuildAnnouncementChannel.ts",
							"line": 28,
							"character": 2,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiGuildAnnouncementChannel.ts#L28"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 536,
					"name": "nsfw",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Indicates whether the announcement channel is marked as NSFW (Not Safe For Work)."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/interfaces/ApiGuildAnnouncementChannel.ts",
							"line": 33,
							"character": 2,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiGuildAnnouncementChannel.ts#L33"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 537,
					"name": "parent_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the parent category or channel of this announcement channel."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/interfaces/ApiGuildAnnouncementChannel.ts",
							"line": 38,
							"character": 2,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiGuildAnnouncementChannel.ts#L38"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 538,
					"name": "permission_overwrites",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of permission overwrites for this channel, or null if not provided."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/interfaces/ApiGuildAnnouncementChannel.ts",
							"line": 43,
							"character": 2,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiGuildAnnouncementChannel.ts#L43"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "array",
								"elementType": {
									"type": "literal",
									"value": null
								}
							}
						]
					}
				},
				{
					"id": 539,
					"name": "position",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The position of the announcement channel in the list of channels within the guild."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/interfaces/ApiGuildAnnouncementChannel.ts",
							"line": 48,
							"character": 2,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiGuildAnnouncementChannel.ts#L48"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 540,
					"name": "topic",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The topic or description of the announcement channel."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/interfaces/ApiGuildAnnouncementChannel.ts",
							"line": 53,
							"character": 2,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiGuildAnnouncementChannel.ts#L53"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 541,
					"name": "type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The type of channel."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/interfaces/ApiGuildAnnouncementChannel.ts",
							"line": 58,
							"character": 2,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiGuildAnnouncementChannel.ts#L58"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						531,
						532,
						533,
						534,
						535,
						536,
						537,
						538,
						539,
						540,
						541
					]
				}
			],
			"sources": [
				{
					"fileName": "src/interfaces/ApiGuildAnnouncementChannel.ts",
					"line": 4,
					"character": 17,
					"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiGuildAnnouncementChannel.ts#L4"
				}
			]
		},
		{
			"id": 542,
			"name": "ApiGuildMember",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Represents the structure of a member of a guild (server)."
					}
				]
			},
			"children": [
				{
					"id": 543,
					"name": "avatar",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The avatar URL of the guild member, or null if the member has no avatar."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/interfaces/ApiGuildMember.ts",
							"line": 10,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiGuildMember.ts#L10"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 544,
					"name": "communication_disabled_until",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The timestamp until which the communication is disabled for this member, or null if not disabled."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/interfaces/ApiGuildMember.ts",
							"line": 15,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiGuildMember.ts#L15"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 545,
					"name": "deaf",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Indicates whether the member is deafened in voice channels."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/interfaces/ApiGuildMember.ts",
							"line": 20,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiGuildMember.ts#L20"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 546,
					"name": "flags",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The member's flags."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/interfaces/ApiGuildMember.ts",
							"line": 25,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiGuildMember.ts#L25"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 547,
					"name": "joined_at",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The timestamp when the member joined the guild."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/interfaces/ApiGuildMember.ts",
							"line": 30,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiGuildMember.ts#L30"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 548,
					"name": "mute",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Indicates whether the member is muted in voice channels."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/interfaces/ApiGuildMember.ts",
							"line": 35,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiGuildMember.ts#L35"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 549,
					"name": "nick",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The nickname (nick) of the member within the guild, or null if not set."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/interfaces/ApiGuildMember.ts",
							"line": 40,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiGuildMember.ts#L40"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 550,
					"name": "pending",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Indicates whether the member is pending, typically for members who have not accepted an invite."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/interfaces/ApiGuildMember.ts",
							"line": 45,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiGuildMember.ts#L45"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 551,
					"name": "permissions",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The permissions granted to the member, represented as a string."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/interfaces/ApiGuildMember.ts",
							"line": 50,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiGuildMember.ts#L50"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 552,
					"name": "premium_since",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The timestamp when the member received premium benefits, or null if not a premium member."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/interfaces/ApiGuildMember.ts",
							"line": 55,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiGuildMember.ts#L55"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 553,
					"name": "roles",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of role IDs representing the roles assigned to the member."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/interfaces/ApiGuildMember.ts",
							"line": 60,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiGuildMember.ts#L60"
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 554,
					"name": "user",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Information about the user associated with this guild member, or null if not provided."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/interfaces/ApiGuildMember.ts",
							"line": 65,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiGuildMember.ts#L65"
						}
					],
					"type": {
						"type": "reference",
						"target": 711,
						"name": "ApiUser",
						"package": "solace.js"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						543,
						544,
						545,
						546,
						547,
						548,
						549,
						550,
						551,
						552,
						553,
						554
					]
				}
			],
			"sources": [
				{
					"fileName": "src/interfaces/ApiGuildMember.ts",
					"line": 6,
					"character": 17,
					"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiGuildMember.ts#L6"
				}
			]
		},
		{
			"id": 555,
			"name": "ApiGuildTextChannel",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Represents the structure of a text channel within a guild (server)."
					}
				]
			},
			"children": [
				{
					"id": 556,
					"name": "default_auto_archive_duration",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The default auto-archive duration for messages in this channel, in seconds."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/interfaces/ApiGuildTextChannel.ts",
							"line": 8,
							"character": 2,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiGuildTextChannel.ts#L8"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 557,
					"name": "guild_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the guild to which this text channel belongs."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/interfaces/ApiGuildTextChannel.ts",
							"line": 13,
							"character": 2,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiGuildTextChannel.ts#L13"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 558,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The unique ID of the text channel."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/interfaces/ApiGuildTextChannel.ts",
							"line": 18,
							"character": 2,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiGuildTextChannel.ts#L18"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 559,
					"name": "last_message_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the last message sent in this channel."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/interfaces/ApiGuildTextChannel.ts",
							"line": 23,
							"character": 2,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiGuildTextChannel.ts#L23"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 560,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The name of the text channel."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/interfaces/ApiGuildTextChannel.ts",
							"line": 28,
							"character": 2,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiGuildTextChannel.ts#L28"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 561,
					"name": "nsfw",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Indicates whether the text channel is marked as NSFW (Not Safe For Work)."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/interfaces/ApiGuildTextChannel.ts",
							"line": 33,
							"character": 2,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiGuildTextChannel.ts#L33"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 562,
					"name": "parent_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the parent category (if any) that this channel belongs to."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/interfaces/ApiGuildTextChannel.ts",
							"line": 38,
							"character": 2,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiGuildTextChannel.ts#L38"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 563,
					"name": "permission_overwrites",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of permission overwrites for this channel, or null if none exist."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/interfaces/ApiGuildTextChannel.ts",
							"line": 43,
							"character": 2,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiGuildTextChannel.ts#L43"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "array",
								"elementType": {
									"type": "literal",
									"value": null
								}
							}
						]
					}
				},
				{
					"id": 564,
					"name": "position",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The position of the text channel within the guild's channel list."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/interfaces/ApiGuildTextChannel.ts",
							"line": 48,
							"character": 2,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiGuildTextChannel.ts#L48"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 565,
					"name": "rate_limit_per_user",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The rate limit (slow mode) for users in this channel, in seconds."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/interfaces/ApiGuildTextChannel.ts",
							"line": 53,
							"character": 2,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiGuildTextChannel.ts#L53"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 566,
					"name": "topic",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The topic or description of the text channel."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/interfaces/ApiGuildTextChannel.ts",
							"line": 58,
							"character": 2,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiGuildTextChannel.ts#L58"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 567,
					"name": "type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The type of the channel."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/interfaces/ApiGuildTextChannel.ts",
							"line": 63,
							"character": 2,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiGuildTextChannel.ts#L63"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						556,
						557,
						558,
						559,
						560,
						561,
						562,
						563,
						564,
						565,
						566,
						567
					]
				}
			],
			"sources": [
				{
					"fileName": "src/interfaces/ApiGuildTextChannel.ts",
					"line": 4,
					"character": 17,
					"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiGuildTextChannel.ts#L4"
				}
			]
		},
		{
			"id": 568,
			"name": "ApiGuildVoiceChannel",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Represents the structure of a voice channel within a guild (server)."
					}
				]
			},
			"children": [
				{
					"id": 569,
					"name": "bitrate",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The bitrate (voice quality) of the voice channel."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/interfaces/ApiGuildVoiceChannel.ts",
							"line": 10,
							"character": 2,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiGuildVoiceChannel.ts#L10"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 570,
					"name": "guild_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the guild to which this voice channel belongs."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/interfaces/ApiGuildVoiceChannel.ts",
							"line": 15,
							"character": 2,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiGuildVoiceChannel.ts#L15"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 579,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPublic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The unique ID of the channel."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/structures/Channel.ts",
							"line": 12,
							"character": 11,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/Channel.ts#L12"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 794,
						"name": "Channel.id"
					}
				},
				{
					"id": 571,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The name of the voice channel."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/interfaces/ApiGuildVoiceChannel.ts",
							"line": 20,
							"character": 2,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiGuildVoiceChannel.ts#L20"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 572,
					"name": "nsfw",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Indicates whether the voice channel is marked as NSFW (Not Safe For Work)."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/interfaces/ApiGuildVoiceChannel.ts",
							"line": 25,
							"character": 2,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiGuildVoiceChannel.ts#L25"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 573,
					"name": "parent_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the parent category (if any) that this channel belongs to, or null if none."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/interfaces/ApiGuildVoiceChannel.ts",
							"line": 30,
							"character": 2,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiGuildVoiceChannel.ts#L30"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 574,
					"name": "permission_overwrites",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of permission overwrites for this voice channel."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/interfaces/ApiGuildVoiceChannel.ts",
							"line": 35,
							"character": 2,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiGuildVoiceChannel.ts#L35"
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "any"
						}
					}
				},
				{
					"id": 575,
					"name": "position",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The position of the voice channel within the guild's channel list."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/interfaces/ApiGuildVoiceChannel.ts",
							"line": 40,
							"character": 2,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiGuildVoiceChannel.ts#L40"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 576,
					"name": "rate_limit_per_user",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The rate limit (slow mode) for users in this voice channel, in seconds."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/interfaces/ApiGuildVoiceChannel.ts",
							"line": 45,
							"character": 2,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiGuildVoiceChannel.ts#L45"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 577,
					"name": "rtc_region",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The RTC (Real-Time Communication) region for the voice channel, or null if unspecified."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/interfaces/ApiGuildVoiceChannel.ts",
							"line": 50,
							"character": 2,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiGuildVoiceChannel.ts#L50"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 580,
					"name": "type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isPublic": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The type of the channel."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/structures/Channel.ts",
							"line": 18,
							"character": 11,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/structures/Channel.ts#L18"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 795,
						"name": "Channel.type"
					}
				},
				{
					"id": 578,
					"name": "user_limit",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The maximum number of users that can be in the voice channel."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/interfaces/ApiGuildVoiceChannel.ts",
							"line": 55,
							"character": 2,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiGuildVoiceChannel.ts#L55"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						569,
						570,
						579,
						571,
						572,
						573,
						574,
						575,
						576,
						577,
						580,
						578
					]
				}
			],
			"sources": [
				{
					"fileName": "src/interfaces/ApiGuildVoiceChannel.ts",
					"line": 6,
					"character": 17,
					"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiGuildVoiceChannel.ts#L6"
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 790,
					"name": "Channel",
					"package": "solace.js"
				}
			]
		},
		{
			"id": 522,
			"name": "ApiGuildWelcomeScreen",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Represents the structure of a welcome screen configuration for a guild."
					}
				]
			},
			"children": [
				{
					"id": 523,
					"name": "description",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A description of the welcome screen, or null if not provided."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/interfaces/ApiGuild.ts",
							"line": 232,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiGuild.ts#L232"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 524,
					"name": "welcome_channels",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of welcome screen channel configurations."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/interfaces/ApiGuild.ts",
							"line": 237,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiGuild.ts#L237"
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 525,
							"name": "ApiGuildWelcomeScreenChannel",
							"package": "solace.js"
						}
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						523,
						524
					]
				}
			],
			"sources": [
				{
					"fileName": "src/interfaces/ApiGuild.ts",
					"line": 228,
					"character": 17,
					"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiGuild.ts#L228"
				}
			]
		},
		{
			"id": 525,
			"name": "ApiGuildWelcomeScreenChannel",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Represents the structure of a welcome screen channel configuration for a guild."
					}
				]
			},
			"children": [
				{
					"id": 526,
					"name": "channel_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the channel."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/interfaces/ApiGuild.ts",
							"line": 247,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiGuild.ts#L247"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 527,
					"name": "description",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A description of the welcome screen channel, or null if not provided."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/interfaces/ApiGuild.ts",
							"line": 252,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiGuild.ts#L252"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 528,
					"name": "emoji_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the emoji associated with the welcome screen channel, or null if not provided."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/interfaces/ApiGuild.ts",
							"line": 257,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiGuild.ts#L257"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 529,
					"name": "emoji_name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The name of the emoji associated with the welcome screen channel, or null if not provided."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/interfaces/ApiGuild.ts",
							"line": 262,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiGuild.ts#L262"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						526,
						527,
						528,
						529
					]
				}
			],
			"sources": [
				{
					"fileName": "src/interfaces/ApiGuild.ts",
					"line": 243,
					"character": 17,
					"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiGuild.ts#L243"
				}
			]
		},
		{
			"id": 581,
			"name": "ApiInteraction",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Represents an interaction in an API response."
					}
				]
			},
			"children": [
				{
					"id": 582,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The unique ID of the interaction."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/interfaces/ApiInteraction.ts",
							"line": 11,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiInteraction.ts#L11"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 583,
					"name": "member",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Information about the guild member (user) who triggered the interaction (if applicable)."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/interfaces/ApiInteraction.ts",
							"line": 16,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiInteraction.ts#L16"
						}
					],
					"type": {
						"type": "reference",
						"target": 542,
						"name": "ApiGuildMember",
						"package": "solace.js"
					}
				},
				{
					"id": 584,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The name of the interaction."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/interfaces/ApiInteraction.ts",
							"line": 21,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiInteraction.ts#L21"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 585,
					"name": "type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The type of the interaction."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/interfaces/ApiInteraction.ts",
							"line": 26,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiInteraction.ts#L26"
						}
					],
					"type": {
						"type": "reference",
						"target": 587,
						"name": "ApiInteractionType",
						"package": "solace.js"
					}
				},
				{
					"id": 586,
					"name": "user",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Information about the user who triggered the interaction."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/interfaces/ApiInteraction.ts",
							"line": 31,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiInteraction.ts#L31"
						}
					],
					"type": {
						"type": "reference",
						"target": 711,
						"name": "ApiUser",
						"package": "solace.js"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						582,
						583,
						584,
						585,
						586
					]
				}
			],
			"sources": [
				{
					"fileName": "src/interfaces/ApiInteraction.ts",
					"line": 7,
					"character": 17,
					"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiInteraction.ts#L7"
				}
			]
		},
		{
			"id": 588,
			"name": "ApiMessage",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Interface defining the structure of message data."
					}
				]
			},
			"children": [
				{
					"id": 589,
					"name": "activity",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Sent with Rich Presence-related chat embeds"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/interfaces/ApiMessage.ts",
							"line": 22,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiMessage.ts#L22"
						}
					],
					"type": {
						"type": "reference",
						"target": 356,
						"name": "ApiActivity",
						"package": "solace.js"
					}
				},
				{
					"id": 590,
					"name": "application",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Sent with Rich Presence-related chat embeds"
							}
						]
					},
					"sources": [
						{
							"fileName": "src/interfaces/ApiMessage.ts",
							"line": 27,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiMessage.ts#L27"
						}
					],
					"type": {
						"type": "reference",
						"target": 359,
						"name": "ApiApplication",
						"package": "solace.js"
					}
				},
				{
					"id": 591,
					"name": "application_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the application associated with the message, if applicable."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/interfaces/ApiMessage.ts",
							"line": 32,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiMessage.ts#L32"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 592,
					"name": "attachments",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of attachments (e.g., files, images) sent with the message."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/interfaces/ApiMessage.ts",
							"line": 37,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiMessage.ts#L37"
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 385,
							"name": "ApiAttachment",
							"package": "solace.js"
						}
					}
				},
				{
					"id": 593,
					"name": "author",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The user who sent the message."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/interfaces/ApiMessage.ts",
							"line": 42,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiMessage.ts#L42"
						}
					],
					"type": {
						"type": "reference",
						"target": 711,
						"name": "ApiUser",
						"package": "solace.js"
					}
				},
				{
					"id": 594,
					"name": "channel_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the channel where the message was sent."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/interfaces/ApiMessage.ts",
							"line": 47,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiMessage.ts#L47"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 595,
					"name": "components",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of components included in the message, if any."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/interfaces/ApiMessage.ts",
							"line": 52,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiMessage.ts#L52"
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "any"
						}
					}
				},
				{
					"id": 596,
					"name": "content",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The content (text) of the message."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/interfaces/ApiMessage.ts",
							"line": 57,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiMessage.ts#L57"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 597,
					"name": "edited_timestamp",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The timestamp when the message was last edited, or null if it hasn't been edited."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/interfaces/ApiMessage.ts",
							"line": 62,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiMessage.ts#L62"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 598,
					"name": "embeds",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of embedded content within the message (e.g., rich media)."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/interfaces/ApiMessage.ts",
							"line": 67,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiMessage.ts#L67"
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 416,
							"name": "ApiEmbed",
							"package": "solace.js"
						}
					}
				},
				{
					"id": 599,
					"name": "flags",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Flags associated with the message, if any."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/interfaces/ApiMessage.ts",
							"line": 72,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiMessage.ts#L72"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 600,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The unique identifier of the message."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/interfaces/ApiMessage.ts",
							"line": 77,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiMessage.ts#L77"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 601,
					"name": "interaction",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Information about an interaction associated with the message, if any."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/interfaces/ApiMessage.ts",
							"line": 82,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiMessage.ts#L82"
						}
					],
					"type": {
						"type": "reference",
						"target": 581,
						"name": "ApiInteraction",
						"package": "solace.js"
					}
				},
				{
					"id": 602,
					"name": "mention_channels",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of mentioned channels in the message content, if any."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/interfaces/ApiMessage.ts",
							"line": 87,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiMessage.ts#L87"
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "any"
						}
					}
				},
				{
					"id": 603,
					"name": "mention_everyone",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Indicates whether the message mentions everyone in the channel."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/interfaces/ApiMessage.ts",
							"line": 92,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiMessage.ts#L92"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 604,
					"name": "mention_roles",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of role IDs that were mentioned in the message."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/interfaces/ApiMessage.ts",
							"line": 97,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiMessage.ts#L97"
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "string"
						}
					}
				},
				{
					"id": 605,
					"name": "mentions",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of users mentioned in the message."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/interfaces/ApiMessage.ts",
							"line": 102,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiMessage.ts#L102"
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 711,
							"name": "ApiUser",
							"package": "solace.js"
						}
					}
				},
				{
					"id": 606,
					"name": "message_reference",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Information about a referenced message, if any."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/interfaces/ApiMessage.ts",
							"line": 107,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiMessage.ts#L107"
						}
					],
					"type": {
						"type": "reference",
						"target": 620,
						"name": "ApiMessageChannelMention",
						"package": "solace.js"
					}
				},
				{
					"id": 607,
					"name": "nonce",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A nonce value that can be used for verification or tracking purposes."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/interfaces/ApiMessage.ts",
							"line": 112,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiMessage.ts#L112"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "string"
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 608,
					"name": "pinned",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Indicates whether the message is pinned in the channel."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/interfaces/ApiMessage.ts",
							"line": 117,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiMessage.ts#L117"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 609,
					"name": "position",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The position of the message in the channel, if applicable."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/interfaces/ApiMessage.ts",
							"line": 122,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiMessage.ts#L122"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 610,
					"name": "reactions",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of reactions (e.g., emojis) associated with the message, if any."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/interfaces/ApiMessage.ts",
							"line": 127,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiMessage.ts#L127"
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 625,
							"name": "ApiReaction",
							"package": "solace.js"
						}
					}
				},
				{
					"id": 611,
					"name": "referenced_message",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Information about a message that is being replied to, if any."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/interfaces/ApiMessage.ts",
							"line": 132,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiMessage.ts#L132"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "reference",
								"target": 588,
								"name": "ApiMessage",
								"package": "solace.js"
							}
						]
					}
				},
				{
					"id": 612,
					"name": "role_subscription_data",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Data related to role subscription (not a standard property)."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/interfaces/ApiMessage.ts",
							"line": 137,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiMessage.ts#L137"
						}
					],
					"type": {
						"type": "reference",
						"target": 660,
						"name": "ApiRoleSubscriptionData",
						"package": "solace.js"
					}
				},
				{
					"id": 613,
					"name": "sticker_items",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of sticker items included in the message, if any."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/interfaces/ApiMessage.ts",
							"line": 142,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiMessage.ts#L142"
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 678,
							"name": "ApiStickerItem",
							"package": "solace.js"
						}
					}
				},
				{
					"id": 614,
					"name": "stickers",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of stickers included in the message, if any."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/interfaces/ApiMessage.ts",
							"line": 147,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiMessage.ts#L147"
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 665,
							"name": "ApiSticker",
							"package": "solace.js"
						}
					}
				},
				{
					"id": 615,
					"name": "thread",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Information about a thread associated with the message, if any."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/interfaces/ApiMessage.ts",
							"line": 152,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiMessage.ts#L152"
						}
					],
					"type": {
						"type": "reference",
						"target": 693,
						"name": "ApiThreadChannel",
						"package": "solace.js"
					}
				},
				{
					"id": 616,
					"name": "timestamp",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The timestamp when the message was sent."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/interfaces/ApiMessage.ts",
							"line": 157,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiMessage.ts#L157"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 617,
					"name": "tts",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Indicates whether the message is a text-to-speech (TTS) message."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/interfaces/ApiMessage.ts",
							"line": 162,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiMessage.ts#L162"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 618,
					"name": "type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The type of the message (e.g., DEFAULT, RECIPIENT_ADD, RECIPIENT_REMOVE\tCALL, etc.)."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/interfaces/ApiMessage.ts",
							"line": 167,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiMessage.ts#L167"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 619,
					"name": "webhook_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the webhook that sent the message, if applicable."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/interfaces/ApiMessage.ts",
							"line": 172,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiMessage.ts#L172"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						589,
						590,
						591,
						592,
						593,
						594,
						595,
						596,
						597,
						598,
						599,
						600,
						601,
						602,
						603,
						604,
						605,
						606,
						607,
						608,
						609,
						610,
						611,
						612,
						613,
						614,
						615,
						616,
						617,
						618,
						619
					]
				}
			],
			"sources": [
				{
					"fileName": "src/interfaces/ApiMessage.ts",
					"line": 18,
					"character": 17,
					"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiMessage.ts#L18"
				}
			]
		},
		{
			"id": 620,
			"name": "ApiMessageChannelMention",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Interface defining the structure of a mentioned channel."
					}
				]
			},
			"children": [
				{
					"id": 622,
					"name": "guild_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the guild (server) where the mentioned channel is located."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/interfaces/ApiMessage.ts",
							"line": 187,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiMessage.ts#L187"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 621,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The unique identifier of the mentioned channel."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/interfaces/ApiMessage.ts",
							"line": 182,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiMessage.ts#L182"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 624,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The name of the mentioned channel."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/interfaces/ApiMessage.ts",
							"line": 197,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiMessage.ts#L197"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 623,
					"name": "type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The type of the mentioned channel."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/interfaces/ApiMessage.ts",
							"line": 192,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiMessage.ts#L192"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						622,
						621,
						624,
						623
					]
				}
			],
			"sources": [
				{
					"fileName": "src/interfaces/ApiMessage.ts",
					"line": 178,
					"character": 17,
					"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiMessage.ts#L178"
				}
			]
		},
		{
			"id": 625,
			"name": "ApiReaction",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Represents the structure of a reaction to a message."
					}
				]
			},
			"children": [
				{
					"id": 631,
					"name": "burst_colors",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of burst colors associated with this reaction."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/interfaces/ApiReaction.ts",
							"line": 35,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiReaction.ts#L35"
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "intrinsic",
							"name": "number"
						}
					}
				},
				{
					"id": 626,
					"name": "count",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The total count of this reaction."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/interfaces/ApiReaction.ts",
							"line": 10,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiReaction.ts#L10"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 627,
					"name": "count_details",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Details about the count of reactions, including burst and normal counts."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/interfaces/ApiReaction.ts",
							"line": 15,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiReaction.ts#L15"
						}
					],
					"type": {
						"type": "reference",
						"target": 632,
						"name": "ApiReactionCountDetails",
						"package": "solace.js"
					}
				},
				{
					"id": 630,
					"name": "emoji",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Information about the emoji used in this reaction."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/interfaces/ApiReaction.ts",
							"line": 30,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiReaction.ts#L30"
						}
					],
					"type": {
						"type": "reference",
						"target": 461,
						"name": "ApiEmoji",
						"package": "solace.js"
					}
				},
				{
					"id": 628,
					"name": "me",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Indicates whether the current user (the bot or user making the API request) has reacted with this emoji."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/interfaces/ApiReaction.ts",
							"line": 20,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiReaction.ts#L20"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 629,
					"name": "me_burst",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Indicates whether the reaction was added in burst mode."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/interfaces/ApiReaction.ts",
							"line": 25,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiReaction.ts#L25"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						631,
						626,
						627,
						630,
						628,
						629
					]
				}
			],
			"sources": [
				{
					"fileName": "src/interfaces/ApiReaction.ts",
					"line": 6,
					"character": 17,
					"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiReaction.ts#L6"
				}
			]
		},
		{
			"id": 632,
			"name": "ApiReactionCountDetails",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Represents the count details of a reaction."
					}
				]
			},
			"children": [
				{
					"id": 633,
					"name": "burst",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The burst count of this reaction."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/interfaces/ApiReaction.ts",
							"line": 45,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiReaction.ts#L45"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 634,
					"name": "normal",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The normal count of this reaction."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/interfaces/ApiReaction.ts",
							"line": 50,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiReaction.ts#L50"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						633,
						634
					]
				}
			],
			"sources": [
				{
					"fileName": "src/interfaces/ApiReaction.ts",
					"line": 41,
					"character": 17,
					"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiReaction.ts#L41"
				}
			]
		},
		{
			"id": 635,
			"name": "ApiRecipientsEntity",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Represents the structure of a user recipient entity."
					}
				]
			},
			"children": [
				{
					"id": 636,
					"name": "avatar",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The avatar URL of the user."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/interfaces/ApiRecipientsEntity.ts",
							"line": 8,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiRecipientsEntity.ts#L8"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 637,
					"name": "discriminator",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The discriminator of the user (a four-digit identifier following the username)."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/interfaces/ApiRecipientsEntity.ts",
							"line": 13,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiRecipientsEntity.ts#L13"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 638,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The unique identifier (ID) of the user."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/interfaces/ApiRecipientsEntity.ts",
							"line": 18,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiRecipientsEntity.ts#L18"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 639,
					"name": "username",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The username of the user."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/interfaces/ApiRecipientsEntity.ts",
							"line": 23,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiRecipientsEntity.ts#L23"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						636,
						637,
						638,
						639
					]
				}
			],
			"sources": [
				{
					"fileName": "src/interfaces/ApiRecipientsEntity.ts",
					"line": 4,
					"character": 17,
					"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiRecipientsEntity.ts#L4"
				}
			]
		},
		{
			"id": 640,
			"name": "ApiRole",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Represents the structure of a role."
					}
				]
			},
			"children": [
				{
					"id": 641,
					"name": "color",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The color of the role."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/interfaces/ApiRole.ts",
							"line": 8,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiRole.ts#L8"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 642,
					"name": "flags",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Flags associated with the role."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/interfaces/ApiRole.ts",
							"line": 13,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiRole.ts#L13"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 643,
					"name": "hoist",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether the role is hoisted (displayed separately in the member list)."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/interfaces/ApiRole.ts",
							"line": 18,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiRole.ts#L18"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 644,
					"name": "icon",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The icon URL of the role."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/interfaces/ApiRole.ts",
							"line": 23,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiRole.ts#L23"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 645,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The unique identifier (ID) of the role."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/interfaces/ApiRole.ts",
							"line": 28,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiRole.ts#L28"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 646,
					"name": "managed",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Indicates whether the role is managed by an integration or bot."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/interfaces/ApiRole.ts",
							"line": 33,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiRole.ts#L33"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 647,
					"name": "mentionable",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Indicates whether the role is mentionable by members."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/interfaces/ApiRole.ts",
							"line": 38,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiRole.ts#L38"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 648,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The name of the role."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/interfaces/ApiRole.ts",
							"line": 43,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiRole.ts#L43"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 649,
					"name": "permissions",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The permissions granted by the role."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/interfaces/ApiRole.ts",
							"line": 48,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiRole.ts#L48"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 650,
					"name": "position",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The position of the role in the hierarchy."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/interfaces/ApiRole.ts",
							"line": 53,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiRole.ts#L53"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 651,
					"name": "tags",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Additional tags associated with the role."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/interfaces/ApiRole.ts",
							"line": 58,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiRole.ts#L58"
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 653,
							"name": "ApiRoleTag",
							"package": "solace.js"
						}
					}
				},
				{
					"id": 652,
					"name": "unicode_emoji",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The Unicode emoji associated with the role."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/interfaces/ApiRole.ts",
							"line": 63,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiRole.ts#L63"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						641,
						642,
						643,
						644,
						645,
						646,
						647,
						648,
						649,
						650,
						651,
						652
					]
				}
			],
			"sources": [
				{
					"fileName": "src/interfaces/ApiRole.ts",
					"line": 4,
					"character": 17,
					"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiRole.ts#L4"
				}
			]
		},
		{
			"id": 660,
			"name": "ApiRoleSubscriptionData",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Represents the structure of subscription data associated with a role."
					}
				]
			},
			"children": [
				{
					"id": 661,
					"name": "is_renewal",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Indicates whether the role subscription is a renewal."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/interfaces/ApiRole.ts",
							"line": 108,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiRole.ts#L108"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 662,
					"name": "role_subscription_listing_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The role subscription listing ID."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/interfaces/ApiRole.ts",
							"line": 113,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiRole.ts#L113"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 663,
					"name": "tier_name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The name of the subscription tier."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/interfaces/ApiRole.ts",
							"line": 118,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiRole.ts#L118"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 664,
					"name": "total_months_subscribed",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The total number of months subscribed to the role."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/interfaces/ApiRole.ts",
							"line": 123,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiRole.ts#L123"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						661,
						662,
						663,
						664
					]
				}
			],
			"sources": [
				{
					"fileName": "src/interfaces/ApiRole.ts",
					"line": 104,
					"character": 17,
					"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiRole.ts#L104"
				}
			]
		},
		{
			"id": 653,
			"name": "ApiRoleTag",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Represents the structure of additional tags associated with a role."
					}
				]
			},
			"children": [
				{
					"id": 654,
					"name": "available_for_purchase",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether the role is available for purchase."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/interfaces/ApiRole.ts",
							"line": 73,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiRole.ts#L73"
						}
					],
					"type": {
						"type": "literal",
						"value": null
					}
				},
				{
					"id": 655,
					"name": "bot_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the bot associated with the role (if applicable)."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/interfaces/ApiRole.ts",
							"line": 78,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiRole.ts#L78"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 656,
					"name": "guild_connections",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Guild connections associated with the role."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/interfaces/ApiRole.ts",
							"line": 83,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiRole.ts#L83"
						}
					],
					"type": {
						"type": "literal",
						"value": null
					}
				},
				{
					"id": 657,
					"name": "integration_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The integration ID associated with the role (if applicable)."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/interfaces/ApiRole.ts",
							"line": 88,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiRole.ts#L88"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 658,
					"name": "premium_subscriber",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Whether the role is associated with a premium subscriber."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/interfaces/ApiRole.ts",
							"line": 93,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiRole.ts#L93"
						}
					],
					"type": {
						"type": "literal",
						"value": null
					}
				},
				{
					"id": 659,
					"name": "subscription_listing_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The subscription listing ID for the role (if applicable)."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/interfaces/ApiRole.ts",
							"line": 98,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiRole.ts#L98"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						654,
						655,
						656,
						657,
						658,
						659
					]
				}
			],
			"sources": [
				{
					"fileName": "src/interfaces/ApiRole.ts",
					"line": 69,
					"character": 17,
					"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiRole.ts#L69"
				}
			]
		},
		{
			"id": 665,
			"name": "ApiSticker",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Represents the structure of a sticker."
					}
				]
			},
			"children": [
				{
					"id": 666,
					"name": "asset",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The asset (image or animation) of the sticker."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/interfaces/ApiSticker.ts",
							"line": 10,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiSticker.ts#L10"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 667,
					"name": "available",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Indicates whether the sticker is available."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/interfaces/ApiSticker.ts",
							"line": 15,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiSticker.ts#L15"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 668,
					"name": "description",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The description of the sticker."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/interfaces/ApiSticker.ts",
							"line": 20,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiSticker.ts#L20"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 669,
					"name": "format_type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The format type of the sticker."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/interfaces/ApiSticker.ts",
							"line": 25,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiSticker.ts#L25"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 670,
					"name": "guild_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the guild that the sticker belongs to (if applicable)."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/interfaces/ApiSticker.ts",
							"line": 30,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiSticker.ts#L30"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 671,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The unique identifier (ID) of the sticker."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/interfaces/ApiSticker.ts",
							"line": 35,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiSticker.ts#L35"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 672,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The name of the sticker."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/interfaces/ApiSticker.ts",
							"line": 40,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiSticker.ts#L40"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 673,
					"name": "pack_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the sticker pack that this sticker belongs to (if applicable)."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/interfaces/ApiSticker.ts",
							"line": 45,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiSticker.ts#L45"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 674,
					"name": "sort_value",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The sort value of the sticker."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/interfaces/ApiSticker.ts",
							"line": 50,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiSticker.ts#L50"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 675,
					"name": "tags",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Tags associated with the sticker."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/interfaces/ApiSticker.ts",
							"line": 55,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiSticker.ts#L55"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 676,
					"name": "type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The type of the sticker."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/interfaces/ApiSticker.ts",
							"line": 60,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiSticker.ts#L60"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 677,
					"name": "user",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Information about the user who created the sticker (if applicable)."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/interfaces/ApiSticker.ts",
							"line": 65,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiSticker.ts#L65"
						}
					],
					"type": {
						"type": "reference",
						"target": 711,
						"name": "ApiUser",
						"package": "solace.js"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						666,
						667,
						668,
						669,
						670,
						671,
						672,
						673,
						674,
						675,
						676,
						677
					]
				}
			],
			"sources": [
				{
					"fileName": "src/interfaces/ApiSticker.ts",
					"line": 6,
					"character": 17,
					"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiSticker.ts#L6"
				}
			]
		},
		{
			"id": 678,
			"name": "ApiStickerItem",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Represents the structure of a sticker item."
					}
				]
			},
			"children": [
				{
					"id": 679,
					"name": "format_type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The format type of the sticker item."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/interfaces/ApiSticker.ts",
							"line": 75,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiSticker.ts#L75"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 680,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The unique identifier (ID) of the sticker item."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/interfaces/ApiSticker.ts",
							"line": 80,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiSticker.ts#L80"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 681,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The name of the sticker item."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/interfaces/ApiSticker.ts",
							"line": 85,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiSticker.ts#L85"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						679,
						680,
						681
					]
				}
			],
			"sources": [
				{
					"fileName": "src/interfaces/ApiSticker.ts",
					"line": 71,
					"character": 17,
					"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiSticker.ts#L71"
				}
			]
		},
		{
			"id": 682,
			"name": "ApiTeam",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Represents the structure of a team."
					}
				]
			},
			"children": [
				{
					"id": 683,
					"name": "icon",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The icon of the team."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/interfaces/ApiTeam.ts",
							"line": 10,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiTeam.ts#L10"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 684,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The unique identifier (ID) of the team."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/interfaces/ApiTeam.ts",
							"line": 15,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiTeam.ts#L15"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 685,
					"name": "members",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "An array of team members."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/interfaces/ApiTeam.ts",
							"line": 20,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiTeam.ts#L20"
						}
					],
					"type": {
						"type": "array",
						"elementType": {
							"type": "reference",
							"target": 688,
							"name": "ApiTeamMember",
							"package": "solace.js"
						}
					}
				},
				{
					"id": 686,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The name of the team."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/interfaces/ApiTeam.ts",
							"line": 25,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiTeam.ts#L25"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 687,
					"name": "owner_user_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The unique identifier (ID) of the owner user of the team."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/interfaces/ApiTeam.ts",
							"line": 30,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiTeam.ts#L30"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						683,
						684,
						685,
						686,
						687
					]
				}
			],
			"sources": [
				{
					"fileName": "src/interfaces/ApiTeam.ts",
					"line": 6,
					"character": 17,
					"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiTeam.ts#L6"
				}
			]
		},
		{
			"id": 688,
			"name": "ApiTeamMember",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Represents the structure of a team member."
					}
				]
			},
			"children": [
				{
					"id": 689,
					"name": "membership_state",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The membership state of the team member."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/interfaces/ApiTeam.ts",
							"line": 40,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiTeam.ts#L40"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 690,
					"name": "role",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The role of the team member."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/interfaces/ApiTeam.ts",
							"line": 45,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiTeam.ts#L45"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 691,
					"name": "team_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The unique identifier (ID) of the team to which the member belongs."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/interfaces/ApiTeam.ts",
							"line": 50,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiTeam.ts#L50"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 692,
					"name": "user",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Information about the user who is a member of the team."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/interfaces/ApiTeam.ts",
							"line": 55,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiTeam.ts#L55"
						}
					],
					"type": {
						"type": "reference",
						"target": 711,
						"name": "ApiUser",
						"package": "solace.js"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						689,
						690,
						691,
						692
					]
				}
			],
			"sources": [
				{
					"fileName": "src/interfaces/ApiTeam.ts",
					"line": 36,
					"character": 17,
					"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiTeam.ts#L36"
				}
			]
		},
		{
			"id": 693,
			"name": "ApiThreadChannel",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Represents the structure of a thread channel, extending the base "
					},
					{
						"kind": "code",
						"text": "`ApiChannel`"
					},
					{
						"kind": "text",
						"text": "."
					}
				]
			},
			"children": [
				{
					"id": 694,
					"name": "guild_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The unique identifier (ID) of the guild to which the thread belongs."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/interfaces/ApiThreadChannel.ts",
							"line": 10,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiThreadChannel.ts#L10"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 704,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The unique identifier of the channel."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/interfaces/ApiChannel.ts",
							"line": 8,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiChannel.ts#L8"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 400,
						"name": "ApiChannel.id"
					}
				},
				{
					"id": 695,
					"name": "last_message_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The ID of the last message in the thread, or "
							},
							{
								"kind": "code",
								"text": "`null`"
							},
							{
								"kind": "text",
								"text": " if no message exists."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/interfaces/ApiThreadChannel.ts",
							"line": 15,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiThreadChannel.ts#L15"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 696,
					"name": "member_count",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The number of members in the thread."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/interfaces/ApiThreadChannel.ts",
							"line": 20,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiThreadChannel.ts#L20"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 697,
					"name": "message_count",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The total number of messages in the thread."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/interfaces/ApiThreadChannel.ts",
							"line": 25,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiThreadChannel.ts#L25"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 698,
					"name": "name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The name of the thread, or "
							},
							{
								"kind": "code",
								"text": "`null`"
							},
							{
								"kind": "text",
								"text": " if not named."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/interfaces/ApiThreadChannel.ts",
							"line": 30,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiThreadChannel.ts#L30"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 699,
					"name": "owner_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The unique identifier (ID) of the user who owns the thread."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/interfaces/ApiThreadChannel.ts",
							"line": 35,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiThreadChannel.ts#L35"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 700,
					"name": "parent_id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The unique identifier (ID) of the parent message of the thread, or "
							},
							{
								"kind": "code",
								"text": "`null`"
							},
							{
								"kind": "text",
								"text": " if not a sub-thread."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/interfaces/ApiThreadChannel.ts",
							"line": 40,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiThreadChannel.ts#L40"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 701,
					"name": "rate_limit_per_user",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The rate limit per user in the thread."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/interfaces/ApiThreadChannel.ts",
							"line": 45,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiThreadChannel.ts#L45"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 702,
					"name": "thread_metadata",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Metadata about the thread."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/interfaces/ApiThreadChannel.ts",
							"line": 50,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiThreadChannel.ts#L50"
						}
					],
					"type": {
						"type": "reference",
						"target": 706,
						"name": "ApiThreadMetadata",
						"package": "solace.js"
					}
				},
				{
					"id": 703,
					"name": "total_message_sent",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The total number of messages sent in the thread."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/interfaces/ApiThreadChannel.ts",
							"line": 55,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiThreadChannel.ts#L55"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 705,
					"name": "type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The type of the channel, represented as a number."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/interfaces/ApiChannel.ts",
							"line": 13,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiChannel.ts#L13"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					},
					"inheritedFrom": {
						"type": "reference",
						"target": 401,
						"name": "ApiChannel.type"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						694,
						704,
						695,
						696,
						697,
						698,
						699,
						700,
						701,
						702,
						703,
						705
					]
				}
			],
			"sources": [
				{
					"fileName": "src/interfaces/ApiThreadChannel.ts",
					"line": 6,
					"character": 17,
					"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiThreadChannel.ts#L6"
				}
			],
			"extendedTypes": [
				{
					"type": "reference",
					"target": 399,
					"name": "ApiChannel",
					"package": "solace.js"
				}
			]
		},
		{
			"id": 706,
			"name": "ApiThreadMetadata",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Represents the structure of metadata about a thread channel."
					}
				]
			},
			"children": [
				{
					"id": 707,
					"name": "archive_timestamp",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The timestamp when the thread was archived."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/interfaces/ApiThreadChannel.ts",
							"line": 65,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiThreadChannel.ts#L65"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 708,
					"name": "archived",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Indicates whether the thread is archived."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/interfaces/ApiThreadChannel.ts",
							"line": 70,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiThreadChannel.ts#L70"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 709,
					"name": "auto_archive_duration",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The duration (in minutes) for auto-archiving the thread."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/interfaces/ApiThreadChannel.ts",
							"line": 75,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiThreadChannel.ts#L75"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 710,
					"name": "locked",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Indicates whether the thread is locked."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/interfaces/ApiThreadChannel.ts",
							"line": 80,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiThreadChannel.ts#L80"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						707,
						708,
						709,
						710
					]
				}
			],
			"sources": [
				{
					"fileName": "src/interfaces/ApiThreadChannel.ts",
					"line": 61,
					"character": 17,
					"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiThreadChannel.ts#L61"
				}
			]
		},
		{
			"id": 711,
			"name": "ApiUser",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Interface defining the structure of user data."
					}
				]
			},
			"children": [
				{
					"id": 712,
					"name": "accent_color",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The accent color associated with the user, if any."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/interfaces/ApiUser.ts",
							"line": 8,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiUser.ts#L8"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "number"
							}
						]
					}
				},
				{
					"id": 713,
					"name": "avatar",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The URL of the user's avatar image, or null if not available."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/interfaces/ApiUser.ts",
							"line": 13,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiUser.ts#L13"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 714,
					"name": "avatar_decoration",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "A decoration applied to the user's avatar, if any."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/interfaces/ApiUser.ts",
							"line": 18,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiUser.ts#L18"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 715,
					"name": "banner",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The URL of the user's banner image, if any."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/interfaces/ApiUser.ts",
							"line": 23,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiUser.ts#L23"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 716,
					"name": "bot",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Indicates whether the user is a bot."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/interfaces/ApiUser.ts",
							"line": 28,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiUser.ts#L28"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 717,
					"name": "discriminator",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The discriminator, a unique identifier within the user's username."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/interfaces/ApiUser.ts",
							"line": 33,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiUser.ts#L33"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 718,
					"name": "email",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The user's email address, if available."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/interfaces/ApiUser.ts",
							"line": 38,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiUser.ts#L38"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 719,
					"name": "flags",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Flags associated with the user, if any."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/interfaces/ApiUser.ts",
							"line": 43,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiUser.ts#L43"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 720,
					"name": "global_name",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The global name of the user, if any."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/interfaces/ApiUser.ts",
							"line": 48,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiUser.ts#L48"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "literal",
								"value": null
							},
							{
								"type": "intrinsic",
								"name": "string"
							}
						]
					}
				},
				{
					"id": 721,
					"name": "id",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The unique identifier of the user."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/interfaces/ApiUser.ts",
							"line": 53,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiUser.ts#L53"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 722,
					"name": "locale",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The user's preferred locale, such as language and region."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/interfaces/ApiUser.ts",
							"line": 58,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiUser.ts#L58"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 723,
					"name": "mfa_enabled",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Indicates whether multi-factor authentication (MFA) is enabled for the user, if applicable."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/interfaces/ApiUser.ts",
							"line": 63,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiUser.ts#L63"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 724,
					"name": "premium_type",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The type of premium subscription the user has, if any."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/interfaces/ApiUser.ts",
							"line": 68,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiUser.ts#L68"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 725,
					"name": "public_flags",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Flags that indicate various user attributes and settings."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/interfaces/ApiUser.ts",
							"line": 73,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiUser.ts#L73"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				},
				{
					"id": 726,
					"name": "system",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Indicates whether the user is a system account."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/interfaces/ApiUser.ts",
							"line": 78,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiUser.ts#L78"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				},
				{
					"id": 727,
					"name": "username",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The username of the user."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/interfaces/ApiUser.ts",
							"line": 83,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiUser.ts#L83"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				},
				{
					"id": 728,
					"name": "verified",
					"variant": "declaration",
					"kind": 1024,
					"flags": {
						"isOptional": true
					},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Indicates whether the user's account is verified."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/interfaces/ApiUser.ts",
							"line": 88,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiUser.ts#L88"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "boolean"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						712,
						713,
						714,
						715,
						716,
						717,
						718,
						719,
						720,
						721,
						722,
						723,
						724,
						725,
						726,
						727,
						728
					]
				}
			],
			"sources": [
				{
					"fileName": "src/interfaces/ApiUser.ts",
					"line": 4,
					"character": 17,
					"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiUser.ts#L4"
				}
			]
		},
		{
			"id": 729,
			"name": "ClientEvents",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Interface defining the structure of client events and their associated argument types."
					}
				]
			},
			"children": [
				{
					"id": 731,
					"name": "messageCreate",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Represents the \"messageCreate\" event, which is emitted when a new message is created.\r\n messageCreate"
							}
						],
						"blockTags": [
							{
								"tag": "@param",
								"name": "client",
								"content": [
									{
										"kind": "text",
										"text": "The Discord client instance that emitted the event."
									}
								]
							},
							{
								"tag": "@param",
								"name": "message",
								"content": [
									{
										"kind": "text",
										"text": "The message object associated with the event."
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "src/interfaces/ClientEvents.ts",
							"line": 21,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ClientEvents.ts#L21"
						}
					],
					"type": {
						"type": "tuple",
						"elements": [
							{
								"type": "namedTupleMember",
								"name": "client",
								"isOptional": false,
								"element": {
									"type": "reference",
									"target": 1,
									"name": "Client",
									"package": "solace.js"
								}
							},
							{
								"type": "namedTupleMember",
								"name": "message",
								"isOptional": false,
								"element": {
									"type": "intrinsic",
									"name": "any"
								}
							}
						]
					}
				},
				{
					"id": 730,
					"name": "ready",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "Represents the \"ready\" event, which is emitted when the client is ready.\r\n ready"
							}
						],
						"blockTags": [
							{
								"tag": "@param",
								"name": "client",
								"content": [
									{
										"kind": "text",
										"text": "The Discord client instance that emitted the event."
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "src/interfaces/ClientEvents.ts",
							"line": 13,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ClientEvents.ts#L13"
						}
					],
					"type": {
						"type": "tuple",
						"elements": [
							{
								"type": "namedTupleMember",
								"name": "client",
								"isOptional": false,
								"element": {
									"type": "reference",
									"target": 1,
									"name": "Client",
									"package": "solace.js"
								}
							}
						]
					}
				}
			],
			"groups": [
				{
					"title": "Events",
					"children": [
						731,
						730
					]
				}
			],
			"sources": [
				{
					"fileName": "src/interfaces/ClientEvents.ts",
					"line": 6,
					"character": 17,
					"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ClientEvents.ts#L6"
				}
			]
		},
		{
			"id": 732,
			"name": "ClientOptions",
			"variant": "declaration",
			"kind": 256,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Interface defining the structure of client options required for initializing a Discord client."
					}
				]
			},
			"children": [
				{
					"id": 734,
					"name": "intents",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The gateway intents specifying the events the bot is interested in."
							}
						],
						"blockTags": [
							{
								"tag": "@see",
								"content": [
									{
										"kind": "inline-tag",
										"tag": "@link",
										"text": "GatewayIntents",
										"target": 268,
										"tsLinkText": ""
									},
									{
										"kind": "text",
										"text": " for predefined intent values."
									}
								]
							}
						]
					},
					"sources": [
						{
							"fileName": "src/interfaces/ClientOptions.ts",
							"line": 19,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ClientOptions.ts#L19"
						}
					],
					"type": {
						"type": "union",
						"types": [
							{
								"type": "intrinsic",
								"name": "number"
							},
							{
								"type": "reference",
								"target": 268,
								"name": "GatewayIntents",
								"package": "solace.js"
							},
							{
								"type": "array",
								"elementType": {
									"type": "reference",
									"target": 268,
									"name": "GatewayIntents",
									"package": "solace.js"
								}
							}
						]
					}
				},
				{
					"id": 733,
					"name": "token",
					"variant": "declaration",
					"kind": 1024,
					"flags": {},
					"comment": {
						"summary": [
							{
								"kind": "text",
								"text": "The Discord bot token used for authentication and authorization."
							}
						]
					},
					"sources": [
						{
							"fileName": "src/interfaces/ClientOptions.ts",
							"line": 12,
							"character": 4,
							"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ClientOptions.ts#L12"
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "string"
					}
				}
			],
			"groups": [
				{
					"title": "Properties",
					"children": [
						734,
						733
					]
				}
			],
			"sources": [
				{
					"fileName": "src/interfaces/ClientOptions.ts",
					"line": 6,
					"character": 17,
					"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ClientOptions.ts#L6"
				}
			]
		},
		{
			"id": 587,
			"name": "ApiInteractionType",
			"variant": "declaration",
			"kind": 2097152,
			"flags": {},
			"comment": {
				"summary": [
					{
						"kind": "text",
						"text": "Represents the possible types of an interaction."
					}
				]
			},
			"sources": [
				{
					"fileName": "src/interfaces/ApiInteraction.ts",
					"line": 37,
					"character": 12,
					"url": "https://github.com/solacejs/solace.js/blob/3f68f0f/src/interfaces/ApiInteraction.ts#L37"
				}
			],
			"type": {
				"type": "union",
				"types": [
					{
						"type": "literal",
						"value": 1
					},
					{
						"type": "literal",
						"value": 2
					},
					{
						"type": "literal",
						"value": 3
					},
					{
						"type": "literal",
						"value": 4
					},
					{
						"type": "literal",
						"value": 5
					}
				]
			}
		}
	],
	"groups": [
		{
			"title": "Classes",
			"children": [
				735,
				741,
				767,
				773,
				790,
				1,
				263,
				796,
				850,
				858,
				813,
				820,
				844,
				828,
				836,
				865,
				322,
				1133,
				268,
				877,
				924,
				940,
				949,
				293,
				333,
				984,
				994,
				349,
				1008,
				1000,
				1024,
				1144,
				307,
				1034,
				1050,
				1057,
				1066,
				1074,
				1090,
				1098,
				129,
				1125,
				1119
			]
		},
		{
			"title": "Interfaces",
			"children": [
				356,
				359,
				382,
				385,
				399,
				402,
				411,
				416,
				452,
				457,
				430,
				434,
				449,
				439,
				444,
				461,
				470,
				478,
				530,
				542,
				555,
				568,
				522,
				525,
				581,
				588,
				620,
				625,
				632,
				635,
				640,
				660,
				653,
				665,
				678,
				682,
				688,
				693,
				706,
				711,
				729,
				732
			]
		},
		{
			"title": "Type Aliases",
			"children": [
				587
			]
		}
	],
	"packageName": "solace.js",
	"packageVersion": "0.0.2",
	"readme": [
		{
			"kind": "text",
			"text": "# Solace.js\r\n\r\nSolace.js is an alternative to eris and discord.js, a nodejs wrapper for interfacing with discord. The goal of solace.js is to make discord bot development faster. The project structure is sort of similar to discord.js making it easy to move to. With solace.js you can get work done in a faster way.\r\n\r\n## Installation\r\n"
		},
		{
			"kind": "code",
			"text": "```bash\r\nnpm install solace.js\r\nyarn add solace.js\r\npnpm add solace.js\r\n```"
		},
		{
			"kind": "text",
			"text": "\r\n\r\n## Usage\r\n"
		},
		{
			"kind": "code",
			"text": "```ts\r\nimport { Client, Event, GatewayIntents, Registry, SolaceIntents } from \"solace.js\";\r\nimport ReadyEvent from \"./events/ReadyEvent\";\r\n\r\n/**\r\n * You can use intent groups such as SolaceIntents or just use an array of GatewayIntents\r\n**/\r\nconst client = new Client({ token: \"BOT_TOKEN\", intents: SolaceIntents.GENERAL });\r\n\r\nconst events: Event[] = [];\r\n\r\nRegistry.registerEvents(client, new ReadyEvent());\r\n\r\nclient.login();\r\n```"
		},
		{
			"kind": "text",
			"text": "\r\n"
		},
		{
			"kind": "code",
			"text": "`Ready Event example`"
		},
		{
			"kind": "text",
			"text": "\r\n"
		},
		{
			"kind": "code",
			"text": "```ts\r\nimport { Client, Event } from \"solace.js\";\r\n\r\nexport default class ReadyEvent extends Event {\r\n\r\n    constructor() {\r\n        super(\"ready\", true);\r\n    }\r\n\r\n    public async execute(client: Client) {\r\n        console.log(client.user!.username, \"is online!\");\r\n    }\r\n}\r\n```"
		}
	],
	"symbolIdMap": {
		"0": {
			"sourceFileName": "src/index.ts",
			"qualifiedName": ""
		},
		"1": {
			"sourceFileName": "src/client/Client.ts",
			"qualifiedName": "Client"
		},
		"2": {
			"sourceFileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
			"qualifiedName": "EventEmitter.once"
		},
		"3": {
			"sourceFileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
			"qualifiedName": "EventEmitter.once"
		},
		"4": {
			"sourceFileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
			"qualifiedName": "emitter"
		},
		"5": {
			"sourceFileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
			"qualifiedName": "eventName"
		},
		"6": {
			"sourceFileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
			"qualifiedName": "options"
		},
		"7": {
			"sourceFileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
			"qualifiedName": "EventEmitter.once"
		},
		"8": {
			"sourceFileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
			"qualifiedName": "emitter"
		},
		"9": {
			"sourceFileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
			"qualifiedName": "eventName"
		},
		"10": {
			"sourceFileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
			"qualifiedName": "options"
		},
		"11": {
			"sourceFileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
			"qualifiedName": "EventEmitter.on"
		},
		"12": {
			"sourceFileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
			"qualifiedName": "EventEmitter.on"
		},
		"13": {
			"sourceFileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
			"qualifiedName": "emitter"
		},
		"14": {
			"sourceFileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
			"qualifiedName": "eventName"
		},
		"15": {
			"sourceFileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
			"qualifiedName": "options"
		},
		"16": {
			"sourceFileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
			"qualifiedName": "EventEmitter.listenerCount"
		},
		"17": {
			"sourceFileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
			"qualifiedName": "EventEmitter.listenerCount"
		},
		"18": {
			"sourceFileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
			"qualifiedName": "emitter"
		},
		"19": {
			"sourceFileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
			"qualifiedName": "eventName"
		},
		"20": {
			"sourceFileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
			"qualifiedName": "EventEmitter.getEventListeners"
		},
		"21": {
			"sourceFileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
			"qualifiedName": "EventEmitter.getEventListeners"
		},
		"22": {
			"sourceFileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
			"qualifiedName": "emitter"
		},
		"23": {
			"sourceFileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
			"qualifiedName": "name"
		},
		"24": {
			"sourceFileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
			"qualifiedName": "EventEmitter.getMaxListeners"
		},
		"25": {
			"sourceFileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
			"qualifiedName": "EventEmitter.getMaxListeners"
		},
		"26": {
			"sourceFileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
			"qualifiedName": "emitter"
		},
		"27": {
			"sourceFileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
			"qualifiedName": "EventEmitter.setMaxListeners"
		},
		"28": {
			"sourceFileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
			"qualifiedName": "EventEmitter.setMaxListeners"
		},
		"29": {
			"sourceFileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
			"qualifiedName": "n"
		},
		"30": {
			"sourceFileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
			"qualifiedName": "eventTargets"
		},
		"31": {
			"sourceFileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
			"qualifiedName": "EventEmitter.addAbortListener"
		},
		"32": {
			"sourceFileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
			"qualifiedName": "EventEmitter.addAbortListener"
		},
		"33": {
			"sourceFileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
			"qualifiedName": "signal"
		},
		"34": {
			"sourceFileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
			"qualifiedName": "resource"
		},
		"35": {
			"sourceFileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
			"qualifiedName": "__type"
		},
		"36": {
			"sourceFileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
			"qualifiedName": "__type"
		},
		"37": {
			"sourceFileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
			"qualifiedName": "event"
		},
		"38": {
			"sourceFileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
			"qualifiedName": "EventEmitter.errorMonitor"
		},
		"39": {
			"sourceFileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
			"qualifiedName": "EventEmitter.captureRejectionSymbol"
		},
		"40": {
			"sourceFileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
			"qualifiedName": "EventEmitter.captureRejections"
		},
		"41": {
			"sourceFileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
			"qualifiedName": "EventEmitter.defaultMaxListeners"
		},
		"42": {
			"sourceFileName": "src/client/Client.ts",
			"qualifiedName": "Client.__constructor"
		},
		"43": {
			"sourceFileName": "src/client/Client.ts",
			"qualifiedName": "Client"
		},
		"44": {
			"sourceFileName": "src/client/Client.ts",
			"qualifiedName": "options"
		},
		"45": {
			"sourceFileName": "src/client/Client.ts",
			"qualifiedName": "Client.ws"
		},
		"46": {
			"sourceFileName": "src/client/Client.ts",
			"qualifiedName": "Client.user"
		},
		"47": {
			"sourceFileName": "src/client/Client.ts",
			"qualifiedName": "Client.options"
		},
		"48": {
			"sourceFileName": "src/client/Client.ts",
			"qualifiedName": "Client.once"
		},
		"49": {
			"sourceFileName": "src/client/Client.ts",
			"qualifiedName": "Client.once"
		},
		"50": {
			"sourceFileName": "src/client/Client.ts",
			"qualifiedName": "K"
		},
		"51": {
			"sourceFileName": "src/client/Client.ts",
			"qualifiedName": "event"
		},
		"52": {
			"sourceFileName": "src/client/Client.ts",
			"qualifiedName": "listener"
		},
		"53": {
			"sourceFileName": "src/client/Client.ts",
			"qualifiedName": "__type"
		},
		"54": {
			"sourceFileName": "src/client/Client.ts",
			"qualifiedName": "__type"
		},
		"55": {
			"sourceFileName": "src/client/Client.ts",
			"qualifiedName": "args"
		},
		"56": {
			"sourceFileName": "src/client/Client.ts",
			"qualifiedName": "Client.on"
		},
		"57": {
			"sourceFileName": "src/client/Client.ts",
			"qualifiedName": "Client.on"
		},
		"58": {
			"sourceFileName": "src/client/Client.ts",
			"qualifiedName": "K"
		},
		"59": {
			"sourceFileName": "src/client/Client.ts",
			"qualifiedName": "event"
		},
		"60": {
			"sourceFileName": "src/client/Client.ts",
			"qualifiedName": "listener"
		},
		"61": {
			"sourceFileName": "src/client/Client.ts",
			"qualifiedName": "__type"
		},
		"62": {
			"sourceFileName": "src/client/Client.ts",
			"qualifiedName": "__type"
		},
		"63": {
			"sourceFileName": "src/client/Client.ts",
			"qualifiedName": "args"
		},
		"64": {
			"sourceFileName": "src/client/Client.ts",
			"qualifiedName": "Client.login"
		},
		"65": {
			"sourceFileName": "src/client/Client.ts",
			"qualifiedName": "Client.login"
		},
		"66": {
			"sourceFileName": "src/client/Client.ts",
			"qualifiedName": "Client.createMessage"
		},
		"67": {
			"sourceFileName": "src/client/Client.ts",
			"qualifiedName": "Client.createMessage"
		},
		"68": {
			"sourceFileName": "src/client/Client.ts",
			"qualifiedName": "channelId"
		},
		"69": {
			"sourceFileName": "src/client/Client.ts",
			"qualifiedName": "message"
		},
		"70": {
			"sourceFileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
			"qualifiedName": "__global.NodeJS.EventEmitter.addListener"
		},
		"71": {
			"sourceFileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
			"qualifiedName": "__global.NodeJS.EventEmitter.addListener"
		},
		"72": {
			"sourceFileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
			"qualifiedName": "eventName"
		},
		"73": {
			"sourceFileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
			"qualifiedName": "listener"
		},
		"74": {
			"sourceFileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
			"qualifiedName": "__type"
		},
		"75": {
			"sourceFileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
			"qualifiedName": "__type"
		},
		"76": {
			"sourceFileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
			"qualifiedName": "args"
		},
		"77": {
			"sourceFileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
			"qualifiedName": "__global.NodeJS.EventEmitter.removeListener"
		},
		"78": {
			"sourceFileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
			"qualifiedName": "__global.NodeJS.EventEmitter.removeListener"
		},
		"79": {
			"sourceFileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
			"qualifiedName": "eventName"
		},
		"80": {
			"sourceFileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
			"qualifiedName": "listener"
		},
		"81": {
			"sourceFileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
			"qualifiedName": "__type"
		},
		"82": {
			"sourceFileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
			"qualifiedName": "__type"
		},
		"83": {
			"sourceFileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
			"qualifiedName": "args"
		},
		"84": {
			"sourceFileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
			"qualifiedName": "__global.NodeJS.EventEmitter.off"
		},
		"85": {
			"sourceFileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
			"qualifiedName": "__global.NodeJS.EventEmitter.off"
		},
		"86": {
			"sourceFileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
			"qualifiedName": "eventName"
		},
		"87": {
			"sourceFileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
			"qualifiedName": "listener"
		},
		"88": {
			"sourceFileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
			"qualifiedName": "__type"
		},
		"89": {
			"sourceFileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
			"qualifiedName": "__type"
		},
		"90": {
			"sourceFileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
			"qualifiedName": "args"
		},
		"91": {
			"sourceFileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
			"qualifiedName": "__global.NodeJS.EventEmitter.removeAllListeners"
		},
		"92": {
			"sourceFileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
			"qualifiedName": "__global.NodeJS.EventEmitter.removeAllListeners"
		},
		"93": {
			"sourceFileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
			"qualifiedName": "event"
		},
		"94": {
			"sourceFileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
			"qualifiedName": "__global.NodeJS.EventEmitter.setMaxListeners"
		},
		"95": {
			"sourceFileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
			"qualifiedName": "__global.NodeJS.EventEmitter.setMaxListeners"
		},
		"96": {
			"sourceFileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
			"qualifiedName": "n"
		},
		"97": {
			"sourceFileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
			"qualifiedName": "__global.NodeJS.EventEmitter.getMaxListeners"
		},
		"98": {
			"sourceFileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
			"qualifiedName": "__global.NodeJS.EventEmitter.getMaxListeners"
		},
		"99": {
			"sourceFileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
			"qualifiedName": "__global.NodeJS.EventEmitter.listeners"
		},
		"100": {
			"sourceFileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
			"qualifiedName": "__global.NodeJS.EventEmitter.listeners"
		},
		"101": {
			"sourceFileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
			"qualifiedName": "eventName"
		},
		"102": {
			"sourceFileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
			"qualifiedName": "__global.NodeJS.EventEmitter.rawListeners"
		},
		"103": {
			"sourceFileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
			"qualifiedName": "__global.NodeJS.EventEmitter.rawListeners"
		},
		"104": {
			"sourceFileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
			"qualifiedName": "eventName"
		},
		"105": {
			"sourceFileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
			"qualifiedName": "__global.NodeJS.EventEmitter.emit"
		},
		"106": {
			"sourceFileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
			"qualifiedName": "__global.NodeJS.EventEmitter.emit"
		},
		"107": {
			"sourceFileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
			"qualifiedName": "eventName"
		},
		"108": {
			"sourceFileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
			"qualifiedName": "args"
		},
		"109": {
			"sourceFileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
			"qualifiedName": "__global.NodeJS.EventEmitter.listenerCount"
		},
		"110": {
			"sourceFileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
			"qualifiedName": "__global.NodeJS.EventEmitter.listenerCount"
		},
		"111": {
			"sourceFileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
			"qualifiedName": "eventName"
		},
		"112": {
			"sourceFileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
			"qualifiedName": "listener"
		},
		"113": {
			"sourceFileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
			"qualifiedName": "__global.NodeJS.EventEmitter.prependListener"
		},
		"114": {
			"sourceFileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
			"qualifiedName": "__global.NodeJS.EventEmitter.prependListener"
		},
		"115": {
			"sourceFileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
			"qualifiedName": "eventName"
		},
		"116": {
			"sourceFileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
			"qualifiedName": "listener"
		},
		"117": {
			"sourceFileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
			"qualifiedName": "__type"
		},
		"118": {
			"sourceFileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
			"qualifiedName": "__type"
		},
		"119": {
			"sourceFileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
			"qualifiedName": "args"
		},
		"120": {
			"sourceFileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
			"qualifiedName": "__global.NodeJS.EventEmitter.prependOnceListener"
		},
		"121": {
			"sourceFileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
			"qualifiedName": "__global.NodeJS.EventEmitter.prependOnceListener"
		},
		"122": {
			"sourceFileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
			"qualifiedName": "eventName"
		},
		"123": {
			"sourceFileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
			"qualifiedName": "listener"
		},
		"124": {
			"sourceFileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
			"qualifiedName": "__type"
		},
		"125": {
			"sourceFileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
			"qualifiedName": "__type"
		},
		"126": {
			"sourceFileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
			"qualifiedName": "args"
		},
		"127": {
			"sourceFileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
			"qualifiedName": "__global.NodeJS.EventEmitter.eventNames"
		},
		"128": {
			"sourceFileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
			"qualifiedName": "__global.NodeJS.EventEmitter.eventNames"
		},
		"129": {
			"sourceFileName": "src/client/WebsocketClient.ts",
			"qualifiedName": "WebsocketClient"
		},
		"130": {
			"sourceFileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
			"qualifiedName": "EventEmitter.once"
		},
		"131": {
			"sourceFileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
			"qualifiedName": "EventEmitter.once"
		},
		"132": {
			"sourceFileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
			"qualifiedName": "emitter"
		},
		"133": {
			"sourceFileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
			"qualifiedName": "eventName"
		},
		"134": {
			"sourceFileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
			"qualifiedName": "options"
		},
		"135": {
			"sourceFileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
			"qualifiedName": "EventEmitter.once"
		},
		"136": {
			"sourceFileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
			"qualifiedName": "emitter"
		},
		"137": {
			"sourceFileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
			"qualifiedName": "eventName"
		},
		"138": {
			"sourceFileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
			"qualifiedName": "options"
		},
		"139": {
			"sourceFileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
			"qualifiedName": "EventEmitter.on"
		},
		"140": {
			"sourceFileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
			"qualifiedName": "EventEmitter.on"
		},
		"141": {
			"sourceFileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
			"qualifiedName": "emitter"
		},
		"142": {
			"sourceFileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
			"qualifiedName": "eventName"
		},
		"143": {
			"sourceFileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
			"qualifiedName": "options"
		},
		"144": {
			"sourceFileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
			"qualifiedName": "EventEmitter.listenerCount"
		},
		"145": {
			"sourceFileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
			"qualifiedName": "EventEmitter.listenerCount"
		},
		"146": {
			"sourceFileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
			"qualifiedName": "emitter"
		},
		"147": {
			"sourceFileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
			"qualifiedName": "eventName"
		},
		"148": {
			"sourceFileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
			"qualifiedName": "EventEmitter.getEventListeners"
		},
		"149": {
			"sourceFileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
			"qualifiedName": "EventEmitter.getEventListeners"
		},
		"150": {
			"sourceFileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
			"qualifiedName": "emitter"
		},
		"151": {
			"sourceFileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
			"qualifiedName": "name"
		},
		"152": {
			"sourceFileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
			"qualifiedName": "EventEmitter.getMaxListeners"
		},
		"153": {
			"sourceFileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
			"qualifiedName": "EventEmitter.getMaxListeners"
		},
		"154": {
			"sourceFileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
			"qualifiedName": "emitter"
		},
		"155": {
			"sourceFileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
			"qualifiedName": "EventEmitter.setMaxListeners"
		},
		"156": {
			"sourceFileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
			"qualifiedName": "EventEmitter.setMaxListeners"
		},
		"157": {
			"sourceFileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
			"qualifiedName": "n"
		},
		"158": {
			"sourceFileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
			"qualifiedName": "eventTargets"
		},
		"159": {
			"sourceFileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
			"qualifiedName": "EventEmitter.addAbortListener"
		},
		"160": {
			"sourceFileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
			"qualifiedName": "EventEmitter.addAbortListener"
		},
		"161": {
			"sourceFileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
			"qualifiedName": "signal"
		},
		"162": {
			"sourceFileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
			"qualifiedName": "resource"
		},
		"163": {
			"sourceFileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
			"qualifiedName": "__type"
		},
		"164": {
			"sourceFileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
			"qualifiedName": "__type"
		},
		"165": {
			"sourceFileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
			"qualifiedName": "event"
		},
		"166": {
			"sourceFileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
			"qualifiedName": "EventEmitter.errorMonitor"
		},
		"167": {
			"sourceFileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
			"qualifiedName": "EventEmitter.captureRejectionSymbol"
		},
		"168": {
			"sourceFileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
			"qualifiedName": "EventEmitter.captureRejections"
		},
		"169": {
			"sourceFileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
			"qualifiedName": "EventEmitter.defaultMaxListeners"
		},
		"170": {
			"sourceFileName": "src/client/WebsocketClient.ts",
			"qualifiedName": "WebsocketClient.__constructor"
		},
		"171": {
			"sourceFileName": "src/client/WebsocketClient.ts",
			"qualifiedName": "WebsocketClient"
		},
		"172": {
			"sourceFileName": "src/client/WebsocketClient.ts",
			"qualifiedName": "client"
		},
		"173": {
			"sourceFileName": "src/client/WebsocketClient.ts",
			"qualifiedName": "WebsocketClient.gateway"
		},
		"174": {
			"sourceFileName": "src/client/WebsocketClient.ts",
			"qualifiedName": "WebsocketClient._ws"
		},
		"175": {
			"sourceFileName": "src/client/WebsocketClient.ts",
			"qualifiedName": "WebsocketClient.heartbeatInterval"
		},
		"176": {
			"sourceFileName": "src/client/WebsocketClient.ts",
			"qualifiedName": "WebsocketClient.client"
		},
		"177": {
			"sourceFileName": "src/client/WebsocketClient.ts",
			"qualifiedName": "WebsocketClient.connect"
		},
		"178": {
			"sourceFileName": "src/client/WebsocketClient.ts",
			"qualifiedName": "WebsocketClient.connect"
		},
		"179": {
			"sourceFileName": "src/client/WebsocketClient.ts",
			"qualifiedName": "WebsocketClient.reconnect"
		},
		"180": {
			"sourceFileName": "src/client/WebsocketClient.ts",
			"qualifiedName": "WebsocketClient.reconnect"
		},
		"181": {
			"sourceFileName": "src/client/WebsocketClient.ts",
			"qualifiedName": "WebsocketClient.identify"
		},
		"182": {
			"sourceFileName": "src/client/WebsocketClient.ts",
			"qualifiedName": "WebsocketClient.identify"
		},
		"183": {
			"sourceFileName": "src/client/WebsocketClient.ts",
			"qualifiedName": "WebsocketClient.startHeartbeat"
		},
		"184": {
			"sourceFileName": "src/client/WebsocketClient.ts",
			"qualifiedName": "WebsocketClient.startHeartbeat"
		},
		"185": {
			"sourceFileName": "src/client/WebsocketClient.ts",
			"qualifiedName": "interval"
		},
		"186": {
			"sourceFileName": "src/client/WebsocketClient.ts",
			"qualifiedName": "WebsocketClient.stopHeartbeat"
		},
		"187": {
			"sourceFileName": "src/client/WebsocketClient.ts",
			"qualifiedName": "WebsocketClient.stopHeartbeat"
		},
		"188": {
			"sourceFileName": "src/client/WebsocketClient.ts",
			"qualifiedName": "WebsocketClient.sendHeartbeat"
		},
		"189": {
			"sourceFileName": "src/client/WebsocketClient.ts",
			"qualifiedName": "WebsocketClient.sendHeartbeat"
		},
		"190": {
			"sourceFileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
			"qualifiedName": "__global.NodeJS.EventEmitter.addListener"
		},
		"191": {
			"sourceFileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
			"qualifiedName": "__global.NodeJS.EventEmitter.addListener"
		},
		"192": {
			"sourceFileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
			"qualifiedName": "eventName"
		},
		"193": {
			"sourceFileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
			"qualifiedName": "listener"
		},
		"194": {
			"sourceFileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
			"qualifiedName": "__type"
		},
		"195": {
			"sourceFileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
			"qualifiedName": "__type"
		},
		"196": {
			"sourceFileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
			"qualifiedName": "args"
		},
		"197": {
			"sourceFileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
			"qualifiedName": "__global.NodeJS.EventEmitter.on"
		},
		"198": {
			"sourceFileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
			"qualifiedName": "__global.NodeJS.EventEmitter.on"
		},
		"199": {
			"sourceFileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
			"qualifiedName": "eventName"
		},
		"200": {
			"sourceFileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
			"qualifiedName": "listener"
		},
		"201": {
			"sourceFileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
			"qualifiedName": "__type"
		},
		"202": {
			"sourceFileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
			"qualifiedName": "__type"
		},
		"203": {
			"sourceFileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
			"qualifiedName": "args"
		},
		"204": {
			"sourceFileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
			"qualifiedName": "__global.NodeJS.EventEmitter.once"
		},
		"205": {
			"sourceFileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
			"qualifiedName": "__global.NodeJS.EventEmitter.once"
		},
		"206": {
			"sourceFileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
			"qualifiedName": "eventName"
		},
		"207": {
			"sourceFileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
			"qualifiedName": "listener"
		},
		"208": {
			"sourceFileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
			"qualifiedName": "__type"
		},
		"209": {
			"sourceFileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
			"qualifiedName": "__type"
		},
		"210": {
			"sourceFileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
			"qualifiedName": "args"
		},
		"211": {
			"sourceFileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
			"qualifiedName": "__global.NodeJS.EventEmitter.removeListener"
		},
		"212": {
			"sourceFileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
			"qualifiedName": "__global.NodeJS.EventEmitter.removeListener"
		},
		"213": {
			"sourceFileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
			"qualifiedName": "eventName"
		},
		"214": {
			"sourceFileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
			"qualifiedName": "listener"
		},
		"215": {
			"sourceFileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
			"qualifiedName": "__type"
		},
		"216": {
			"sourceFileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
			"qualifiedName": "__type"
		},
		"217": {
			"sourceFileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
			"qualifiedName": "args"
		},
		"218": {
			"sourceFileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
			"qualifiedName": "__global.NodeJS.EventEmitter.off"
		},
		"219": {
			"sourceFileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
			"qualifiedName": "__global.NodeJS.EventEmitter.off"
		},
		"220": {
			"sourceFileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
			"qualifiedName": "eventName"
		},
		"221": {
			"sourceFileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
			"qualifiedName": "listener"
		},
		"222": {
			"sourceFileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
			"qualifiedName": "__type"
		},
		"223": {
			"sourceFileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
			"qualifiedName": "__type"
		},
		"224": {
			"sourceFileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
			"qualifiedName": "args"
		},
		"225": {
			"sourceFileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
			"qualifiedName": "__global.NodeJS.EventEmitter.removeAllListeners"
		},
		"226": {
			"sourceFileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
			"qualifiedName": "__global.NodeJS.EventEmitter.removeAllListeners"
		},
		"227": {
			"sourceFileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
			"qualifiedName": "event"
		},
		"228": {
			"sourceFileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
			"qualifiedName": "__global.NodeJS.EventEmitter.setMaxListeners"
		},
		"229": {
			"sourceFileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
			"qualifiedName": "__global.NodeJS.EventEmitter.setMaxListeners"
		},
		"230": {
			"sourceFileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
			"qualifiedName": "n"
		},
		"231": {
			"sourceFileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
			"qualifiedName": "__global.NodeJS.EventEmitter.getMaxListeners"
		},
		"232": {
			"sourceFileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
			"qualifiedName": "__global.NodeJS.EventEmitter.getMaxListeners"
		},
		"233": {
			"sourceFileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
			"qualifiedName": "__global.NodeJS.EventEmitter.listeners"
		},
		"234": {
			"sourceFileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
			"qualifiedName": "__global.NodeJS.EventEmitter.listeners"
		},
		"235": {
			"sourceFileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
			"qualifiedName": "eventName"
		},
		"236": {
			"sourceFileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
			"qualifiedName": "__global.NodeJS.EventEmitter.rawListeners"
		},
		"237": {
			"sourceFileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
			"qualifiedName": "__global.NodeJS.EventEmitter.rawListeners"
		},
		"238": {
			"sourceFileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
			"qualifiedName": "eventName"
		},
		"239": {
			"sourceFileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
			"qualifiedName": "__global.NodeJS.EventEmitter.emit"
		},
		"240": {
			"sourceFileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
			"qualifiedName": "__global.NodeJS.EventEmitter.emit"
		},
		"241": {
			"sourceFileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
			"qualifiedName": "eventName"
		},
		"242": {
			"sourceFileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
			"qualifiedName": "args"
		},
		"243": {
			"sourceFileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
			"qualifiedName": "__global.NodeJS.EventEmitter.listenerCount"
		},
		"244": {
			"sourceFileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
			"qualifiedName": "__global.NodeJS.EventEmitter.listenerCount"
		},
		"245": {
			"sourceFileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
			"qualifiedName": "eventName"
		},
		"246": {
			"sourceFileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
			"qualifiedName": "listener"
		},
		"247": {
			"sourceFileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
			"qualifiedName": "__global.NodeJS.EventEmitter.prependListener"
		},
		"248": {
			"sourceFileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
			"qualifiedName": "__global.NodeJS.EventEmitter.prependListener"
		},
		"249": {
			"sourceFileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
			"qualifiedName": "eventName"
		},
		"250": {
			"sourceFileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
			"qualifiedName": "listener"
		},
		"251": {
			"sourceFileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
			"qualifiedName": "__type"
		},
		"252": {
			"sourceFileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
			"qualifiedName": "__type"
		},
		"253": {
			"sourceFileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
			"qualifiedName": "args"
		},
		"254": {
			"sourceFileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
			"qualifiedName": "__global.NodeJS.EventEmitter.prependOnceListener"
		},
		"255": {
			"sourceFileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
			"qualifiedName": "__global.NodeJS.EventEmitter.prependOnceListener"
		},
		"256": {
			"sourceFileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
			"qualifiedName": "eventName"
		},
		"257": {
			"sourceFileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
			"qualifiedName": "listener"
		},
		"258": {
			"sourceFileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
			"qualifiedName": "__type"
		},
		"259": {
			"sourceFileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
			"qualifiedName": "__type"
		},
		"260": {
			"sourceFileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
			"qualifiedName": "args"
		},
		"261": {
			"sourceFileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
			"qualifiedName": "__global.NodeJS.EventEmitter.eventNames"
		},
		"262": {
			"sourceFileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/events.d.ts",
			"qualifiedName": "__global.NodeJS.EventEmitter.eventNames"
		},
		"263": {
			"sourceFileName": "src/config/Constants.ts",
			"qualifiedName": "Constants"
		},
		"264": {
			"sourceFileName": "src/config/Constants.ts",
			"qualifiedName": "Constants.API"
		},
		"265": {
			"sourceFileName": "src/config/Constants.ts",
			"qualifiedName": "Constants.GATEWAY"
		},
		"268": {
			"sourceFileName": "src/config/GatewayIntents.ts",
			"qualifiedName": "GatewayIntents"
		},
		"269": {
			"sourceFileName": "src/config/GatewayIntents.ts",
			"qualifiedName": "GatewayIntents.GUILDS"
		},
		"270": {
			"sourceFileName": "src/config/GatewayIntents.ts",
			"qualifiedName": "GatewayIntents.GUILD_MEMBERS"
		},
		"271": {
			"sourceFileName": "src/config/GatewayIntents.ts",
			"qualifiedName": "GatewayIntents.GUILD_MODERATION"
		},
		"272": {
			"sourceFileName": "src/config/GatewayIntents.ts",
			"qualifiedName": "GatewayIntents.GUILD_EMOJIS_AND_STICKERS"
		},
		"273": {
			"sourceFileName": "src/config/GatewayIntents.ts",
			"qualifiedName": "GatewayIntents.GUILD_INTEGRATIONS"
		},
		"274": {
			"sourceFileName": "src/config/GatewayIntents.ts",
			"qualifiedName": "GatewayIntents.GUILD_WEBHOOKS"
		},
		"275": {
			"sourceFileName": "src/config/GatewayIntents.ts",
			"qualifiedName": "GatewayIntents.GUILD_INVITES"
		},
		"276": {
			"sourceFileName": "src/config/GatewayIntents.ts",
			"qualifiedName": "GatewayIntents.GUILD_VOICE_STATES"
		},
		"277": {
			"sourceFileName": "src/config/GatewayIntents.ts",
			"qualifiedName": "GatewayIntents.GUILD_PRESENCES"
		},
		"278": {
			"sourceFileName": "src/config/GatewayIntents.ts",
			"qualifiedName": "GatewayIntents.GUILD_MESSAGES"
		},
		"279": {
			"sourceFileName": "src/config/GatewayIntents.ts",
			"qualifiedName": "GatewayIntents.GUILD_MESSAGE_REACTIONS"
		},
		"280": {
			"sourceFileName": "src/config/GatewayIntents.ts",
			"qualifiedName": "GatewayIntents.GUILD_MESSAGE_TYPING"
		},
		"281": {
			"sourceFileName": "src/config/GatewayIntents.ts",
			"qualifiedName": "GatewayIntents.DIRECT_MESSAGES"
		},
		"282": {
			"sourceFileName": "src/config/GatewayIntents.ts",
			"qualifiedName": "GatewayIntents.DIRECT_MESSAGE_REACTIONS"
		},
		"283": {
			"sourceFileName": "src/config/GatewayIntents.ts",
			"qualifiedName": "GatewayIntents.DIRECT_MESSAGE_TYPING"
		},
		"284": {
			"sourceFileName": "src/config/GatewayIntents.ts",
			"qualifiedName": "GatewayIntents.MESSAGE_CONTENT"
		},
		"285": {
			"sourceFileName": "src/config/GatewayIntents.ts",
			"qualifiedName": "GatewayIntents.GUILD_SCHEDULED_EVENTS"
		},
		"286": {
			"sourceFileName": "src/config/GatewayIntents.ts",
			"qualifiedName": "GatewayIntents.AUTO_MODERATION_CONFIGURATION"
		},
		"287": {
			"sourceFileName": "src/config/GatewayIntents.ts",
			"qualifiedName": "GatewayIntents.AUTO_MODERATION_EXECUTION"
		},
		"288": {
			"sourceFileName": "src/config/GatewayIntents.ts",
			"qualifiedName": "GatewayIntents.combineIntents"
		},
		"289": {
			"sourceFileName": "src/config/GatewayIntents.ts",
			"qualifiedName": "GatewayIntents.combineIntents"
		},
		"290": {
			"sourceFileName": "src/config/GatewayIntents.ts",
			"qualifiedName": "intents"
		},
		"293": {
			"sourceFileName": "src/config/OpCodes.ts",
			"qualifiedName": "OpCodes"
		},
		"294": {
			"sourceFileName": "src/config/OpCodes.ts",
			"qualifiedName": "OpCodes.DISPATCH"
		},
		"295": {
			"sourceFileName": "src/config/OpCodes.ts",
			"qualifiedName": "OpCodes.HEARTBEAT"
		},
		"296": {
			"sourceFileName": "src/config/OpCodes.ts",
			"qualifiedName": "OpCodes.IDENTIFY"
		},
		"297": {
			"sourceFileName": "src/config/OpCodes.ts",
			"qualifiedName": "OpCodes.PRESENCE_UPDATE"
		},
		"298": {
			"sourceFileName": "src/config/OpCodes.ts",
			"qualifiedName": "OpCodes.VOICE_STATE_UPDATE"
		},
		"299": {
			"sourceFileName": "src/config/OpCodes.ts",
			"qualifiedName": "OpCodes.RESUME"
		},
		"300": {
			"sourceFileName": "src/config/OpCodes.ts",
			"qualifiedName": "OpCodes.RECONNECT"
		},
		"301": {
			"sourceFileName": "src/config/OpCodes.ts",
			"qualifiedName": "OpCodes.REQUEST_GUILD_MEMBERS"
		},
		"302": {
			"sourceFileName": "src/config/OpCodes.ts",
			"qualifiedName": "OpCodes.INVALID_SESSION"
		},
		"303": {
			"sourceFileName": "src/config/OpCodes.ts",
			"qualifiedName": "OpCodes.HELLO"
		},
		"304": {
			"sourceFileName": "src/config/OpCodes.ts",
			"qualifiedName": "OpCodes.HEARTBEAT_ACK"
		},
		"307": {
			"sourceFileName": "src/config/SolaceIntents.ts",
			"qualifiedName": "SolaceIntents"
		},
		"308": {
			"sourceFileName": "src/config/SolaceIntents.ts",
			"qualifiedName": "SolaceIntents.GENERAL"
		},
		"309": {
			"sourceFileName": "src/config/SolaceIntents.ts",
			"qualifiedName": "SolaceIntents.MODERATION"
		},
		"310": {
			"sourceFileName": "src/config/SolaceIntents.ts",
			"qualifiedName": "SolaceIntents.MUSIC"
		},
		"311": {
			"sourceFileName": "src/config/SolaceIntents.ts",
			"qualifiedName": "SolaceIntents.INVITE_TRACKER"
		},
		"312": {
			"sourceFileName": "src/config/SolaceIntents.ts",
			"qualifiedName": "SolaceIntents.EMOJI_MANAGER"
		},
		"313": {
			"sourceFileName": "src/config/SolaceIntents.ts",
			"qualifiedName": "SolaceIntents.INTEGRATION_MANAGER"
		},
		"314": {
			"sourceFileName": "src/config/SolaceIntents.ts",
			"qualifiedName": "SolaceIntents.WEBHOOK_MANAGER"
		},
		"315": {
			"sourceFileName": "src/config/SolaceIntents.ts",
			"qualifiedName": "SolaceIntents.VOICE_STATE_MONITOR"
		},
		"316": {
			"sourceFileName": "src/config/SolaceIntents.ts",
			"qualifiedName": "SolaceIntents.PRESENCE_MONITOR"
		},
		"317": {
			"sourceFileName": "src/config/SolaceIntents.ts",
			"qualifiedName": "SolaceIntents.DIRECT_MESSAGE_MONITOR"
		},
		"318": {
			"sourceFileName": "src/config/SolaceIntents.ts",
			"qualifiedName": "SolaceIntents.MESSAGE_CONTENT_MONITOR"
		},
		"319": {
			"sourceFileName": "src/config/SolaceIntents.ts",
			"qualifiedName": "SolaceIntents.AUTO_MODERATION"
		},
		"322": {
			"sourceFileName": "src/helper/Event.ts",
			"qualifiedName": "Event"
		},
		"323": {
			"sourceFileName": "src/helper/Event.ts",
			"qualifiedName": "Event.__constructor"
		},
		"324": {
			"sourceFileName": "src/helper/Event.ts",
			"qualifiedName": "Event"
		},
		"325": {
			"sourceFileName": "src/helper/Event.ts",
			"qualifiedName": "name"
		},
		"326": {
			"sourceFileName": "src/helper/Event.ts",
			"qualifiedName": "once"
		},
		"327": {
			"sourceFileName": "src/helper/Event.ts",
			"qualifiedName": "Event.name"
		},
		"328": {
			"sourceFileName": "src/helper/Event.ts",
			"qualifiedName": "Event.once"
		},
		"329": {
			"sourceFileName": "src/helper/Event.ts",
			"qualifiedName": "Event.execute"
		},
		"330": {
			"sourceFileName": "src/helper/Event.ts",
			"qualifiedName": "Event.execute"
		},
		"331": {
			"sourceFileName": "src/helper/Event.ts",
			"qualifiedName": "client"
		},
		"332": {
			"sourceFileName": "src/helper/Event.ts",
			"qualifiedName": "args"
		},
		"333": {
			"sourceFileName": "src/helper/Plugin.ts",
			"qualifiedName": "Plugin"
		},
		"334": {
			"sourceFileName": "src/helper/Plugin.ts",
			"qualifiedName": "Plugin.__constructor"
		},
		"335": {
			"sourceFileName": "src/helper/Plugin.ts",
			"qualifiedName": "Plugin"
		},
		"336": {
			"sourceFileName": "src/helper/Plugin.ts",
			"qualifiedName": "name"
		},
		"337": {
			"sourceFileName": "src/helper/Plugin.ts",
			"qualifiedName": "Plugin.name"
		},
		"338": {
			"sourceFileName": "src/helper/Plugin.ts",
			"qualifiedName": "Plugin.onEnable"
		},
		"339": {
			"sourceFileName": "src/helper/Plugin.ts",
			"qualifiedName": "Plugin.onEnable"
		},
		"340": {
			"sourceFileName": "src/helper/Plugin.ts",
			"qualifiedName": "client"
		},
		"341": {
			"sourceFileName": "src/helper/Plugin.ts",
			"qualifiedName": "Plugin.onDisable"
		},
		"342": {
			"sourceFileName": "src/helper/Plugin.ts",
			"qualifiedName": "Plugin.onDisable"
		},
		"343": {
			"sourceFileName": "src/helper/Plugin.ts",
			"qualifiedName": "client"
		},
		"344": {
			"sourceFileName": "src/helper/Plugin.ts",
			"qualifiedName": "Plugin.resolveDependencies"
		},
		"345": {
			"sourceFileName": "src/helper/Plugin.ts",
			"qualifiedName": "Plugin.resolveDependencies"
		},
		"346": {
			"sourceFileName": "src/helper/Plugin.ts",
			"qualifiedName": "dependencies"
		},
		"347": {
			"sourceFileName": "src/helper/Plugin.ts",
			"qualifiedName": "Plugin.getName"
		},
		"348": {
			"sourceFileName": "src/helper/Plugin.ts",
			"qualifiedName": "Plugin.getName"
		},
		"349": {
			"sourceFileName": "src/helper/Registry.ts",
			"qualifiedName": "Registry"
		},
		"350": {
			"sourceFileName": "src/helper/Registry.ts",
			"qualifiedName": "Registry.registerEvents"
		},
		"351": {
			"sourceFileName": "src/helper/Registry.ts",
			"qualifiedName": "Registry.registerEvents"
		},
		"352": {
			"sourceFileName": "src/helper/Registry.ts",
			"qualifiedName": "client"
		},
		"353": {
			"sourceFileName": "src/helper/Registry.ts",
			"qualifiedName": "args"
		},
		"356": {
			"sourceFileName": "src/interfaces/ApiActivity.ts",
			"qualifiedName": "ApiActivity"
		},
		"357": {
			"sourceFileName": "src/interfaces/ApiActivity.ts",
			"qualifiedName": "ApiActivity.party_id"
		},
		"358": {
			"sourceFileName": "src/interfaces/ApiActivity.ts",
			"qualifiedName": "ApiActivity.type"
		},
		"359": {
			"sourceFileName": "src/interfaces/ApiApplication.ts",
			"qualifiedName": "ApiApplication"
		},
		"360": {
			"sourceFileName": "src/interfaces/ApiApplication.ts",
			"qualifiedName": "ApiApplication.approximate_guild_count"
		},
		"361": {
			"sourceFileName": "src/interfaces/ApiApplication.ts",
			"qualifiedName": "ApiApplication.bot_public"
		},
		"362": {
			"sourceFileName": "src/interfaces/ApiApplication.ts",
			"qualifiedName": "ApiApplication.bot_require_code_grant"
		},
		"363": {
			"sourceFileName": "src/interfaces/ApiApplication.ts",
			"qualifiedName": "ApiApplication.cover_image"
		},
		"364": {
			"sourceFileName": "src/interfaces/ApiApplication.ts",
			"qualifiedName": "ApiApplication.custom_install_url"
		},
		"365": {
			"sourceFileName": "src/interfaces/ApiApplication.ts",
			"qualifiedName": "ApiApplication.description"
		},
		"366": {
			"sourceFileName": "src/interfaces/ApiApplication.ts",
			"qualifiedName": "ApiApplication.flags"
		},
		"367": {
			"sourceFileName": "src/interfaces/ApiApplication.ts",
			"qualifiedName": "ApiApplication.guild"
		},
		"368": {
			"sourceFileName": "src/interfaces/ApiApplication.ts",
			"qualifiedName": "ApiApplication.guild_id"
		},
		"369": {
			"sourceFileName": "src/interfaces/ApiApplication.ts",
			"qualifiedName": "ApiApplication.icon"
		},
		"370": {
			"sourceFileName": "src/interfaces/ApiApplication.ts",
			"qualifiedName": "ApiApplication.id"
		},
		"371": {
			"sourceFileName": "src/interfaces/ApiApplication.ts",
			"qualifiedName": "ApiApplication.install_params"
		},
		"372": {
			"sourceFileName": "src/interfaces/ApiApplication.ts",
			"qualifiedName": "ApiApplication.owner"
		},
		"373": {
			"sourceFileName": "src/interfaces/ApiApplication.ts",
			"qualifiedName": "ApiApplication.privacy_policy_url"
		},
		"374": {
			"sourceFileName": "src/interfaces/ApiApplication.ts",
			"qualifiedName": "ApiApplication.rpc_origins"
		},
		"375": {
			"sourceFileName": "src/interfaces/ApiApplication.ts",
			"qualifiedName": "ApiApplication.role_connections_verification_url"
		},
		"376": {
			"sourceFileName": "src/interfaces/ApiApplication.ts",
			"qualifiedName": "ApiApplication.slug"
		},
		"377": {
			"sourceFileName": "src/interfaces/ApiApplication.ts",
			"qualifiedName": "ApiApplication.summary"
		},
		"378": {
			"sourceFileName": "src/interfaces/ApiApplication.ts",
			"qualifiedName": "ApiApplication.tags"
		},
		"379": {
			"sourceFileName": "src/interfaces/ApiApplication.ts",
			"qualifiedName": "ApiApplication.team"
		},
		"380": {
			"sourceFileName": "src/interfaces/ApiApplication.ts",
			"qualifiedName": "ApiApplication.terms_of_service_url"
		},
		"381": {
			"sourceFileName": "src/interfaces/ApiApplication.ts",
			"qualifiedName": "ApiApplication.verify_key"
		},
		"382": {
			"sourceFileName": "src/interfaces/ApiApplication.ts",
			"qualifiedName": "ApiApplicationInstallParams"
		},
		"383": {
			"sourceFileName": "src/interfaces/ApiApplication.ts",
			"qualifiedName": "ApiApplicationInstallParams.permissions"
		},
		"384": {
			"sourceFileName": "src/interfaces/ApiApplication.ts",
			"qualifiedName": "ApiApplicationInstallParams.scopes"
		},
		"385": {
			"sourceFileName": "src/interfaces/ApiAttachment.ts",
			"qualifiedName": "ApiAttachment"
		},
		"386": {
			"sourceFileName": "src/interfaces/ApiAttachment.ts",
			"qualifiedName": "ApiAttachment.content_type"
		},
		"387": {
			"sourceFileName": "src/interfaces/ApiAttachment.ts",
			"qualifiedName": "ApiAttachment.description"
		},
		"388": {
			"sourceFileName": "src/interfaces/ApiAttachment.ts",
			"qualifiedName": "ApiAttachment.duration_secs"
		},
		"389": {
			"sourceFileName": "src/interfaces/ApiAttachment.ts",
			"qualifiedName": "ApiAttachment.ephemeral"
		},
		"390": {
			"sourceFileName": "src/interfaces/ApiAttachment.ts",
			"qualifiedName": "ApiAttachment.filename"
		},
		"391": {
			"sourceFileName": "src/interfaces/ApiAttachment.ts",
			"qualifiedName": "ApiAttachment.flags"
		},
		"392": {
			"sourceFileName": "src/interfaces/ApiAttachment.ts",
			"qualifiedName": "ApiAttachment.height"
		},
		"393": {
			"sourceFileName": "src/interfaces/ApiAttachment.ts",
			"qualifiedName": "ApiAttachment.id"
		},
		"394": {
			"sourceFileName": "src/interfaces/ApiAttachment.ts",
			"qualifiedName": "ApiAttachment.proxy_url"
		},
		"395": {
			"sourceFileName": "src/interfaces/ApiAttachment.ts",
			"qualifiedName": "ApiAttachment.size"
		},
		"396": {
			"sourceFileName": "src/interfaces/ApiAttachment.ts",
			"qualifiedName": "ApiAttachment.url"
		},
		"397": {
			"sourceFileName": "src/interfaces/ApiAttachment.ts",
			"qualifiedName": "ApiAttachment.waveform"
		},
		"398": {
			"sourceFileName": "src/interfaces/ApiAttachment.ts",
			"qualifiedName": "ApiAttachment.width"
		},
		"399": {
			"sourceFileName": "src/interfaces/ApiChannel.ts",
			"qualifiedName": "ApiChannel"
		},
		"400": {
			"sourceFileName": "src/interfaces/ApiChannel.ts",
			"qualifiedName": "ApiChannel.id"
		},
		"401": {
			"sourceFileName": "src/interfaces/ApiChannel.ts",
			"qualifiedName": "ApiChannel.type"
		},
		"402": {
			"sourceFileName": "src/interfaces/ApiChannelCategory.ts",
			"qualifiedName": "ApiChannelCategory"
		},
		"403": {
			"sourceFileName": "src/interfaces/ApiChannelCategory.ts",
			"qualifiedName": "ApiChannelCategory.guild_id"
		},
		"404": {
			"sourceFileName": "src/interfaces/ApiChannelCategory.ts",
			"qualifiedName": "ApiChannelCategory.id"
		},
		"405": {
			"sourceFileName": "src/interfaces/ApiChannelCategory.ts",
			"qualifiedName": "ApiChannelCategory.name"
		},
		"406": {
			"sourceFileName": "src/interfaces/ApiChannelCategory.ts",
			"qualifiedName": "ApiChannelCategory.nsfw"
		},
		"407": {
			"sourceFileName": "src/interfaces/ApiChannelCategory.ts",
			"qualifiedName": "ApiChannelCategory.parent_id"
		},
		"408": {
			"sourceFileName": "src/interfaces/ApiChannelCategory.ts",
			"qualifiedName": "ApiChannelCategory.permission_overwrites"
		},
		"409": {
			"sourceFileName": "src/interfaces/ApiChannelCategory.ts",
			"qualifiedName": "ApiChannelCategory.position"
		},
		"410": {
			"sourceFileName": "src/interfaces/ApiChannelCategory.ts",
			"qualifiedName": "ApiChannelCategory.type"
		},
		"411": {
			"sourceFileName": "src/interfaces/ApiDmChannel.ts",
			"qualifiedName": "ApiDmChannel"
		},
		"412": {
			"sourceFileName": "src/interfaces/ApiDmChannel.ts",
			"qualifiedName": "ApiDmChannel.id"
		},
		"413": {
			"sourceFileName": "src/interfaces/ApiDmChannel.ts",
			"qualifiedName": "ApiDmChannel.last_message_id"
		},
		"414": {
			"sourceFileName": "src/interfaces/ApiDmChannel.ts",
			"qualifiedName": "ApiDmChannel.recipients"
		},
		"415": {
			"sourceFileName": "src/interfaces/ApiDmChannel.ts",
			"qualifiedName": "ApiDmChannel.type"
		},
		"416": {
			"sourceFileName": "src/interfaces/ApiEmbed.ts",
			"qualifiedName": "ApiEmbed"
		},
		"417": {
			"sourceFileName": "src/interfaces/ApiEmbed.ts",
			"qualifiedName": "ApiEmbed.author"
		},
		"418": {
			"sourceFileName": "src/interfaces/ApiEmbed.ts",
			"qualifiedName": "ApiEmbed.color"
		},
		"419": {
			"sourceFileName": "src/interfaces/ApiEmbed.ts",
			"qualifiedName": "ApiEmbed.description"
		},
		"420": {
			"sourceFileName": "src/interfaces/ApiEmbed.ts",
			"qualifiedName": "ApiEmbed.fields"
		},
		"421": {
			"sourceFileName": "src/interfaces/ApiEmbed.ts",
			"qualifiedName": "ApiEmbed.footer"
		},
		"422": {
			"sourceFileName": "src/interfaces/ApiEmbed.ts",
			"qualifiedName": "ApiEmbed.image"
		},
		"423": {
			"sourceFileName": "src/interfaces/ApiEmbed.ts",
			"qualifiedName": "ApiEmbed.provider"
		},
		"424": {
			"sourceFileName": "src/interfaces/ApiEmbed.ts",
			"qualifiedName": "ApiEmbed.thumbnail"
		},
		"425": {
			"sourceFileName": "src/interfaces/ApiEmbed.ts",
			"qualifiedName": "ApiEmbed.timestamp"
		},
		"426": {
			"sourceFileName": "src/interfaces/ApiEmbed.ts",
			"qualifiedName": "ApiEmbed.title"
		},
		"427": {
			"sourceFileName": "src/interfaces/ApiEmbed.ts",
			"qualifiedName": "ApiEmbed.type"
		},
		"428": {
			"sourceFileName": "src/interfaces/ApiEmbed.ts",
			"qualifiedName": "ApiEmbed.url"
		},
		"429": {
			"sourceFileName": "src/interfaces/ApiEmbed.ts",
			"qualifiedName": "ApiEmbed.video"
		},
		"430": {
			"sourceFileName": "src/interfaces/ApiEmbed.ts",
			"qualifiedName": "ApiEmbedFooter"
		},
		"431": {
			"sourceFileName": "src/interfaces/ApiEmbed.ts",
			"qualifiedName": "ApiEmbedFooter.icon_url"
		},
		"432": {
			"sourceFileName": "src/interfaces/ApiEmbed.ts",
			"qualifiedName": "ApiEmbedFooter.proxy_icon_url"
		},
		"433": {
			"sourceFileName": "src/interfaces/ApiEmbed.ts",
			"qualifiedName": "ApiEmbedFooter.text"
		},
		"434": {
			"sourceFileName": "src/interfaces/ApiEmbed.ts",
			"qualifiedName": "ApiEmbedImage"
		},
		"435": {
			"sourceFileName": "src/interfaces/ApiEmbed.ts",
			"qualifiedName": "ApiEmbedImage.height"
		},
		"436": {
			"sourceFileName": "src/interfaces/ApiEmbed.ts",
			"qualifiedName": "ApiEmbedImage.proxy_url"
		},
		"437": {
			"sourceFileName": "src/interfaces/ApiEmbed.ts",
			"qualifiedName": "ApiEmbedImage.url"
		},
		"438": {
			"sourceFileName": "src/interfaces/ApiEmbed.ts",
			"qualifiedName": "ApiEmbedImage.width"
		},
		"439": {
			"sourceFileName": "src/interfaces/ApiEmbed.ts",
			"qualifiedName": "ApiEmbedThumbnail"
		},
		"440": {
			"sourceFileName": "src/interfaces/ApiEmbed.ts",
			"qualifiedName": "ApiEmbedThumbnail.height"
		},
		"441": {
			"sourceFileName": "src/interfaces/ApiEmbed.ts",
			"qualifiedName": "ApiEmbedThumbnail.proxy_url"
		},
		"442": {
			"sourceFileName": "src/interfaces/ApiEmbed.ts",
			"qualifiedName": "ApiEmbedThumbnail.url"
		},
		"443": {
			"sourceFileName": "src/interfaces/ApiEmbed.ts",
			"qualifiedName": "ApiEmbedThumbnail.width"
		},
		"444": {
			"sourceFileName": "src/interfaces/ApiEmbed.ts",
			"qualifiedName": "ApiEmbedVideo"
		},
		"445": {
			"sourceFileName": "src/interfaces/ApiEmbed.ts",
			"qualifiedName": "ApiEmbedVideo.height"
		},
		"446": {
			"sourceFileName": "src/interfaces/ApiEmbed.ts",
			"qualifiedName": "ApiEmbedVideo.proxy_url"
		},
		"447": {
			"sourceFileName": "src/interfaces/ApiEmbed.ts",
			"qualifiedName": "ApiEmbedVideo.url"
		},
		"448": {
			"sourceFileName": "src/interfaces/ApiEmbed.ts",
			"qualifiedName": "ApiEmbedVideo.width"
		},
		"449": {
			"sourceFileName": "src/interfaces/ApiEmbed.ts",
			"qualifiedName": "ApiEmbedProvider"
		},
		"450": {
			"sourceFileName": "src/interfaces/ApiEmbed.ts",
			"qualifiedName": "ApiEmbedProvider.name"
		},
		"451": {
			"sourceFileName": "src/interfaces/ApiEmbed.ts",
			"qualifiedName": "ApiEmbedProvider.url"
		},
		"452": {
			"sourceFileName": "src/interfaces/ApiEmbed.ts",
			"qualifiedName": "ApiEmbedAuthor"
		},
		"453": {
			"sourceFileName": "src/interfaces/ApiEmbed.ts",
			"qualifiedName": "ApiEmbedAuthor.icon_url"
		},
		"454": {
			"sourceFileName": "src/interfaces/ApiEmbed.ts",
			"qualifiedName": "ApiEmbedAuthor.name"
		},
		"455": {
			"sourceFileName": "src/interfaces/ApiEmbed.ts",
			"qualifiedName": "ApiEmbedAuthor.proxy_icon_url"
		},
		"456": {
			"sourceFileName": "src/interfaces/ApiEmbed.ts",
			"qualifiedName": "ApiEmbedAuthor.url"
		},
		"457": {
			"sourceFileName": "src/interfaces/ApiEmbed.ts",
			"qualifiedName": "ApiEmbedField"
		},
		"458": {
			"sourceFileName": "src/interfaces/ApiEmbed.ts",
			"qualifiedName": "ApiEmbedField.inline"
		},
		"459": {
			"sourceFileName": "src/interfaces/ApiEmbed.ts",
			"qualifiedName": "ApiEmbedField.name"
		},
		"460": {
			"sourceFileName": "src/interfaces/ApiEmbed.ts",
			"qualifiedName": "ApiEmbedField.value"
		},
		"461": {
			"sourceFileName": "src/interfaces/ApiEmoji.ts",
			"qualifiedName": "ApiEmoji"
		},
		"462": {
			"sourceFileName": "src/interfaces/ApiEmoji.ts",
			"qualifiedName": "ApiEmoji.animated"
		},
		"463": {
			"sourceFileName": "src/interfaces/ApiEmoji.ts",
			"qualifiedName": "ApiEmoji.available"
		},
		"464": {
			"sourceFileName": "src/interfaces/ApiEmoji.ts",
			"qualifiedName": "ApiEmoji.id"
		},
		"465": {
			"sourceFileName": "src/interfaces/ApiEmoji.ts",
			"qualifiedName": "ApiEmoji.managed"
		},
		"466": {
			"sourceFileName": "src/interfaces/ApiEmoji.ts",
			"qualifiedName": "ApiEmoji.name"
		},
		"467": {
			"sourceFileName": "src/interfaces/ApiEmoji.ts",
			"qualifiedName": "ApiEmoji.require_colons"
		},
		"468": {
			"sourceFileName": "src/interfaces/ApiEmoji.ts",
			"qualifiedName": "ApiEmoji.roles"
		},
		"469": {
			"sourceFileName": "src/interfaces/ApiEmoji.ts",
			"qualifiedName": "ApiEmoji.user"
		},
		"470": {
			"sourceFileName": "src/interfaces/ApiGroupDmChannel.ts",
			"qualifiedName": "ApiGroupDmChannel"
		},
		"471": {
			"sourceFileName": "src/interfaces/ApiGroupDmChannel.ts",
			"qualifiedName": "ApiGroupDmChannel.icon"
		},
		"472": {
			"sourceFileName": "src/interfaces/ApiGroupDmChannel.ts",
			"qualifiedName": "ApiGroupDmChannel.id"
		},
		"473": {
			"sourceFileName": "src/interfaces/ApiGroupDmChannel.ts",
			"qualifiedName": "ApiGroupDmChannel.last_message_id"
		},
		"474": {
			"sourceFileName": "src/interfaces/ApiGroupDmChannel.ts",
			"qualifiedName": "ApiGroupDmChannel.name"
		},
		"475": {
			"sourceFileName": "src/interfaces/ApiGroupDmChannel.ts",
			"qualifiedName": "ApiGroupDmChannel.owner_id"
		},
		"476": {
			"sourceFileName": "src/interfaces/ApiGroupDmChannel.ts",
			"qualifiedName": "ApiGroupDmChannel.recipients"
		},
		"477": {
			"sourceFileName": "src/interfaces/ApiGroupDmChannel.ts",
			"qualifiedName": "ApiGroupDmChannel.type"
		},
		"478": {
			"sourceFileName": "src/interfaces/ApiGuild.ts",
			"qualifiedName": "ApiGuild"
		},
		"479": {
			"sourceFileName": "src/interfaces/ApiGuild.ts",
			"qualifiedName": "ApiGuild.afk_channel_id"
		},
		"480": {
			"sourceFileName": "src/interfaces/ApiGuild.ts",
			"qualifiedName": "ApiGuild.afk_timeout"
		},
		"481": {
			"sourceFileName": "src/interfaces/ApiGuild.ts",
			"qualifiedName": "ApiGuild.application_id"
		},
		"482": {
			"sourceFileName": "src/interfaces/ApiGuild.ts",
			"qualifiedName": "ApiGuild.approximate_member_count"
		},
		"483": {
			"sourceFileName": "src/interfaces/ApiGuild.ts",
			"qualifiedName": "ApiGuild.approximate_presence_count"
		},
		"484": {
			"sourceFileName": "src/interfaces/ApiGuild.ts",
			"qualifiedName": "ApiGuild.banner"
		},
		"485": {
			"sourceFileName": "src/interfaces/ApiGuild.ts",
			"qualifiedName": "ApiGuild.default_message_notifications"
		},
		"486": {
			"sourceFileName": "src/interfaces/ApiGuild.ts",
			"qualifiedName": "ApiGuild.description"
		},
		"487": {
			"sourceFileName": "src/interfaces/ApiGuild.ts",
			"qualifiedName": "ApiGuild.discovery_splash"
		},
		"488": {
			"sourceFileName": "src/interfaces/ApiGuild.ts",
			"qualifiedName": "ApiGuild.emojis"
		},
		"489": {
			"sourceFileName": "src/interfaces/ApiGuild.ts",
			"qualifiedName": "ApiGuild.explicit_content_filter"
		},
		"490": {
			"sourceFileName": "src/interfaces/ApiGuild.ts",
			"qualifiedName": "ApiGuild.features"
		},
		"491": {
			"sourceFileName": "src/interfaces/ApiGuild.ts",
			"qualifiedName": "ApiGuild.icon"
		},
		"492": {
			"sourceFileName": "src/interfaces/ApiGuild.ts",
			"qualifiedName": "ApiGuild.icon_hash"
		},
		"493": {
			"sourceFileName": "src/interfaces/ApiGuild.ts",
			"qualifiedName": "ApiGuild.id"
		},
		"494": {
			"sourceFileName": "src/interfaces/ApiGuild.ts",
			"qualifiedName": "ApiGuild.max_members"
		},
		"495": {
			"sourceFileName": "src/interfaces/ApiGuild.ts",
			"qualifiedName": "ApiGuild.max_presences"
		},
		"496": {
			"sourceFileName": "src/interfaces/ApiGuild.ts",
			"qualifiedName": "ApiGuild.max_stage_video_channel_users"
		},
		"497": {
			"sourceFileName": "src/interfaces/ApiGuild.ts",
			"qualifiedName": "ApiGuild.max_video_channel_users"
		},
		"498": {
			"sourceFileName": "src/interfaces/ApiGuild.ts",
			"qualifiedName": "ApiGuild.mfa_level"
		},
		"499": {
			"sourceFileName": "src/interfaces/ApiGuild.ts",
			"qualifiedName": "ApiGuild.name"
		},
		"500": {
			"sourceFileName": "src/interfaces/ApiGuild.ts",
			"qualifiedName": "ApiGuild.nsfw_level"
		},
		"501": {
			"sourceFileName": "src/interfaces/ApiGuild.ts",
			"qualifiedName": "ApiGuild.owner"
		},
		"502": {
			"sourceFileName": "src/interfaces/ApiGuild.ts",
			"qualifiedName": "ApiGuild.owner_id"
		},
		"503": {
			"sourceFileName": "src/interfaces/ApiGuild.ts",
			"qualifiedName": "ApiGuild.permissions"
		},
		"504": {
			"sourceFileName": "src/interfaces/ApiGuild.ts",
			"qualifiedName": "ApiGuild.preferred_locale"
		},
		"505": {
			"sourceFileName": "src/interfaces/ApiGuild.ts",
			"qualifiedName": "ApiGuild.premium_progress_bar_enabled"
		},
		"506": {
			"sourceFileName": "src/interfaces/ApiGuild.ts",
			"qualifiedName": "ApiGuild.premium_subscription_count"
		},
		"507": {
			"sourceFileName": "src/interfaces/ApiGuild.ts",
			"qualifiedName": "ApiGuild.premium_tier"
		},
		"508": {
			"sourceFileName": "src/interfaces/ApiGuild.ts",
			"qualifiedName": "ApiGuild.public_updates_channel_id"
		},
		"509": {
			"sourceFileName": "src/interfaces/ApiGuild.ts",
			"qualifiedName": "ApiGuild.region"
		},
		"510": {
			"sourceFileName": "src/interfaces/ApiGuild.ts",
			"qualifiedName": "ApiGuild.roles"
		},
		"511": {
			"sourceFileName": "src/interfaces/ApiGuild.ts",
			"qualifiedName": "ApiGuild.rules_channel_id"
		},
		"512": {
			"sourceFileName": "src/interfaces/ApiGuild.ts",
			"qualifiedName": "ApiGuild.safety_alerts_channel_id"
		},
		"513": {
			"sourceFileName": "src/interfaces/ApiGuild.ts",
			"qualifiedName": "ApiGuild.splash"
		},
		"514": {
			"sourceFileName": "src/interfaces/ApiGuild.ts",
			"qualifiedName": "ApiGuild.stickers"
		},
		"515": {
			"sourceFileName": "src/interfaces/ApiGuild.ts",
			"qualifiedName": "ApiGuild.system_channel_flags"
		},
		"516": {
			"sourceFileName": "src/interfaces/ApiGuild.ts",
			"qualifiedName": "ApiGuild.system_channel_id"
		},
		"517": {
			"sourceFileName": "src/interfaces/ApiGuild.ts",
			"qualifiedName": "ApiGuild.vanity_url_code"
		},
		"518": {
			"sourceFileName": "src/interfaces/ApiGuild.ts",
			"qualifiedName": "ApiGuild.verification_level"
		},
		"519": {
			"sourceFileName": "src/interfaces/ApiGuild.ts",
			"qualifiedName": "ApiGuild.welcome_screen"
		},
		"520": {
			"sourceFileName": "src/interfaces/ApiGuild.ts",
			"qualifiedName": "ApiGuild.widget_channel_id"
		},
		"521": {
			"sourceFileName": "src/interfaces/ApiGuild.ts",
			"qualifiedName": "ApiGuild.widget_enabled"
		},
		"522": {
			"sourceFileName": "src/interfaces/ApiGuild.ts",
			"qualifiedName": "ApiGuildWelcomeScreen"
		},
		"523": {
			"sourceFileName": "src/interfaces/ApiGuild.ts",
			"qualifiedName": "ApiGuildWelcomeScreen.description"
		},
		"524": {
			"sourceFileName": "src/interfaces/ApiGuild.ts",
			"qualifiedName": "ApiGuildWelcomeScreen.welcome_channels"
		},
		"525": {
			"sourceFileName": "src/interfaces/ApiGuild.ts",
			"qualifiedName": "ApiGuildWelcomeScreenChannel"
		},
		"526": {
			"sourceFileName": "src/interfaces/ApiGuild.ts",
			"qualifiedName": "ApiGuildWelcomeScreenChannel.channel_id"
		},
		"527": {
			"sourceFileName": "src/interfaces/ApiGuild.ts",
			"qualifiedName": "ApiGuildWelcomeScreenChannel.description"
		},
		"528": {
			"sourceFileName": "src/interfaces/ApiGuild.ts",
			"qualifiedName": "ApiGuildWelcomeScreenChannel.emoji_id"
		},
		"529": {
			"sourceFileName": "src/interfaces/ApiGuild.ts",
			"qualifiedName": "ApiGuildWelcomeScreenChannel.emoji_name"
		},
		"530": {
			"sourceFileName": "src/interfaces/ApiGuildAnnouncementChannel.ts",
			"qualifiedName": "ApiGuildAnnouncementChannel"
		},
		"531": {
			"sourceFileName": "src/interfaces/ApiGuildAnnouncementChannel.ts",
			"qualifiedName": "ApiGuildAnnouncementChannel.default_auto_archive_duration"
		},
		"532": {
			"sourceFileName": "src/interfaces/ApiGuildAnnouncementChannel.ts",
			"qualifiedName": "ApiGuildAnnouncementChannel.guild_id"
		},
		"533": {
			"sourceFileName": "src/interfaces/ApiGuildAnnouncementChannel.ts",
			"qualifiedName": "ApiGuildAnnouncementChannel.id"
		},
		"534": {
			"sourceFileName": "src/interfaces/ApiGuildAnnouncementChannel.ts",
			"qualifiedName": "ApiGuildAnnouncementChannel.last_message_id"
		},
		"535": {
			"sourceFileName": "src/interfaces/ApiGuildAnnouncementChannel.ts",
			"qualifiedName": "ApiGuildAnnouncementChannel.name"
		},
		"536": {
			"sourceFileName": "src/interfaces/ApiGuildAnnouncementChannel.ts",
			"qualifiedName": "ApiGuildAnnouncementChannel.nsfw"
		},
		"537": {
			"sourceFileName": "src/interfaces/ApiGuildAnnouncementChannel.ts",
			"qualifiedName": "ApiGuildAnnouncementChannel.parent_id"
		},
		"538": {
			"sourceFileName": "src/interfaces/ApiGuildAnnouncementChannel.ts",
			"qualifiedName": "ApiGuildAnnouncementChannel.permission_overwrites"
		},
		"539": {
			"sourceFileName": "src/interfaces/ApiGuildAnnouncementChannel.ts",
			"qualifiedName": "ApiGuildAnnouncementChannel.position"
		},
		"540": {
			"sourceFileName": "src/interfaces/ApiGuildAnnouncementChannel.ts",
			"qualifiedName": "ApiGuildAnnouncementChannel.topic"
		},
		"541": {
			"sourceFileName": "src/interfaces/ApiGuildAnnouncementChannel.ts",
			"qualifiedName": "ApiGuildAnnouncementChannel.type"
		},
		"542": {
			"sourceFileName": "src/interfaces/ApiGuildMember.ts",
			"qualifiedName": "ApiGuildMember"
		},
		"543": {
			"sourceFileName": "src/interfaces/ApiGuildMember.ts",
			"qualifiedName": "ApiGuildMember.avatar"
		},
		"544": {
			"sourceFileName": "src/interfaces/ApiGuildMember.ts",
			"qualifiedName": "ApiGuildMember.communication_disabled_until"
		},
		"545": {
			"sourceFileName": "src/interfaces/ApiGuildMember.ts",
			"qualifiedName": "ApiGuildMember.deaf"
		},
		"546": {
			"sourceFileName": "src/interfaces/ApiGuildMember.ts",
			"qualifiedName": "ApiGuildMember.flags"
		},
		"547": {
			"sourceFileName": "src/interfaces/ApiGuildMember.ts",
			"qualifiedName": "ApiGuildMember.joined_at"
		},
		"548": {
			"sourceFileName": "src/interfaces/ApiGuildMember.ts",
			"qualifiedName": "ApiGuildMember.mute"
		},
		"549": {
			"sourceFileName": "src/interfaces/ApiGuildMember.ts",
			"qualifiedName": "ApiGuildMember.nick"
		},
		"550": {
			"sourceFileName": "src/interfaces/ApiGuildMember.ts",
			"qualifiedName": "ApiGuildMember.pending"
		},
		"551": {
			"sourceFileName": "src/interfaces/ApiGuildMember.ts",
			"qualifiedName": "ApiGuildMember.permissions"
		},
		"552": {
			"sourceFileName": "src/interfaces/ApiGuildMember.ts",
			"qualifiedName": "ApiGuildMember.premium_since"
		},
		"553": {
			"sourceFileName": "src/interfaces/ApiGuildMember.ts",
			"qualifiedName": "ApiGuildMember.roles"
		},
		"554": {
			"sourceFileName": "src/interfaces/ApiGuildMember.ts",
			"qualifiedName": "ApiGuildMember.user"
		},
		"555": {
			"sourceFileName": "src/interfaces/ApiGuildTextChannel.ts",
			"qualifiedName": "ApiGuildTextChannel"
		},
		"556": {
			"sourceFileName": "src/interfaces/ApiGuildTextChannel.ts",
			"qualifiedName": "ApiGuildTextChannel.default_auto_archive_duration"
		},
		"557": {
			"sourceFileName": "src/interfaces/ApiGuildTextChannel.ts",
			"qualifiedName": "ApiGuildTextChannel.guild_id"
		},
		"558": {
			"sourceFileName": "src/interfaces/ApiGuildTextChannel.ts",
			"qualifiedName": "ApiGuildTextChannel.id"
		},
		"559": {
			"sourceFileName": "src/interfaces/ApiGuildTextChannel.ts",
			"qualifiedName": "ApiGuildTextChannel.last_message_id"
		},
		"560": {
			"sourceFileName": "src/interfaces/ApiGuildTextChannel.ts",
			"qualifiedName": "ApiGuildTextChannel.name"
		},
		"561": {
			"sourceFileName": "src/interfaces/ApiGuildTextChannel.ts",
			"qualifiedName": "ApiGuildTextChannel.nsfw"
		},
		"562": {
			"sourceFileName": "src/interfaces/ApiGuildTextChannel.ts",
			"qualifiedName": "ApiGuildTextChannel.parent_id"
		},
		"563": {
			"sourceFileName": "src/interfaces/ApiGuildTextChannel.ts",
			"qualifiedName": "ApiGuildTextChannel.permission_overwrites"
		},
		"564": {
			"sourceFileName": "src/interfaces/ApiGuildTextChannel.ts",
			"qualifiedName": "ApiGuildTextChannel.position"
		},
		"565": {
			"sourceFileName": "src/interfaces/ApiGuildTextChannel.ts",
			"qualifiedName": "ApiGuildTextChannel.rate_limit_per_user"
		},
		"566": {
			"sourceFileName": "src/interfaces/ApiGuildTextChannel.ts",
			"qualifiedName": "ApiGuildTextChannel.topic"
		},
		"567": {
			"sourceFileName": "src/interfaces/ApiGuildTextChannel.ts",
			"qualifiedName": "ApiGuildTextChannel.type"
		},
		"568": {
			"sourceFileName": "src/interfaces/ApiGuildVoiceChannel.ts",
			"qualifiedName": "ApiGuildVoiceChannel"
		},
		"569": {
			"sourceFileName": "src/interfaces/ApiGuildVoiceChannel.ts",
			"qualifiedName": "ApiGuildVoiceChannel.bitrate"
		},
		"570": {
			"sourceFileName": "src/interfaces/ApiGuildVoiceChannel.ts",
			"qualifiedName": "ApiGuildVoiceChannel.guild_id"
		},
		"571": {
			"sourceFileName": "src/interfaces/ApiGuildVoiceChannel.ts",
			"qualifiedName": "ApiGuildVoiceChannel.name"
		},
		"572": {
			"sourceFileName": "src/interfaces/ApiGuildVoiceChannel.ts",
			"qualifiedName": "ApiGuildVoiceChannel.nsfw"
		},
		"573": {
			"sourceFileName": "src/interfaces/ApiGuildVoiceChannel.ts",
			"qualifiedName": "ApiGuildVoiceChannel.parent_id"
		},
		"574": {
			"sourceFileName": "src/interfaces/ApiGuildVoiceChannel.ts",
			"qualifiedName": "ApiGuildVoiceChannel.permission_overwrites"
		},
		"575": {
			"sourceFileName": "src/interfaces/ApiGuildVoiceChannel.ts",
			"qualifiedName": "ApiGuildVoiceChannel.position"
		},
		"576": {
			"sourceFileName": "src/interfaces/ApiGuildVoiceChannel.ts",
			"qualifiedName": "ApiGuildVoiceChannel.rate_limit_per_user"
		},
		"577": {
			"sourceFileName": "src/interfaces/ApiGuildVoiceChannel.ts",
			"qualifiedName": "ApiGuildVoiceChannel.rtc_region"
		},
		"578": {
			"sourceFileName": "src/interfaces/ApiGuildVoiceChannel.ts",
			"qualifiedName": "ApiGuildVoiceChannel.user_limit"
		},
		"579": {
			"sourceFileName": "src/structures/Channel.ts",
			"qualifiedName": "Channel.id"
		},
		"580": {
			"sourceFileName": "src/structures/Channel.ts",
			"qualifiedName": "Channel.type"
		},
		"581": {
			"sourceFileName": "src/interfaces/ApiInteraction.ts",
			"qualifiedName": "ApiInteraction"
		},
		"582": {
			"sourceFileName": "src/interfaces/ApiInteraction.ts",
			"qualifiedName": "ApiInteraction.id"
		},
		"583": {
			"sourceFileName": "src/interfaces/ApiInteraction.ts",
			"qualifiedName": "ApiInteraction.member"
		},
		"584": {
			"sourceFileName": "src/interfaces/ApiInteraction.ts",
			"qualifiedName": "ApiInteraction.name"
		},
		"585": {
			"sourceFileName": "src/interfaces/ApiInteraction.ts",
			"qualifiedName": "ApiInteraction.type"
		},
		"586": {
			"sourceFileName": "src/interfaces/ApiInteraction.ts",
			"qualifiedName": "ApiInteraction.user"
		},
		"587": {
			"sourceFileName": "src/interfaces/ApiInteraction.ts",
			"qualifiedName": "ApiInteractionType"
		},
		"588": {
			"sourceFileName": "src/interfaces/ApiMessage.ts",
			"qualifiedName": "ApiMessage"
		},
		"589": {
			"sourceFileName": "src/interfaces/ApiMessage.ts",
			"qualifiedName": "ApiMessage.activity"
		},
		"590": {
			"sourceFileName": "src/interfaces/ApiMessage.ts",
			"qualifiedName": "ApiMessage.application"
		},
		"591": {
			"sourceFileName": "src/interfaces/ApiMessage.ts",
			"qualifiedName": "ApiMessage.application_id"
		},
		"592": {
			"sourceFileName": "src/interfaces/ApiMessage.ts",
			"qualifiedName": "ApiMessage.attachments"
		},
		"593": {
			"sourceFileName": "src/interfaces/ApiMessage.ts",
			"qualifiedName": "ApiMessage.author"
		},
		"594": {
			"sourceFileName": "src/interfaces/ApiMessage.ts",
			"qualifiedName": "ApiMessage.channel_id"
		},
		"595": {
			"sourceFileName": "src/interfaces/ApiMessage.ts",
			"qualifiedName": "ApiMessage.components"
		},
		"596": {
			"sourceFileName": "src/interfaces/ApiMessage.ts",
			"qualifiedName": "ApiMessage.content"
		},
		"597": {
			"sourceFileName": "src/interfaces/ApiMessage.ts",
			"qualifiedName": "ApiMessage.edited_timestamp"
		},
		"598": {
			"sourceFileName": "src/interfaces/ApiMessage.ts",
			"qualifiedName": "ApiMessage.embeds"
		},
		"599": {
			"sourceFileName": "src/interfaces/ApiMessage.ts",
			"qualifiedName": "ApiMessage.flags"
		},
		"600": {
			"sourceFileName": "src/interfaces/ApiMessage.ts",
			"qualifiedName": "ApiMessage.id"
		},
		"601": {
			"sourceFileName": "src/interfaces/ApiMessage.ts",
			"qualifiedName": "ApiMessage.interaction"
		},
		"602": {
			"sourceFileName": "src/interfaces/ApiMessage.ts",
			"qualifiedName": "ApiMessage.mention_channels"
		},
		"603": {
			"sourceFileName": "src/interfaces/ApiMessage.ts",
			"qualifiedName": "ApiMessage.mention_everyone"
		},
		"604": {
			"sourceFileName": "src/interfaces/ApiMessage.ts",
			"qualifiedName": "ApiMessage.mention_roles"
		},
		"605": {
			"sourceFileName": "src/interfaces/ApiMessage.ts",
			"qualifiedName": "ApiMessage.mentions"
		},
		"606": {
			"sourceFileName": "src/interfaces/ApiMessage.ts",
			"qualifiedName": "ApiMessage.message_reference"
		},
		"607": {
			"sourceFileName": "src/interfaces/ApiMessage.ts",
			"qualifiedName": "ApiMessage.nonce"
		},
		"608": {
			"sourceFileName": "src/interfaces/ApiMessage.ts",
			"qualifiedName": "ApiMessage.pinned"
		},
		"609": {
			"sourceFileName": "src/interfaces/ApiMessage.ts",
			"qualifiedName": "ApiMessage.position"
		},
		"610": {
			"sourceFileName": "src/interfaces/ApiMessage.ts",
			"qualifiedName": "ApiMessage.reactions"
		},
		"611": {
			"sourceFileName": "src/interfaces/ApiMessage.ts",
			"qualifiedName": "ApiMessage.referenced_message"
		},
		"612": {
			"sourceFileName": "src/interfaces/ApiMessage.ts",
			"qualifiedName": "ApiMessage.role_subscription_data"
		},
		"613": {
			"sourceFileName": "src/interfaces/ApiMessage.ts",
			"qualifiedName": "ApiMessage.sticker_items"
		},
		"614": {
			"sourceFileName": "src/interfaces/ApiMessage.ts",
			"qualifiedName": "ApiMessage.stickers"
		},
		"615": {
			"sourceFileName": "src/interfaces/ApiMessage.ts",
			"qualifiedName": "ApiMessage.thread"
		},
		"616": {
			"sourceFileName": "src/interfaces/ApiMessage.ts",
			"qualifiedName": "ApiMessage.timestamp"
		},
		"617": {
			"sourceFileName": "src/interfaces/ApiMessage.ts",
			"qualifiedName": "ApiMessage.tts"
		},
		"618": {
			"sourceFileName": "src/interfaces/ApiMessage.ts",
			"qualifiedName": "ApiMessage.type"
		},
		"619": {
			"sourceFileName": "src/interfaces/ApiMessage.ts",
			"qualifiedName": "ApiMessage.webhook_id"
		},
		"620": {
			"sourceFileName": "src/interfaces/ApiMessage.ts",
			"qualifiedName": "ApiMessageChannelMention"
		},
		"621": {
			"sourceFileName": "src/interfaces/ApiMessage.ts",
			"qualifiedName": "ApiMessageChannelMention.id"
		},
		"622": {
			"sourceFileName": "src/interfaces/ApiMessage.ts",
			"qualifiedName": "ApiMessageChannelMention.guild_id"
		},
		"623": {
			"sourceFileName": "src/interfaces/ApiMessage.ts",
			"qualifiedName": "ApiMessageChannelMention.type"
		},
		"624": {
			"sourceFileName": "src/interfaces/ApiMessage.ts",
			"qualifiedName": "ApiMessageChannelMention.name"
		},
		"625": {
			"sourceFileName": "src/interfaces/ApiReaction.ts",
			"qualifiedName": "ApiReaction"
		},
		"626": {
			"sourceFileName": "src/interfaces/ApiReaction.ts",
			"qualifiedName": "ApiReaction.count"
		},
		"627": {
			"sourceFileName": "src/interfaces/ApiReaction.ts",
			"qualifiedName": "ApiReaction.count_details"
		},
		"628": {
			"sourceFileName": "src/interfaces/ApiReaction.ts",
			"qualifiedName": "ApiReaction.me"
		},
		"629": {
			"sourceFileName": "src/interfaces/ApiReaction.ts",
			"qualifiedName": "ApiReaction.me_burst"
		},
		"630": {
			"sourceFileName": "src/interfaces/ApiReaction.ts",
			"qualifiedName": "ApiReaction.emoji"
		},
		"631": {
			"sourceFileName": "src/interfaces/ApiReaction.ts",
			"qualifiedName": "ApiReaction.burst_colors"
		},
		"632": {
			"sourceFileName": "src/interfaces/ApiReaction.ts",
			"qualifiedName": "ApiReactionCountDetails"
		},
		"633": {
			"sourceFileName": "src/interfaces/ApiReaction.ts",
			"qualifiedName": "ApiReactionCountDetails.burst"
		},
		"634": {
			"sourceFileName": "src/interfaces/ApiReaction.ts",
			"qualifiedName": "ApiReactionCountDetails.normal"
		},
		"635": {
			"sourceFileName": "src/interfaces/ApiRecipientsEntity.ts",
			"qualifiedName": "ApiRecipientsEntity"
		},
		"636": {
			"sourceFileName": "src/interfaces/ApiRecipientsEntity.ts",
			"qualifiedName": "ApiRecipientsEntity.avatar"
		},
		"637": {
			"sourceFileName": "src/interfaces/ApiRecipientsEntity.ts",
			"qualifiedName": "ApiRecipientsEntity.discriminator"
		},
		"638": {
			"sourceFileName": "src/interfaces/ApiRecipientsEntity.ts",
			"qualifiedName": "ApiRecipientsEntity.id"
		},
		"639": {
			"sourceFileName": "src/interfaces/ApiRecipientsEntity.ts",
			"qualifiedName": "ApiRecipientsEntity.username"
		},
		"640": {
			"sourceFileName": "src/interfaces/ApiRole.ts",
			"qualifiedName": "ApiRole"
		},
		"641": {
			"sourceFileName": "src/interfaces/ApiRole.ts",
			"qualifiedName": "ApiRole.color"
		},
		"642": {
			"sourceFileName": "src/interfaces/ApiRole.ts",
			"qualifiedName": "ApiRole.flags"
		},
		"643": {
			"sourceFileName": "src/interfaces/ApiRole.ts",
			"qualifiedName": "ApiRole.hoist"
		},
		"644": {
			"sourceFileName": "src/interfaces/ApiRole.ts",
			"qualifiedName": "ApiRole.icon"
		},
		"645": {
			"sourceFileName": "src/interfaces/ApiRole.ts",
			"qualifiedName": "ApiRole.id"
		},
		"646": {
			"sourceFileName": "src/interfaces/ApiRole.ts",
			"qualifiedName": "ApiRole.managed"
		},
		"647": {
			"sourceFileName": "src/interfaces/ApiRole.ts",
			"qualifiedName": "ApiRole.mentionable"
		},
		"648": {
			"sourceFileName": "src/interfaces/ApiRole.ts",
			"qualifiedName": "ApiRole.name"
		},
		"649": {
			"sourceFileName": "src/interfaces/ApiRole.ts",
			"qualifiedName": "ApiRole.permissions"
		},
		"650": {
			"sourceFileName": "src/interfaces/ApiRole.ts",
			"qualifiedName": "ApiRole.position"
		},
		"651": {
			"sourceFileName": "src/interfaces/ApiRole.ts",
			"qualifiedName": "ApiRole.tags"
		},
		"652": {
			"sourceFileName": "src/interfaces/ApiRole.ts",
			"qualifiedName": "ApiRole.unicode_emoji"
		},
		"653": {
			"sourceFileName": "src/interfaces/ApiRole.ts",
			"qualifiedName": "ApiRoleTag"
		},
		"654": {
			"sourceFileName": "src/interfaces/ApiRole.ts",
			"qualifiedName": "ApiRoleTag.available_for_purchase"
		},
		"655": {
			"sourceFileName": "src/interfaces/ApiRole.ts",
			"qualifiedName": "ApiRoleTag.bot_id"
		},
		"656": {
			"sourceFileName": "src/interfaces/ApiRole.ts",
			"qualifiedName": "ApiRoleTag.guild_connections"
		},
		"657": {
			"sourceFileName": "src/interfaces/ApiRole.ts",
			"qualifiedName": "ApiRoleTag.integration_id"
		},
		"658": {
			"sourceFileName": "src/interfaces/ApiRole.ts",
			"qualifiedName": "ApiRoleTag.premium_subscriber"
		},
		"659": {
			"sourceFileName": "src/interfaces/ApiRole.ts",
			"qualifiedName": "ApiRoleTag.subscription_listing_id"
		},
		"660": {
			"sourceFileName": "src/interfaces/ApiRole.ts",
			"qualifiedName": "ApiRoleSubscriptionData"
		},
		"661": {
			"sourceFileName": "src/interfaces/ApiRole.ts",
			"qualifiedName": "ApiRoleSubscriptionData.is_renewal"
		},
		"662": {
			"sourceFileName": "src/interfaces/ApiRole.ts",
			"qualifiedName": "ApiRoleSubscriptionData.role_subscription_listing_id"
		},
		"663": {
			"sourceFileName": "src/interfaces/ApiRole.ts",
			"qualifiedName": "ApiRoleSubscriptionData.tier_name"
		},
		"664": {
			"sourceFileName": "src/interfaces/ApiRole.ts",
			"qualifiedName": "ApiRoleSubscriptionData.total_months_subscribed"
		},
		"665": {
			"sourceFileName": "src/interfaces/ApiSticker.ts",
			"qualifiedName": "ApiSticker"
		},
		"666": {
			"sourceFileName": "src/interfaces/ApiSticker.ts",
			"qualifiedName": "ApiSticker.asset"
		},
		"667": {
			"sourceFileName": "src/interfaces/ApiSticker.ts",
			"qualifiedName": "ApiSticker.available"
		},
		"668": {
			"sourceFileName": "src/interfaces/ApiSticker.ts",
			"qualifiedName": "ApiSticker.description"
		},
		"669": {
			"sourceFileName": "src/interfaces/ApiSticker.ts",
			"qualifiedName": "ApiSticker.format_type"
		},
		"670": {
			"sourceFileName": "src/interfaces/ApiSticker.ts",
			"qualifiedName": "ApiSticker.guild_id"
		},
		"671": {
			"sourceFileName": "src/interfaces/ApiSticker.ts",
			"qualifiedName": "ApiSticker.id"
		},
		"672": {
			"sourceFileName": "src/interfaces/ApiSticker.ts",
			"qualifiedName": "ApiSticker.name"
		},
		"673": {
			"sourceFileName": "src/interfaces/ApiSticker.ts",
			"qualifiedName": "ApiSticker.pack_id"
		},
		"674": {
			"sourceFileName": "src/interfaces/ApiSticker.ts",
			"qualifiedName": "ApiSticker.sort_value"
		},
		"675": {
			"sourceFileName": "src/interfaces/ApiSticker.ts",
			"qualifiedName": "ApiSticker.tags"
		},
		"676": {
			"sourceFileName": "src/interfaces/ApiSticker.ts",
			"qualifiedName": "ApiSticker.type"
		},
		"677": {
			"sourceFileName": "src/interfaces/ApiSticker.ts",
			"qualifiedName": "ApiSticker.user"
		},
		"678": {
			"sourceFileName": "src/interfaces/ApiSticker.ts",
			"qualifiedName": "ApiStickerItem"
		},
		"679": {
			"sourceFileName": "src/interfaces/ApiSticker.ts",
			"qualifiedName": "ApiStickerItem.format_type"
		},
		"680": {
			"sourceFileName": "src/interfaces/ApiSticker.ts",
			"qualifiedName": "ApiStickerItem.id"
		},
		"681": {
			"sourceFileName": "src/interfaces/ApiSticker.ts",
			"qualifiedName": "ApiStickerItem.name"
		},
		"682": {
			"sourceFileName": "src/interfaces/ApiTeam.ts",
			"qualifiedName": "ApiTeam"
		},
		"683": {
			"sourceFileName": "src/interfaces/ApiTeam.ts",
			"qualifiedName": "ApiTeam.icon"
		},
		"684": {
			"sourceFileName": "src/interfaces/ApiTeam.ts",
			"qualifiedName": "ApiTeam.id"
		},
		"685": {
			"sourceFileName": "src/interfaces/ApiTeam.ts",
			"qualifiedName": "ApiTeam.members"
		},
		"686": {
			"sourceFileName": "src/interfaces/ApiTeam.ts",
			"qualifiedName": "ApiTeam.name"
		},
		"687": {
			"sourceFileName": "src/interfaces/ApiTeam.ts",
			"qualifiedName": "ApiTeam.owner_user_id"
		},
		"688": {
			"sourceFileName": "src/interfaces/ApiTeam.ts",
			"qualifiedName": "ApiTeamMember"
		},
		"689": {
			"sourceFileName": "src/interfaces/ApiTeam.ts",
			"qualifiedName": "ApiTeamMember.membership_state"
		},
		"690": {
			"sourceFileName": "src/interfaces/ApiTeam.ts",
			"qualifiedName": "ApiTeamMember.role"
		},
		"691": {
			"sourceFileName": "src/interfaces/ApiTeam.ts",
			"qualifiedName": "ApiTeamMember.team_id"
		},
		"692": {
			"sourceFileName": "src/interfaces/ApiTeam.ts",
			"qualifiedName": "ApiTeamMember.user"
		},
		"693": {
			"sourceFileName": "src/interfaces/ApiThreadChannel.ts",
			"qualifiedName": "ApiThreadChannel"
		},
		"694": {
			"sourceFileName": "src/interfaces/ApiThreadChannel.ts",
			"qualifiedName": "ApiThreadChannel.guild_id"
		},
		"695": {
			"sourceFileName": "src/interfaces/ApiThreadChannel.ts",
			"qualifiedName": "ApiThreadChannel.last_message_id"
		},
		"696": {
			"sourceFileName": "src/interfaces/ApiThreadChannel.ts",
			"qualifiedName": "ApiThreadChannel.member_count"
		},
		"697": {
			"sourceFileName": "src/interfaces/ApiThreadChannel.ts",
			"qualifiedName": "ApiThreadChannel.message_count"
		},
		"698": {
			"sourceFileName": "src/interfaces/ApiThreadChannel.ts",
			"qualifiedName": "ApiThreadChannel.name"
		},
		"699": {
			"sourceFileName": "src/interfaces/ApiThreadChannel.ts",
			"qualifiedName": "ApiThreadChannel.owner_id"
		},
		"700": {
			"sourceFileName": "src/interfaces/ApiThreadChannel.ts",
			"qualifiedName": "ApiThreadChannel.parent_id"
		},
		"701": {
			"sourceFileName": "src/interfaces/ApiThreadChannel.ts",
			"qualifiedName": "ApiThreadChannel.rate_limit_per_user"
		},
		"702": {
			"sourceFileName": "src/interfaces/ApiThreadChannel.ts",
			"qualifiedName": "ApiThreadChannel.thread_metadata"
		},
		"703": {
			"sourceFileName": "src/interfaces/ApiThreadChannel.ts",
			"qualifiedName": "ApiThreadChannel.total_message_sent"
		},
		"704": {
			"sourceFileName": "src/interfaces/ApiChannel.ts",
			"qualifiedName": "ApiChannel.id"
		},
		"705": {
			"sourceFileName": "src/interfaces/ApiChannel.ts",
			"qualifiedName": "ApiChannel.type"
		},
		"706": {
			"sourceFileName": "src/interfaces/ApiThreadChannel.ts",
			"qualifiedName": "ApiThreadMetadata"
		},
		"707": {
			"sourceFileName": "src/interfaces/ApiThreadChannel.ts",
			"qualifiedName": "ApiThreadMetadata.archive_timestamp"
		},
		"708": {
			"sourceFileName": "src/interfaces/ApiThreadChannel.ts",
			"qualifiedName": "ApiThreadMetadata.archived"
		},
		"709": {
			"sourceFileName": "src/interfaces/ApiThreadChannel.ts",
			"qualifiedName": "ApiThreadMetadata.auto_archive_duration"
		},
		"710": {
			"sourceFileName": "src/interfaces/ApiThreadChannel.ts",
			"qualifiedName": "ApiThreadMetadata.locked"
		},
		"711": {
			"sourceFileName": "src/interfaces/ApiUser.ts",
			"qualifiedName": "ApiUser"
		},
		"712": {
			"sourceFileName": "src/interfaces/ApiUser.ts",
			"qualifiedName": "ApiUser.accent_color"
		},
		"713": {
			"sourceFileName": "src/interfaces/ApiUser.ts",
			"qualifiedName": "ApiUser.avatar"
		},
		"714": {
			"sourceFileName": "src/interfaces/ApiUser.ts",
			"qualifiedName": "ApiUser.avatar_decoration"
		},
		"715": {
			"sourceFileName": "src/interfaces/ApiUser.ts",
			"qualifiedName": "ApiUser.banner"
		},
		"716": {
			"sourceFileName": "src/interfaces/ApiUser.ts",
			"qualifiedName": "ApiUser.bot"
		},
		"717": {
			"sourceFileName": "src/interfaces/ApiUser.ts",
			"qualifiedName": "ApiUser.discriminator"
		},
		"718": {
			"sourceFileName": "src/interfaces/ApiUser.ts",
			"qualifiedName": "ApiUser.email"
		},
		"719": {
			"sourceFileName": "src/interfaces/ApiUser.ts",
			"qualifiedName": "ApiUser.flags"
		},
		"720": {
			"sourceFileName": "src/interfaces/ApiUser.ts",
			"qualifiedName": "ApiUser.global_name"
		},
		"721": {
			"sourceFileName": "src/interfaces/ApiUser.ts",
			"qualifiedName": "ApiUser.id"
		},
		"722": {
			"sourceFileName": "src/interfaces/ApiUser.ts",
			"qualifiedName": "ApiUser.locale"
		},
		"723": {
			"sourceFileName": "src/interfaces/ApiUser.ts",
			"qualifiedName": "ApiUser.mfa_enabled"
		},
		"724": {
			"sourceFileName": "src/interfaces/ApiUser.ts",
			"qualifiedName": "ApiUser.premium_type"
		},
		"725": {
			"sourceFileName": "src/interfaces/ApiUser.ts",
			"qualifiedName": "ApiUser.public_flags"
		},
		"726": {
			"sourceFileName": "src/interfaces/ApiUser.ts",
			"qualifiedName": "ApiUser.system"
		},
		"727": {
			"sourceFileName": "src/interfaces/ApiUser.ts",
			"qualifiedName": "ApiUser.username"
		},
		"728": {
			"sourceFileName": "src/interfaces/ApiUser.ts",
			"qualifiedName": "ApiUser.verified"
		},
		"729": {
			"sourceFileName": "src/interfaces/ClientEvents.ts",
			"qualifiedName": "ClientEvents"
		},
		"730": {
			"sourceFileName": "src/interfaces/ClientEvents.ts",
			"qualifiedName": "ClientEvents.ready"
		},
		"731": {
			"sourceFileName": "src/interfaces/ClientEvents.ts",
			"qualifiedName": "ClientEvents.messageCreate"
		},
		"732": {
			"sourceFileName": "src/interfaces/ClientOptions.ts",
			"qualifiedName": "ClientOptions"
		},
		"733": {
			"sourceFileName": "src/interfaces/ClientOptions.ts",
			"qualifiedName": "ClientOptions.token"
		},
		"734": {
			"sourceFileName": "src/interfaces/ClientOptions.ts",
			"qualifiedName": "ClientOptions.intents"
		},
		"735": {
			"sourceFileName": "src/structures/Activity.ts",
			"qualifiedName": "Activity"
		},
		"736": {
			"sourceFileName": "src/structures/Activity.ts",
			"qualifiedName": "Activity.__constructor"
		},
		"737": {
			"sourceFileName": "src/structures/Activity.ts",
			"qualifiedName": "Activity"
		},
		"738": {
			"sourceFileName": "src/structures/Activity.ts",
			"qualifiedName": "data"
		},
		"739": {
			"sourceFileName": "src/structures/Activity.ts",
			"qualifiedName": "Activity.partyId"
		},
		"740": {
			"sourceFileName": "src/structures/Activity.ts",
			"qualifiedName": "Activity.type"
		},
		"741": {
			"sourceFileName": "src/structures/Application.ts",
			"qualifiedName": "Application"
		},
		"742": {
			"sourceFileName": "src/structures/Application.ts",
			"qualifiedName": "Application.__constructor"
		},
		"743": {
			"sourceFileName": "src/structures/Application.ts",
			"qualifiedName": "Application"
		},
		"744": {
			"sourceFileName": "src/structures/Application.ts",
			"qualifiedName": "data"
		},
		"745": {
			"sourceFileName": "src/structures/Application.ts",
			"qualifiedName": "Application.approximateGuildCount"
		},
		"746": {
			"sourceFileName": "src/structures/Application.ts",
			"qualifiedName": "Application.botPublic"
		},
		"747": {
			"sourceFileName": "src/structures/Application.ts",
			"qualifiedName": "Application.botRequireCodeGrant"
		},
		"748": {
			"sourceFileName": "src/structures/Application.ts",
			"qualifiedName": "Application.coverImage"
		},
		"749": {
			"sourceFileName": "src/structures/Application.ts",
			"qualifiedName": "Application.customInstallUrl"
		},
		"750": {
			"sourceFileName": "src/structures/Application.ts",
			"qualifiedName": "Application.description"
		},
		"751": {
			"sourceFileName": "src/structures/Application.ts",
			"qualifiedName": "Application.flags"
		},
		"752": {
			"sourceFileName": "src/structures/Application.ts",
			"qualifiedName": "Application.guild"
		},
		"753": {
			"sourceFileName": "src/structures/Application.ts",
			"qualifiedName": "Application.guildId"
		},
		"754": {
			"sourceFileName": "src/structures/Application.ts",
			"qualifiedName": "Application.icon"
		},
		"755": {
			"sourceFileName": "src/structures/Application.ts",
			"qualifiedName": "Application.id"
		},
		"756": {
			"sourceFileName": "src/structures/Application.ts",
			"qualifiedName": "Application.installParams"
		},
		"757": {
			"sourceFileName": "src/structures/Application.ts",
			"qualifiedName": "Application.owner"
		},
		"758": {
			"sourceFileName": "src/structures/Application.ts",
			"qualifiedName": "Application.privacyPolicyUrl"
		},
		"759": {
			"sourceFileName": "src/structures/Application.ts",
			"qualifiedName": "Application.rpcOrigins"
		},
		"760": {
			"sourceFileName": "src/structures/Application.ts",
			"qualifiedName": "Application.roleConnectionsVerificationUrl"
		},
		"761": {
			"sourceFileName": "src/structures/Application.ts",
			"qualifiedName": "Application.slug"
		},
		"762": {
			"sourceFileName": "src/structures/Application.ts",
			"qualifiedName": "Application.summary"
		},
		"763": {
			"sourceFileName": "src/structures/Application.ts",
			"qualifiedName": "Application.tags"
		},
		"764": {
			"sourceFileName": "src/structures/Application.ts",
			"qualifiedName": "Application.team"
		},
		"765": {
			"sourceFileName": "src/structures/Application.ts",
			"qualifiedName": "Application.termsOfServiceUrl"
		},
		"766": {
			"sourceFileName": "src/structures/Application.ts",
			"qualifiedName": "Application.verifyKey"
		},
		"767": {
			"sourceFileName": "src/structures/Application.ts",
			"qualifiedName": "ApplicationInstallParams"
		},
		"768": {
			"sourceFileName": "src/structures/Application.ts",
			"qualifiedName": "ApplicationInstallParams.__constructor"
		},
		"769": {
			"sourceFileName": "src/structures/Application.ts",
			"qualifiedName": "ApplicationInstallParams"
		},
		"770": {
			"sourceFileName": "src/structures/Application.ts",
			"qualifiedName": "data"
		},
		"771": {
			"sourceFileName": "src/structures/Application.ts",
			"qualifiedName": "ApplicationInstallParams.permissions"
		},
		"772": {
			"sourceFileName": "src/structures/Application.ts",
			"qualifiedName": "ApplicationInstallParams.scopes"
		},
		"773": {
			"sourceFileName": "src/structures/Attachment.ts",
			"qualifiedName": "Attachment"
		},
		"774": {
			"sourceFileName": "src/structures/Attachment.ts",
			"qualifiedName": "Attachment.__constructor"
		},
		"775": {
			"sourceFileName": "src/structures/Attachment.ts",
			"qualifiedName": "Attachment"
		},
		"776": {
			"sourceFileName": "src/structures/Attachment.ts",
			"qualifiedName": "data"
		},
		"777": {
			"sourceFileName": "src/structures/Attachment.ts",
			"qualifiedName": "Attachment.contentType"
		},
		"778": {
			"sourceFileName": "src/structures/Attachment.ts",
			"qualifiedName": "Attachment.description"
		},
		"779": {
			"sourceFileName": "src/structures/Attachment.ts",
			"qualifiedName": "Attachment.durationSecs"
		},
		"780": {
			"sourceFileName": "src/structures/Attachment.ts",
			"qualifiedName": "Attachment.ephemeral"
		},
		"781": {
			"sourceFileName": "src/structures/Attachment.ts",
			"qualifiedName": "Attachment.filename"
		},
		"782": {
			"sourceFileName": "src/structures/Attachment.ts",
			"qualifiedName": "Attachment.flags"
		},
		"783": {
			"sourceFileName": "src/structures/Attachment.ts",
			"qualifiedName": "Attachment.height"
		},
		"784": {
			"sourceFileName": "src/structures/Attachment.ts",
			"qualifiedName": "Attachment.id"
		},
		"785": {
			"sourceFileName": "src/structures/Attachment.ts",
			"qualifiedName": "Attachment.proxyUrl"
		},
		"786": {
			"sourceFileName": "src/structures/Attachment.ts",
			"qualifiedName": "Attachment.size"
		},
		"787": {
			"sourceFileName": "src/structures/Attachment.ts",
			"qualifiedName": "Attachment.url"
		},
		"788": {
			"sourceFileName": "src/structures/Attachment.ts",
			"qualifiedName": "Attachment.waveform"
		},
		"789": {
			"sourceFileName": "src/structures/Attachment.ts",
			"qualifiedName": "Attachment.width"
		},
		"790": {
			"sourceFileName": "src/structures/Channel.ts",
			"qualifiedName": "Channel"
		},
		"791": {
			"sourceFileName": "src/structures/Channel.ts",
			"qualifiedName": "Channel.__constructor"
		},
		"792": {
			"sourceFileName": "src/structures/Channel.ts",
			"qualifiedName": "Channel"
		},
		"793": {
			"sourceFileName": "src/structures/Channel.ts",
			"qualifiedName": "data"
		},
		"794": {
			"sourceFileName": "src/structures/Channel.ts",
			"qualifiedName": "Channel.id"
		},
		"795": {
			"sourceFileName": "src/structures/Channel.ts",
			"qualifiedName": "Channel.type"
		},
		"796": {
			"sourceFileName": "src/structures/Embed.ts",
			"qualifiedName": "Embed"
		},
		"797": {
			"sourceFileName": "src/structures/Embed.ts",
			"qualifiedName": "Embed.__constructor"
		},
		"798": {
			"sourceFileName": "src/structures/Embed.ts",
			"qualifiedName": "Embed"
		},
		"799": {
			"sourceFileName": "src/structures/Embed.ts",
			"qualifiedName": "data"
		},
		"800": {
			"sourceFileName": "src/structures/Embed.ts",
			"qualifiedName": "Embed.author"
		},
		"801": {
			"sourceFileName": "src/structures/Embed.ts",
			"qualifiedName": "Embed.color"
		},
		"802": {
			"sourceFileName": "src/structures/Embed.ts",
			"qualifiedName": "Embed.description"
		},
		"803": {
			"sourceFileName": "src/structures/Embed.ts",
			"qualifiedName": "Embed.fields"
		},
		"804": {
			"sourceFileName": "src/structures/Embed.ts",
			"qualifiedName": "Embed.footer"
		},
		"805": {
			"sourceFileName": "src/structures/Embed.ts",
			"qualifiedName": "Embed.image"
		},
		"806": {
			"sourceFileName": "src/structures/Embed.ts",
			"qualifiedName": "Embed.provider"
		},
		"807": {
			"sourceFileName": "src/structures/Embed.ts",
			"qualifiedName": "Embed.thumbnail"
		},
		"808": {
			"sourceFileName": "src/structures/Embed.ts",
			"qualifiedName": "Embed.timestamp"
		},
		"809": {
			"sourceFileName": "src/structures/Embed.ts",
			"qualifiedName": "Embed.title"
		},
		"810": {
			"sourceFileName": "src/structures/Embed.ts",
			"qualifiedName": "Embed.type"
		},
		"811": {
			"sourceFileName": "src/structures/Embed.ts",
			"qualifiedName": "Embed.url"
		},
		"812": {
			"sourceFileName": "src/structures/Embed.ts",
			"qualifiedName": "Embed.video"
		},
		"813": {
			"sourceFileName": "src/structures/Embed.ts",
			"qualifiedName": "EmbedFooter"
		},
		"814": {
			"sourceFileName": "src/structures/Embed.ts",
			"qualifiedName": "EmbedFooter.__constructor"
		},
		"815": {
			"sourceFileName": "src/structures/Embed.ts",
			"qualifiedName": "EmbedFooter"
		},
		"816": {
			"sourceFileName": "src/structures/Embed.ts",
			"qualifiedName": "data"
		},
		"817": {
			"sourceFileName": "src/structures/Embed.ts",
			"qualifiedName": "EmbedFooter.iconUrl"
		},
		"818": {
			"sourceFileName": "src/structures/Embed.ts",
			"qualifiedName": "EmbedFooter.proxyIconUrl"
		},
		"819": {
			"sourceFileName": "src/structures/Embed.ts",
			"qualifiedName": "EmbedFooter.text"
		},
		"820": {
			"sourceFileName": "src/structures/Embed.ts",
			"qualifiedName": "EmbedImage"
		},
		"821": {
			"sourceFileName": "src/structures/Embed.ts",
			"qualifiedName": "EmbedImage.__constructor"
		},
		"822": {
			"sourceFileName": "src/structures/Embed.ts",
			"qualifiedName": "EmbedImage"
		},
		"823": {
			"sourceFileName": "src/structures/Embed.ts",
			"qualifiedName": "data"
		},
		"824": {
			"sourceFileName": "src/structures/Embed.ts",
			"qualifiedName": "EmbedImage.height"
		},
		"825": {
			"sourceFileName": "src/structures/Embed.ts",
			"qualifiedName": "EmbedImage.proxyUrl"
		},
		"826": {
			"sourceFileName": "src/structures/Embed.ts",
			"qualifiedName": "EmbedImage.url"
		},
		"827": {
			"sourceFileName": "src/structures/Embed.ts",
			"qualifiedName": "EmbedImage.width"
		},
		"828": {
			"sourceFileName": "src/structures/Embed.ts",
			"qualifiedName": "EmbedThumbnail"
		},
		"829": {
			"sourceFileName": "src/structures/Embed.ts",
			"qualifiedName": "EmbedThumbnail.__constructor"
		},
		"830": {
			"sourceFileName": "src/structures/Embed.ts",
			"qualifiedName": "EmbedThumbnail"
		},
		"831": {
			"sourceFileName": "src/structures/Embed.ts",
			"qualifiedName": "data"
		},
		"832": {
			"sourceFileName": "src/structures/Embed.ts",
			"qualifiedName": "EmbedThumbnail.height"
		},
		"833": {
			"sourceFileName": "src/structures/Embed.ts",
			"qualifiedName": "EmbedThumbnail.proxyUrl"
		},
		"834": {
			"sourceFileName": "src/structures/Embed.ts",
			"qualifiedName": "EmbedThumbnail.url"
		},
		"835": {
			"sourceFileName": "src/structures/Embed.ts",
			"qualifiedName": "EmbedThumbnail.width"
		},
		"836": {
			"sourceFileName": "src/structures/Embed.ts",
			"qualifiedName": "EmbedVideo"
		},
		"837": {
			"sourceFileName": "src/structures/Embed.ts",
			"qualifiedName": "EmbedVideo.__constructor"
		},
		"838": {
			"sourceFileName": "src/structures/Embed.ts",
			"qualifiedName": "EmbedVideo"
		},
		"839": {
			"sourceFileName": "src/structures/Embed.ts",
			"qualifiedName": "data"
		},
		"840": {
			"sourceFileName": "src/structures/Embed.ts",
			"qualifiedName": "EmbedVideo.height"
		},
		"841": {
			"sourceFileName": "src/structures/Embed.ts",
			"qualifiedName": "EmbedVideo.proxyUrl"
		},
		"842": {
			"sourceFileName": "src/structures/Embed.ts",
			"qualifiedName": "EmbedVideo.url"
		},
		"843": {
			"sourceFileName": "src/structures/Embed.ts",
			"qualifiedName": "EmbedVideo.width"
		},
		"844": {
			"sourceFileName": "src/structures/Embed.ts",
			"qualifiedName": "EmbedProvider"
		},
		"845": {
			"sourceFileName": "src/structures/Embed.ts",
			"qualifiedName": "EmbedProvider.__constructor"
		},
		"846": {
			"sourceFileName": "src/structures/Embed.ts",
			"qualifiedName": "EmbedProvider"
		},
		"847": {
			"sourceFileName": "src/structures/Embed.ts",
			"qualifiedName": "data"
		},
		"848": {
			"sourceFileName": "src/structures/Embed.ts",
			"qualifiedName": "EmbedProvider.name"
		},
		"849": {
			"sourceFileName": "src/structures/Embed.ts",
			"qualifiedName": "EmbedProvider.url"
		},
		"850": {
			"sourceFileName": "src/structures/Embed.ts",
			"qualifiedName": "EmbedAuthor"
		},
		"851": {
			"sourceFileName": "src/structures/Embed.ts",
			"qualifiedName": "EmbedAuthor.__constructor"
		},
		"852": {
			"sourceFileName": "src/structures/Embed.ts",
			"qualifiedName": "EmbedAuthor"
		},
		"853": {
			"sourceFileName": "src/structures/Embed.ts",
			"qualifiedName": "data"
		},
		"854": {
			"sourceFileName": "src/structures/Embed.ts",
			"qualifiedName": "EmbedAuthor.iconUrl"
		},
		"855": {
			"sourceFileName": "src/structures/Embed.ts",
			"qualifiedName": "EmbedAuthor.name"
		},
		"856": {
			"sourceFileName": "src/structures/Embed.ts",
			"qualifiedName": "EmbedAuthor.proxyIconUrl"
		},
		"857": {
			"sourceFileName": "src/structures/Embed.ts",
			"qualifiedName": "EmbedAuthor.url"
		},
		"858": {
			"sourceFileName": "src/structures/Embed.ts",
			"qualifiedName": "EmbedField"
		},
		"859": {
			"sourceFileName": "src/structures/Embed.ts",
			"qualifiedName": "EmbedField.__constructor"
		},
		"860": {
			"sourceFileName": "src/structures/Embed.ts",
			"qualifiedName": "EmbedField"
		},
		"861": {
			"sourceFileName": "src/structures/Embed.ts",
			"qualifiedName": "data"
		},
		"862": {
			"sourceFileName": "src/structures/Embed.ts",
			"qualifiedName": "EmbedField.inline"
		},
		"863": {
			"sourceFileName": "src/structures/Embed.ts",
			"qualifiedName": "EmbedField.name"
		},
		"864": {
			"sourceFileName": "src/structures/Embed.ts",
			"qualifiedName": "EmbedField.value"
		},
		"865": {
			"sourceFileName": "src/structures/Emoji.ts",
			"qualifiedName": "Emoji"
		},
		"866": {
			"sourceFileName": "src/structures/Emoji.ts",
			"qualifiedName": "Emoji.__constructor"
		},
		"867": {
			"sourceFileName": "src/structures/Emoji.ts",
			"qualifiedName": "Emoji"
		},
		"868": {
			"sourceFileName": "src/structures/Emoji.ts",
			"qualifiedName": "data"
		},
		"869": {
			"sourceFileName": "src/structures/Emoji.ts",
			"qualifiedName": "Emoji.animated"
		},
		"870": {
			"sourceFileName": "src/structures/Emoji.ts",
			"qualifiedName": "Emoji.available"
		},
		"871": {
			"sourceFileName": "src/structures/Emoji.ts",
			"qualifiedName": "Emoji.id"
		},
		"872": {
			"sourceFileName": "src/structures/Emoji.ts",
			"qualifiedName": "Emoji.managed"
		},
		"873": {
			"sourceFileName": "src/structures/Emoji.ts",
			"qualifiedName": "Emoji.name"
		},
		"874": {
			"sourceFileName": "src/structures/Emoji.ts",
			"qualifiedName": "Emoji.requireColons"
		},
		"875": {
			"sourceFileName": "src/structures/Emoji.ts",
			"qualifiedName": "Emoji.roles"
		},
		"876": {
			"sourceFileName": "src/structures/Emoji.ts",
			"qualifiedName": "Emoji.user"
		},
		"877": {
			"sourceFileName": "src/structures/Guild.ts",
			"qualifiedName": "Guild"
		},
		"878": {
			"sourceFileName": "src/structures/Guild.ts",
			"qualifiedName": "Guild.__constructor"
		},
		"879": {
			"sourceFileName": "src/structures/Guild.ts",
			"qualifiedName": "Guild"
		},
		"880": {
			"sourceFileName": "src/structures/Guild.ts",
			"qualifiedName": "data"
		},
		"881": {
			"sourceFileName": "src/structures/Guild.ts",
			"qualifiedName": "Guild.afkChannelId"
		},
		"882": {
			"sourceFileName": "src/structures/Guild.ts",
			"qualifiedName": "Guild.afkTimeout"
		},
		"883": {
			"sourceFileName": "src/structures/Guild.ts",
			"qualifiedName": "Guild.applicationId"
		},
		"884": {
			"sourceFileName": "src/structures/Guild.ts",
			"qualifiedName": "Guild.approximateMemberCount"
		},
		"885": {
			"sourceFileName": "src/structures/Guild.ts",
			"qualifiedName": "Guild.approximatePresenceCount"
		},
		"886": {
			"sourceFileName": "src/structures/Guild.ts",
			"qualifiedName": "Guild.banner"
		},
		"887": {
			"sourceFileName": "src/structures/Guild.ts",
			"qualifiedName": "Guild.defaultMessageNotifications"
		},
		"888": {
			"sourceFileName": "src/structures/Guild.ts",
			"qualifiedName": "Guild.description"
		},
		"889": {
			"sourceFileName": "src/structures/Guild.ts",
			"qualifiedName": "Guild.discoverySplash"
		},
		"890": {
			"sourceFileName": "src/structures/Guild.ts",
			"qualifiedName": "Guild.emojis"
		},
		"891": {
			"sourceFileName": "src/structures/Guild.ts",
			"qualifiedName": "Guild.explicitContentFilter"
		},
		"892": {
			"sourceFileName": "src/structures/Guild.ts",
			"qualifiedName": "Guild.features"
		},
		"893": {
			"sourceFileName": "src/structures/Guild.ts",
			"qualifiedName": "Guild.icon"
		},
		"894": {
			"sourceFileName": "src/structures/Guild.ts",
			"qualifiedName": "Guild.iconHash"
		},
		"895": {
			"sourceFileName": "src/structures/Guild.ts",
			"qualifiedName": "Guild.id"
		},
		"896": {
			"sourceFileName": "src/structures/Guild.ts",
			"qualifiedName": "Guild.maxMembers"
		},
		"897": {
			"sourceFileName": "src/structures/Guild.ts",
			"qualifiedName": "Guild.maxPresences"
		},
		"898": {
			"sourceFileName": "src/structures/Guild.ts",
			"qualifiedName": "Guild.maxStageVideoChannelUsers"
		},
		"899": {
			"sourceFileName": "src/structures/Guild.ts",
			"qualifiedName": "Guild.maxVideoChannelUsers"
		},
		"900": {
			"sourceFileName": "src/structures/Guild.ts",
			"qualifiedName": "Guild.mfaLevel"
		},
		"901": {
			"sourceFileName": "src/structures/Guild.ts",
			"qualifiedName": "Guild.name"
		},
		"902": {
			"sourceFileName": "src/structures/Guild.ts",
			"qualifiedName": "Guild.nsfwLevel"
		},
		"903": {
			"sourceFileName": "src/structures/Guild.ts",
			"qualifiedName": "Guild.owner"
		},
		"904": {
			"sourceFileName": "src/structures/Guild.ts",
			"qualifiedName": "Guild.ownerId"
		},
		"905": {
			"sourceFileName": "src/structures/Guild.ts",
			"qualifiedName": "Guild.permissions"
		},
		"906": {
			"sourceFileName": "src/structures/Guild.ts",
			"qualifiedName": "Guild.preferredLocale"
		},
		"907": {
			"sourceFileName": "src/structures/Guild.ts",
			"qualifiedName": "Guild.premiumProgressBarEnabled"
		},
		"908": {
			"sourceFileName": "src/structures/Guild.ts",
			"qualifiedName": "Guild.premiumSubscriptionCount"
		},
		"909": {
			"sourceFileName": "src/structures/Guild.ts",
			"qualifiedName": "Guild.premiumTier"
		},
		"910": {
			"sourceFileName": "src/structures/Guild.ts",
			"qualifiedName": "Guild.publicUpdatesChannelId"
		},
		"911": {
			"sourceFileName": "src/structures/Guild.ts",
			"qualifiedName": "Guild.region"
		},
		"912": {
			"sourceFileName": "src/structures/Guild.ts",
			"qualifiedName": "Guild.roles"
		},
		"913": {
			"sourceFileName": "src/structures/Guild.ts",
			"qualifiedName": "Guild.rulesChannelId"
		},
		"914": {
			"sourceFileName": "src/structures/Guild.ts",
			"qualifiedName": "Guild.safetyAlertsChannelId"
		},
		"915": {
			"sourceFileName": "src/structures/Guild.ts",
			"qualifiedName": "Guild.splash"
		},
		"916": {
			"sourceFileName": "src/structures/Guild.ts",
			"qualifiedName": "Guild.stickers"
		},
		"917": {
			"sourceFileName": "src/structures/Guild.ts",
			"qualifiedName": "Guild.systemChannelFlags"
		},
		"918": {
			"sourceFileName": "src/structures/Guild.ts",
			"qualifiedName": "Guild.systemChannelId"
		},
		"919": {
			"sourceFileName": "src/structures/Guild.ts",
			"qualifiedName": "Guild.vanityUrlCode"
		},
		"920": {
			"sourceFileName": "src/structures/Guild.ts",
			"qualifiedName": "Guild.verificationLevel"
		},
		"921": {
			"sourceFileName": "src/structures/Guild.ts",
			"qualifiedName": "Guild.welcomeScreen"
		},
		"922": {
			"sourceFileName": "src/structures/Guild.ts",
			"qualifiedName": "Guild.widgetChannelId"
		},
		"923": {
			"sourceFileName": "src/structures/Guild.ts",
			"qualifiedName": "Guild.widgetEnabled"
		},
		"924": {
			"sourceFileName": "src/structures/GuildMember.ts",
			"qualifiedName": "GuildMember"
		},
		"925": {
			"sourceFileName": "src/structures/GuildMember.ts",
			"qualifiedName": "GuildMember.__constructor"
		},
		"926": {
			"sourceFileName": "src/structures/GuildMember.ts",
			"qualifiedName": "GuildMember"
		},
		"927": {
			"sourceFileName": "src/structures/GuildMember.ts",
			"qualifiedName": "data"
		},
		"928": {
			"sourceFileName": "src/structures/GuildMember.ts",
			"qualifiedName": "GuildMember.avatar"
		},
		"929": {
			"sourceFileName": "src/structures/GuildMember.ts",
			"qualifiedName": "GuildMember.communicationDisabledUntil"
		},
		"930": {
			"sourceFileName": "src/structures/GuildMember.ts",
			"qualifiedName": "GuildMember.deaf"
		},
		"931": {
			"sourceFileName": "src/structures/GuildMember.ts",
			"qualifiedName": "GuildMember.flags"
		},
		"932": {
			"sourceFileName": "src/structures/GuildMember.ts",
			"qualifiedName": "GuildMember.joinedAt"
		},
		"933": {
			"sourceFileName": "src/structures/GuildMember.ts",
			"qualifiedName": "GuildMember.mute"
		},
		"934": {
			"sourceFileName": "src/structures/GuildMember.ts",
			"qualifiedName": "GuildMember.nick"
		},
		"935": {
			"sourceFileName": "src/structures/GuildMember.ts",
			"qualifiedName": "GuildMember.pending"
		},
		"936": {
			"sourceFileName": "src/structures/GuildMember.ts",
			"qualifiedName": "GuildMember.permissions"
		},
		"937": {
			"sourceFileName": "src/structures/GuildMember.ts",
			"qualifiedName": "GuildMember.premiumSince"
		},
		"938": {
			"sourceFileName": "src/structures/GuildMember.ts",
			"qualifiedName": "GuildMember.roles"
		},
		"939": {
			"sourceFileName": "src/structures/GuildMember.ts",
			"qualifiedName": "GuildMember.user"
		},
		"940": {
			"sourceFileName": "src/structures/Interaction.ts",
			"qualifiedName": "Interaction"
		},
		"941": {
			"sourceFileName": "src/structures/Interaction.ts",
			"qualifiedName": "Interaction.__constructor"
		},
		"942": {
			"sourceFileName": "src/structures/Interaction.ts",
			"qualifiedName": "Interaction"
		},
		"943": {
			"sourceFileName": "src/structures/Interaction.ts",
			"qualifiedName": "data"
		},
		"944": {
			"sourceFileName": "src/structures/Interaction.ts",
			"qualifiedName": "Interaction.id"
		},
		"945": {
			"sourceFileName": "src/structures/Interaction.ts",
			"qualifiedName": "Interaction.member"
		},
		"946": {
			"sourceFileName": "src/structures/Interaction.ts",
			"qualifiedName": "Interaction.name"
		},
		"947": {
			"sourceFileName": "src/structures/Interaction.ts",
			"qualifiedName": "Interaction.type"
		},
		"948": {
			"sourceFileName": "src/structures/Interaction.ts",
			"qualifiedName": "Interaction.user"
		},
		"949": {
			"sourceFileName": "src/structures/Message.ts",
			"qualifiedName": "Message"
		},
		"950": {
			"sourceFileName": "src/structures/Message.ts",
			"qualifiedName": "Message.__constructor"
		},
		"951": {
			"sourceFileName": "src/structures/Message.ts",
			"qualifiedName": "Message"
		},
		"952": {
			"sourceFileName": "src/structures/Message.ts",
			"qualifiedName": "data"
		},
		"953": {
			"sourceFileName": "src/structures/Message.ts",
			"qualifiedName": "Message.activity"
		},
		"954": {
			"sourceFileName": "src/structures/Message.ts",
			"qualifiedName": "Message.application"
		},
		"955": {
			"sourceFileName": "src/structures/Message.ts",
			"qualifiedName": "Message.applicationId"
		},
		"956": {
			"sourceFileName": "src/structures/Message.ts",
			"qualifiedName": "Message.attachments"
		},
		"957": {
			"sourceFileName": "src/structures/Message.ts",
			"qualifiedName": "Message.author"
		},
		"958": {
			"sourceFileName": "src/structures/Message.ts",
			"qualifiedName": "Message.channelId"
		},
		"959": {
			"sourceFileName": "src/structures/Message.ts",
			"qualifiedName": "Message.components"
		},
		"960": {
			"sourceFileName": "src/structures/Message.ts",
			"qualifiedName": "Message.content"
		},
		"961": {
			"sourceFileName": "src/structures/Message.ts",
			"qualifiedName": "Message.editedTimestamp"
		},
		"962": {
			"sourceFileName": "src/structures/Message.ts",
			"qualifiedName": "Message.embeds"
		},
		"963": {
			"sourceFileName": "src/structures/Message.ts",
			"qualifiedName": "Message.flags"
		},
		"964": {
			"sourceFileName": "src/structures/Message.ts",
			"qualifiedName": "Message.id"
		},
		"965": {
			"sourceFileName": "src/structures/Message.ts",
			"qualifiedName": "Message.interaction"
		},
		"966": {
			"sourceFileName": "src/structures/Message.ts",
			"qualifiedName": "Message.mentionEveryone"
		},
		"967": {
			"sourceFileName": "src/structures/Message.ts",
			"qualifiedName": "Message.mentionChannels"
		},
		"968": {
			"sourceFileName": "src/structures/Message.ts",
			"qualifiedName": "Message.mentionRoles"
		},
		"969": {
			"sourceFileName": "src/structures/Message.ts",
			"qualifiedName": "Message.mentions"
		},
		"970": {
			"sourceFileName": "src/structures/Message.ts",
			"qualifiedName": "Message.messageReference"
		},
		"971": {
			"sourceFileName": "src/structures/Message.ts",
			"qualifiedName": "Message.nonce"
		},
		"972": {
			"sourceFileName": "src/structures/Message.ts",
			"qualifiedName": "Message.pinned"
		},
		"973": {
			"sourceFileName": "src/structures/Message.ts",
			"qualifiedName": "Message.position"
		},
		"974": {
			"sourceFileName": "src/structures/Message.ts",
			"qualifiedName": "Message.reactions"
		},
		"975": {
			"sourceFileName": "src/structures/Message.ts",
			"qualifiedName": "Message.referencedMessage"
		},
		"976": {
			"sourceFileName": "src/structures/Message.ts",
			"qualifiedName": "Message.roleSubscriptionData"
		},
		"977": {
			"sourceFileName": "src/structures/Message.ts",
			"qualifiedName": "Message.stickerItems"
		},
		"978": {
			"sourceFileName": "src/structures/Message.ts",
			"qualifiedName": "Message.stickers"
		},
		"979": {
			"sourceFileName": "src/structures/Message.ts",
			"qualifiedName": "Message.thread"
		},
		"980": {
			"sourceFileName": "src/structures/Message.ts",
			"qualifiedName": "Message.timestamp"
		},
		"981": {
			"sourceFileName": "src/structures/Message.ts",
			"qualifiedName": "Message.tts"
		},
		"982": {
			"sourceFileName": "src/structures/Message.ts",
			"qualifiedName": "Message.type"
		},
		"983": {
			"sourceFileName": "src/structures/Message.ts",
			"qualifiedName": "Message.webhookId"
		},
		"984": {
			"sourceFileName": "src/structures/Reaction.ts",
			"qualifiedName": "Reaction"
		},
		"985": {
			"sourceFileName": "src/structures/Reaction.ts",
			"qualifiedName": "Reaction.__constructor"
		},
		"986": {
			"sourceFileName": "src/structures/Reaction.ts",
			"qualifiedName": "Reaction"
		},
		"987": {
			"sourceFileName": "src/structures/Reaction.ts",
			"qualifiedName": "data"
		},
		"988": {
			"sourceFileName": "src/structures/Reaction.ts",
			"qualifiedName": "Reaction.count"
		},
		"989": {
			"sourceFileName": "src/structures/Reaction.ts",
			"qualifiedName": "Reaction.countDetails"
		},
		"990": {
			"sourceFileName": "src/structures/Reaction.ts",
			"qualifiedName": "Reaction.me"
		},
		"991": {
			"sourceFileName": "src/structures/Reaction.ts",
			"qualifiedName": "Reaction.meBurst"
		},
		"992": {
			"sourceFileName": "src/structures/Reaction.ts",
			"qualifiedName": "Reaction.emoji"
		},
		"993": {
			"sourceFileName": "src/structures/Reaction.ts",
			"qualifiedName": "Reaction.burstColors"
		},
		"994": {
			"sourceFileName": "src/structures/Reaction.ts",
			"qualifiedName": "ReactionCountDetails"
		},
		"995": {
			"sourceFileName": "src/structures/Reaction.ts",
			"qualifiedName": "ReactionCountDetails.__constructor"
		},
		"996": {
			"sourceFileName": "src/structures/Reaction.ts",
			"qualifiedName": "ReactionCountDetails"
		},
		"997": {
			"sourceFileName": "src/structures/Reaction.ts",
			"qualifiedName": "data"
		},
		"998": {
			"sourceFileName": "src/structures/Reaction.ts",
			"qualifiedName": "ReactionCountDetails.burst"
		},
		"999": {
			"sourceFileName": "src/structures/Reaction.ts",
			"qualifiedName": "ReactionCountDetails.normal"
		},
		"1000": {
			"sourceFileName": "src/structures/Reaction.ts",
			"qualifiedName": "RoleSubscriptionData"
		},
		"1001": {
			"sourceFileName": "src/structures/Reaction.ts",
			"qualifiedName": "RoleSubscriptionData.__constructor"
		},
		"1002": {
			"sourceFileName": "src/structures/Reaction.ts",
			"qualifiedName": "RoleSubscriptionData"
		},
		"1003": {
			"sourceFileName": "src/structures/Reaction.ts",
			"qualifiedName": "data"
		},
		"1004": {
			"sourceFileName": "src/structures/Reaction.ts",
			"qualifiedName": "RoleSubscriptionData.isRenewal"
		},
		"1005": {
			"sourceFileName": "src/structures/Reaction.ts",
			"qualifiedName": "RoleSubscriptionData.roleSubscriptionListingId"
		},
		"1006": {
			"sourceFileName": "src/structures/Reaction.ts",
			"qualifiedName": "RoleSubscriptionData.tierName"
		},
		"1007": {
			"sourceFileName": "src/structures/Reaction.ts",
			"qualifiedName": "RoleSubscriptionData.totalMonthsSubscribed"
		},
		"1008": {
			"sourceFileName": "src/structures/Role.ts",
			"qualifiedName": "Role"
		},
		"1009": {
			"sourceFileName": "src/structures/Role.ts",
			"qualifiedName": "Role.__constructor"
		},
		"1010": {
			"sourceFileName": "src/structures/Role.ts",
			"qualifiedName": "Role"
		},
		"1011": {
			"sourceFileName": "src/structures/Role.ts",
			"qualifiedName": "data"
		},
		"1012": {
			"sourceFileName": "src/structures/Role.ts",
			"qualifiedName": "Role.color"
		},
		"1013": {
			"sourceFileName": "src/structures/Role.ts",
			"qualifiedName": "Role.flags"
		},
		"1014": {
			"sourceFileName": "src/structures/Role.ts",
			"qualifiedName": "Role.hoist"
		},
		"1015": {
			"sourceFileName": "src/structures/Role.ts",
			"qualifiedName": "Role.icon"
		},
		"1016": {
			"sourceFileName": "src/structures/Role.ts",
			"qualifiedName": "Role.id"
		},
		"1017": {
			"sourceFileName": "src/structures/Role.ts",
			"qualifiedName": "Role.managed"
		},
		"1018": {
			"sourceFileName": "src/structures/Role.ts",
			"qualifiedName": "Role.mentionable"
		},
		"1019": {
			"sourceFileName": "src/structures/Role.ts",
			"qualifiedName": "Role.name"
		},
		"1020": {
			"sourceFileName": "src/structures/Role.ts",
			"qualifiedName": "Role.permissions"
		},
		"1021": {
			"sourceFileName": "src/structures/Role.ts",
			"qualifiedName": "Role.position"
		},
		"1022": {
			"sourceFileName": "src/structures/Role.ts",
			"qualifiedName": "Role.tags"
		},
		"1023": {
			"sourceFileName": "src/structures/Role.ts",
			"qualifiedName": "Role.unicodeEmoji"
		},
		"1024": {
			"sourceFileName": "src/structures/Role.ts",
			"qualifiedName": "RoleTag"
		},
		"1025": {
			"sourceFileName": "src/structures/Role.ts",
			"qualifiedName": "RoleTag.__constructor"
		},
		"1026": {
			"sourceFileName": "src/structures/Role.ts",
			"qualifiedName": "RoleTag"
		},
		"1027": {
			"sourceFileName": "src/structures/Role.ts",
			"qualifiedName": "data"
		},
		"1028": {
			"sourceFileName": "src/structures/Role.ts",
			"qualifiedName": "RoleTag.availableForPurchase"
		},
		"1029": {
			"sourceFileName": "src/structures/Role.ts",
			"qualifiedName": "RoleTag.botId"
		},
		"1030": {
			"sourceFileName": "src/structures/Role.ts",
			"qualifiedName": "RoleTag.guildConnections"
		},
		"1031": {
			"sourceFileName": "src/structures/Role.ts",
			"qualifiedName": "RoleTag.integrationId"
		},
		"1032": {
			"sourceFileName": "src/structures/Role.ts",
			"qualifiedName": "RoleTag.premiumSubscriber"
		},
		"1033": {
			"sourceFileName": "src/structures/Role.ts",
			"qualifiedName": "RoleTag.subscriptionListingId"
		},
		"1034": {
			"sourceFileName": "src/structures/Sticker.ts",
			"qualifiedName": "Sticker"
		},
		"1035": {
			"sourceFileName": "src/structures/Sticker.ts",
			"qualifiedName": "Sticker.__constructor"
		},
		"1036": {
			"sourceFileName": "src/structures/Sticker.ts",
			"qualifiedName": "Sticker"
		},
		"1037": {
			"sourceFileName": "src/structures/Sticker.ts",
			"qualifiedName": "data"
		},
		"1038": {
			"sourceFileName": "src/structures/Sticker.ts",
			"qualifiedName": "Sticker.asset"
		},
		"1039": {
			"sourceFileName": "src/structures/Sticker.ts",
			"qualifiedName": "Sticker.available"
		},
		"1040": {
			"sourceFileName": "src/structures/Sticker.ts",
			"qualifiedName": "Sticker.description"
		},
		"1041": {
			"sourceFileName": "src/structures/Sticker.ts",
			"qualifiedName": "Sticker.formatType"
		},
		"1042": {
			"sourceFileName": "src/structures/Sticker.ts",
			"qualifiedName": "Sticker.guildId"
		},
		"1043": {
			"sourceFileName": "src/structures/Sticker.ts",
			"qualifiedName": "Sticker.id"
		},
		"1044": {
			"sourceFileName": "src/structures/Sticker.ts",
			"qualifiedName": "Sticker.name"
		},
		"1045": {
			"sourceFileName": "src/structures/Sticker.ts",
			"qualifiedName": "Sticker.packId"
		},
		"1046": {
			"sourceFileName": "src/structures/Sticker.ts",
			"qualifiedName": "Sticker.sortValue"
		},
		"1047": {
			"sourceFileName": "src/structures/Sticker.ts",
			"qualifiedName": "Sticker.tags"
		},
		"1048": {
			"sourceFileName": "src/structures/Sticker.ts",
			"qualifiedName": "Sticker.type"
		},
		"1049": {
			"sourceFileName": "src/structures/Sticker.ts",
			"qualifiedName": "Sticker.user"
		},
		"1050": {
			"sourceFileName": "src/structures/Sticker.ts",
			"qualifiedName": "StickerItem"
		},
		"1051": {
			"sourceFileName": "src/structures/Sticker.ts",
			"qualifiedName": "StickerItem.__constructor"
		},
		"1052": {
			"sourceFileName": "src/structures/Sticker.ts",
			"qualifiedName": "StickerItem"
		},
		"1053": {
			"sourceFileName": "src/structures/Sticker.ts",
			"qualifiedName": "data"
		},
		"1054": {
			"sourceFileName": "src/structures/Sticker.ts",
			"qualifiedName": "StickerItem.formatType"
		},
		"1055": {
			"sourceFileName": "src/structures/Sticker.ts",
			"qualifiedName": "StickerItem.id"
		},
		"1056": {
			"sourceFileName": "src/structures/Sticker.ts",
			"qualifiedName": "StickerItem.name"
		},
		"1057": {
			"sourceFileName": "src/structures/Team.ts",
			"qualifiedName": "Team"
		},
		"1058": {
			"sourceFileName": "src/structures/Team.ts",
			"qualifiedName": "Team.__constructor"
		},
		"1059": {
			"sourceFileName": "src/structures/Team.ts",
			"qualifiedName": "Team"
		},
		"1060": {
			"sourceFileName": "src/structures/Team.ts",
			"qualifiedName": "data"
		},
		"1061": {
			"sourceFileName": "src/structures/Team.ts",
			"qualifiedName": "Team.icon"
		},
		"1062": {
			"sourceFileName": "src/structures/Team.ts",
			"qualifiedName": "Team.id"
		},
		"1063": {
			"sourceFileName": "src/structures/Team.ts",
			"qualifiedName": "Team.members"
		},
		"1064": {
			"sourceFileName": "src/structures/Team.ts",
			"qualifiedName": "Team.name"
		},
		"1065": {
			"sourceFileName": "src/structures/Team.ts",
			"qualifiedName": "Team.ownerUserId"
		},
		"1066": {
			"sourceFileName": "src/structures/TeamMember.ts",
			"qualifiedName": "TeamMember"
		},
		"1067": {
			"sourceFileName": "src/structures/TeamMember.ts",
			"qualifiedName": "TeamMember.__constructor"
		},
		"1068": {
			"sourceFileName": "src/structures/TeamMember.ts",
			"qualifiedName": "TeamMember"
		},
		"1069": {
			"sourceFileName": "src/structures/TeamMember.ts",
			"qualifiedName": "data"
		},
		"1070": {
			"sourceFileName": "src/structures/TeamMember.ts",
			"qualifiedName": "TeamMember.membershipState"
		},
		"1071": {
			"sourceFileName": "src/structures/TeamMember.ts",
			"qualifiedName": "TeamMember.role"
		},
		"1072": {
			"sourceFileName": "src/structures/TeamMember.ts",
			"qualifiedName": "TeamMember.teamId"
		},
		"1073": {
			"sourceFileName": "src/structures/TeamMember.ts",
			"qualifiedName": "TeamMember.user"
		},
		"1074": {
			"sourceFileName": "src/structures/ThreadChannel.ts",
			"qualifiedName": "ThreadChannel"
		},
		"1075": {
			"sourceFileName": "src/structures/ThreadChannel.ts",
			"qualifiedName": "ThreadChannel.__constructor"
		},
		"1076": {
			"sourceFileName": "src/structures/ThreadChannel.ts",
			"qualifiedName": "ThreadChannel"
		},
		"1077": {
			"sourceFileName": "src/structures/ThreadChannel.ts",
			"qualifiedName": "data"
		},
		"1078": {
			"sourceFileName": "src/structures/ThreadChannel.ts",
			"qualifiedName": "ThreadChannel.guildId"
		},
		"1079": {
			"sourceFileName": "src/structures/ThreadChannel.ts",
			"qualifiedName": "ThreadChannel.lastMessageId"
		},
		"1080": {
			"sourceFileName": "src/structures/ThreadChannel.ts",
			"qualifiedName": "ThreadChannel.memberCount"
		},
		"1081": {
			"sourceFileName": "src/structures/ThreadChannel.ts",
			"qualifiedName": "ThreadChannel.messageCount"
		},
		"1082": {
			"sourceFileName": "src/structures/ThreadChannel.ts",
			"qualifiedName": "ThreadChannel.name"
		},
		"1083": {
			"sourceFileName": "src/structures/ThreadChannel.ts",
			"qualifiedName": "ThreadChannel.ownerId"
		},
		"1084": {
			"sourceFileName": "src/structures/ThreadChannel.ts",
			"qualifiedName": "ThreadChannel.parentId"
		},
		"1085": {
			"sourceFileName": "src/structures/ThreadChannel.ts",
			"qualifiedName": "ThreadChannel.rateLimitPerUser"
		},
		"1086": {
			"sourceFileName": "src/structures/ThreadChannel.ts",
			"qualifiedName": "ThreadChannel.threadMetadata"
		},
		"1087": {
			"sourceFileName": "src/structures/ThreadChannel.ts",
			"qualifiedName": "ThreadChannel.totalMessageSent"
		},
		"1088": {
			"sourceFileName": "src/structures/Channel.ts",
			"qualifiedName": "Channel.id"
		},
		"1089": {
			"sourceFileName": "src/structures/Channel.ts",
			"qualifiedName": "Channel.type"
		},
		"1090": {
			"sourceFileName": "src/structures/ThreadChannel.ts",
			"qualifiedName": "ThreadMetaData"
		},
		"1091": {
			"sourceFileName": "src/structures/ThreadChannel.ts",
			"qualifiedName": "ThreadMetaData.__constructor"
		},
		"1092": {
			"sourceFileName": "src/structures/ThreadChannel.ts",
			"qualifiedName": "ThreadMetaData"
		},
		"1093": {
			"sourceFileName": "src/structures/ThreadChannel.ts",
			"qualifiedName": "data"
		},
		"1094": {
			"sourceFileName": "src/structures/ThreadChannel.ts",
			"qualifiedName": "ThreadMetaData.archiveTimestamp"
		},
		"1095": {
			"sourceFileName": "src/structures/ThreadChannel.ts",
			"qualifiedName": "ThreadMetaData.archived"
		},
		"1096": {
			"sourceFileName": "src/structures/ThreadChannel.ts",
			"qualifiedName": "ThreadMetaData.autoArchiveDuration"
		},
		"1097": {
			"sourceFileName": "src/structures/ThreadChannel.ts",
			"qualifiedName": "ThreadMetaData.locked"
		},
		"1098": {
			"sourceFileName": "src/structures/User.ts",
			"qualifiedName": "User"
		},
		"1099": {
			"sourceFileName": "src/structures/User.ts",
			"qualifiedName": "User.__constructor"
		},
		"1100": {
			"sourceFileName": "src/structures/User.ts",
			"qualifiedName": "User"
		},
		"1101": {
			"sourceFileName": "src/structures/User.ts",
			"qualifiedName": "data"
		},
		"1102": {
			"sourceFileName": "src/structures/User.ts",
			"qualifiedName": "User.accentColor"
		},
		"1103": {
			"sourceFileName": "src/structures/User.ts",
			"qualifiedName": "User.avatar"
		},
		"1104": {
			"sourceFileName": "src/structures/User.ts",
			"qualifiedName": "User.avatarDecoration"
		},
		"1105": {
			"sourceFileName": "src/structures/User.ts",
			"qualifiedName": "User.banner"
		},
		"1106": {
			"sourceFileName": "src/structures/User.ts",
			"qualifiedName": "User.bot"
		},
		"1107": {
			"sourceFileName": "src/structures/User.ts",
			"qualifiedName": "User.discriminator"
		},
		"1108": {
			"sourceFileName": "src/structures/User.ts",
			"qualifiedName": "User.email"
		},
		"1109": {
			"sourceFileName": "src/structures/User.ts",
			"qualifiedName": "User.flags"
		},
		"1110": {
			"sourceFileName": "src/structures/User.ts",
			"qualifiedName": "User.globalName"
		},
		"1111": {
			"sourceFileName": "src/structures/User.ts",
			"qualifiedName": "User.id"
		},
		"1112": {
			"sourceFileName": "src/structures/User.ts",
			"qualifiedName": "User.locale"
		},
		"1113": {
			"sourceFileName": "src/structures/User.ts",
			"qualifiedName": "User.mfaEnabled"
		},
		"1114": {
			"sourceFileName": "src/structures/User.ts",
			"qualifiedName": "User.premiumType"
		},
		"1115": {
			"sourceFileName": "src/structures/User.ts",
			"qualifiedName": "User.publicFlags"
		},
		"1116": {
			"sourceFileName": "src/structures/User.ts",
			"qualifiedName": "User.system"
		},
		"1117": {
			"sourceFileName": "src/structures/User.ts",
			"qualifiedName": "User.username"
		},
		"1118": {
			"sourceFileName": "src/structures/User.ts",
			"qualifiedName": "User.verified"
		},
		"1119": {
			"sourceFileName": "src/structures/WelcomeScreen.ts",
			"qualifiedName": "WelcomeScreen"
		},
		"1120": {
			"sourceFileName": "src/structures/WelcomeScreen.ts",
			"qualifiedName": "WelcomeScreen.__constructor"
		},
		"1121": {
			"sourceFileName": "src/structures/WelcomeScreen.ts",
			"qualifiedName": "WelcomeScreen"
		},
		"1122": {
			"sourceFileName": "src/structures/WelcomeScreen.ts",
			"qualifiedName": "data"
		},
		"1123": {
			"sourceFileName": "src/structures/WelcomeScreen.ts",
			"qualifiedName": "WelcomeScreen.description"
		},
		"1124": {
			"sourceFileName": "src/structures/WelcomeScreen.ts",
			"qualifiedName": "WelcomeScreen.welcomeChannels"
		},
		"1125": {
			"sourceFileName": "src/structures/WelcomeScreen.ts",
			"qualifiedName": "WelcomeChannel"
		},
		"1126": {
			"sourceFileName": "src/structures/WelcomeScreen.ts",
			"qualifiedName": "WelcomeChannel.__constructor"
		},
		"1127": {
			"sourceFileName": "src/structures/WelcomeScreen.ts",
			"qualifiedName": "WelcomeChannel"
		},
		"1128": {
			"sourceFileName": "src/structures/WelcomeScreen.ts",
			"qualifiedName": "data"
		},
		"1129": {
			"sourceFileName": "src/structures/WelcomeScreen.ts",
			"qualifiedName": "WelcomeChannel.channelId"
		},
		"1130": {
			"sourceFileName": "src/structures/WelcomeScreen.ts",
			"qualifiedName": "WelcomeChannel.description"
		},
		"1131": {
			"sourceFileName": "src/structures/WelcomeScreen.ts",
			"qualifiedName": "WelcomeChannel.emojiId"
		},
		"1132": {
			"sourceFileName": "src/structures/WelcomeScreen.ts",
			"qualifiedName": "WelcomeChannel.emojiName"
		},
		"1133": {
			"sourceFileName": "src/util/EventHandler.ts",
			"qualifiedName": "EventHandler"
		},
		"1134": {
			"sourceFileName": "src/util/EventHandler.ts",
			"qualifiedName": "EventHandler.READY"
		},
		"1135": {
			"sourceFileName": "src/util/EventHandler.ts",
			"qualifiedName": "EventHandler.READY"
		},
		"1136": {
			"sourceFileName": "src/util/EventHandler.ts",
			"qualifiedName": "client"
		},
		"1137": {
			"sourceFileName": "src/util/EventHandler.ts",
			"qualifiedName": "data"
		},
		"1138": {
			"sourceFileName": "src/util/EventHandler.ts",
			"qualifiedName": "EventHandler.MESSAGE_CREATE"
		},
		"1139": {
			"sourceFileName": "src/util/EventHandler.ts",
			"qualifiedName": "EventHandler.MESSAGE_CREATE"
		},
		"1140": {
			"sourceFileName": "src/util/EventHandler.ts",
			"qualifiedName": "client"
		},
		"1141": {
			"sourceFileName": "src/util/EventHandler.ts",
			"qualifiedName": "data"
		},
		"1144": {
			"sourceFileName": "src/util/SolaceError.ts",
			"qualifiedName": "SolaceError"
		},
		"1145": {
			"sourceFileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/globals.d.ts",
			"qualifiedName": "ErrorConstructor.captureStackTrace"
		},
		"1146": {
			"sourceFileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/globals.d.ts",
			"qualifiedName": "ErrorConstructor.captureStackTrace"
		},
		"1147": {
			"sourceFileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/globals.d.ts",
			"qualifiedName": "targetObject"
		},
		"1148": {
			"sourceFileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/globals.d.ts",
			"qualifiedName": "constructorOpt"
		},
		"1149": {
			"sourceFileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/globals.d.ts",
			"qualifiedName": "ErrorConstructor.prepareStackTrace"
		},
		"1150": {
			"sourceFileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/globals.d.ts",
			"qualifiedName": "__type"
		},
		"1151": {
			"sourceFileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/globals.d.ts",
			"qualifiedName": "__type"
		},
		"1152": {
			"sourceFileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/globals.d.ts",
			"qualifiedName": "err"
		},
		"1153": {
			"sourceFileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/globals.d.ts",
			"qualifiedName": "stackTraces"
		},
		"1154": {
			"sourceFileName": "node_modules/.pnpm/@types+node@20.6.3/node_modules/@types/node/globals.d.ts",
			"qualifiedName": "ErrorConstructor.stackTraceLimit"
		},
		"1155": {
			"sourceFileName": "src/util/SolaceError.ts",
			"qualifiedName": "SolaceError.__constructor"
		},
		"1156": {
			"sourceFileName": "src/util/SolaceError.ts",
			"qualifiedName": "SolaceError"
		},
		"1157": {
			"sourceFileName": "src/util/SolaceError.ts",
			"qualifiedName": "code"
		},
		"1158": {
			"sourceFileName": "node_modules/.pnpm/typescript@5.2.2/node_modules/typescript/lib/lib.es5.d.ts",
			"qualifiedName": "Error.name"
		},
		"1159": {
			"sourceFileName": "node_modules/.pnpm/typescript@5.2.2/node_modules/typescript/lib/lib.es5.d.ts",
			"qualifiedName": "Error.message"
		},
		"1160": {
			"sourceFileName": "node_modules/.pnpm/typescript@5.2.2/node_modules/typescript/lib/lib.es5.d.ts",
			"qualifiedName": "Error.stack"
		}
	}
}